import json

# File paths
input_file = "/Users/thomaspathe/Documents/MAThesis-MALLM/HelperData/MAL Languages/allMALfiles/jsonl_outputs/output_new.jsonl"
output_file = "/Users/thomaspathe/Documents/MAThesis-MALLM/HelperData/MAL Languages/allMALfiles/jsonl_outputs/updated_dataset.jsonl"


asset_instructions = [
    "Convert the following cyber-attack description into Meta Attack Language code.",
    "Generate a Meta Attack Language snippet that models the scenario described below.",
    "Given this cyber incident, write its equivalent representation in Meta Attack Language.",
    "Translate this attack story into valid Meta Attack Language format.",
    "Write the Meta Attack Language structure for the following description.",
    "Represent the attack behavior below in your custom Meta Attack Language.",
    "Use Meta Attack Language to capture the steps described here.",
    "Model this cybersecurity attack using Meta Attack Language syntax.",
    "Write code in Meta Attack Language to describe the attack below.",
    "Convert the input into a structured Meta Attack Language format."
]

category_instructions = [
    "Define the following group of assets under a single category using Meta Attack Language.",
    "Create a category in Meta Attack Language that includes the assets listed below.",
    "Given these related assets, write a category definition in Meta Attack Language.",
    "Group the following assets into a category using the correct Meta Attack Language syntax.",
    "Write a Meta Attack Language snippet that declares a category containing these assets.",
    "Translate the grouping below into a category definition in Meta Attack Language.",
    "Use Meta Attack Language to define a category that encompasses the following assets.",
    "Model the following group of assets under a category using Meta Attack Language.",
    "Write the Meta Attack Language representation for a category including these assets.",
    "Create a valid Meta Attack Language definition for the described asset category."
]
association_instructions = [
    "Define the relationship between these two assets using an association in Meta Attack Language.",
    "Write a Meta Attack Language association that links the following assets.",
    "Model the connection described below as an association in Meta Attack Language.",
    "Use Meta Attack Language to describe the association between the listed assets.",
    "Create an association definition in Meta Attack Language for this asset interaction.",
    "Translate this asset linkage into a valid Meta Attack Language association.",
    "Write a Meta Attack Language snippet representing this association between entities.",
    "Represent the described interaction as a Meta Attack Language association.",
    "Define an association in Meta Attack Language using the connection details below.",
    "Generate a Meta Attack Language association linking the following asset types."
]


# Load and fix the dataset
fixed_data = []
invalid_lines = []

with open(input_file, "r", encoding="utf-8") as f:
    for i, line in enumerate(f):
        try:
            entry = json.loads(line)
            entry["instruction"] = instructions[i % len(instructions)]
            fixed_data.append(entry)
        except json.JSONDecodeError as e:
            print(f"Skipping line {i + 1} due to JSON error: {e}")
            invalid_lines.append((i + 1, line))

# Write the updated file
with open(output_file, "w", encoding="utf-8") as f:
    for entry in fixed_data:
        f.write(json.dumps(entry, ensure_ascii=False) + "\n")

print(f"Updated {len(fixed_data)} entries with instructions.")
if invalid_lines:
    print(f"Skipped {len(invalid_lines)} invalid line(s).")
