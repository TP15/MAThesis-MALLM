{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset Network {\n    | authenticate -> access\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category PasswordGuessing {\n  asset Database {\n    | obtain -> cloud.authenticate\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category LateralMovement {\n  asset User {\n    | authenticate -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category NetworkIntrusion {\n  asset Network {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category CloudAccess {\n  asset Password {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PhishingAttack {\n  asset User {\n    | access -> hosts.connect\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PasswordGuessing {\n  asset Network {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category LateralMovement {\n  asset CloudService {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category CloudAccess {\n  asset CloudService {\n    | access -> db.read\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PhishingAttack {\n  asset Password {\n    | connect -> access\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PasswordGuessing {\n  asset Database {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category LateralMovement {\n  asset Network {\n    | connect -> access\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category NetworkIntrusion {\n  asset Password {\n    | access -> hosts.connect\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category CloudAccess {\n  asset Network {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PhishingAttack {\n  asset CloudService {\n    | access -> db.read\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PasswordGuessing {\n  asset Host {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category LateralMovement {\n  asset User {\n    | authenticate -> access\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category CloudAccess {\n  asset CloudService {\n    | authenticate -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PhishingAttack {\n  asset Host {\n    | connect -> access\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PasswordGuessing {\n  asset CloudService {\n    | access -> db.read\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category LateralMovement {\n  asset User {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category NetworkIntrusion {\n  asset Network {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category CloudAccess {\n  asset Password {\n    | access -> db.read\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PhishingAttack {\n  asset Network {\n    | access -> db.read\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category PasswordGuessing {\n  asset CloudService {\n    | obtain -> cloud.authenticate\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category LateralMovement {\n  asset Network {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category NetworkIntrusion {\n  asset Database {\n    | authenticate -> access\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category CloudAccess {\n  asset CloudService {\n    | access -> hosts.connect\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset User {\n    | authenticate -> access\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PasswordGuessing {\n  asset Host {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category LateralMovement {\n  asset Host {\n    | obtain -> cloud.authenticate\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category NetworkIntrusion {\n  asset Database {\n    | access -> db.read\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category CloudAccess {\n  asset Database {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PhishingAttack {\n  asset Host {\n    | access -> db.read\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category PasswordGuessing {\n  asset Host {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category LateralMovement {\n  asset CloudService {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category NetworkIntrusion {\n  asset User {\n    | access -> db.read\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category CloudAccess {\n  asset Network {\n    | reuse -> breach\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset Host {\n    | authenticate -> access\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category PasswordGuessing {\n  asset Database {\n    | reuse -> breach\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category LateralMovement {\n  asset Network {\n    | authenticate -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category CloudAccess {\n  asset Network {\n    | access -> hosts.connect\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PhishingAttack {\n  asset CloudService {\n    | access -> hosts.connect\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PasswordGuessing {\n  asset User {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category LateralMovement {\n  asset Host {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category NetworkIntrusion {\n  asset Password {\n    | reuse -> breach\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category CloudAccess {\n  asset Password {\n    | authenticate -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category PhishingAttack {\n  asset User {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PasswordGuessing {\n  asset CloudService {\n    | access -> hosts.connect\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category LateralMovement {\n  asset Database {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category NetworkIntrusion {\n  asset Password {\n    | connect -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category CloudAccess {\n  asset Password {\n    | authenticate -> access\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset Network {\n    | authenticate -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category PasswordGuessing {\n  asset User {\n    | reuse -> breach\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category LateralMovement {\n  asset Database {\n    | connect -> access\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    | access -> db.read\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category CloudAccess {\n  asset Network {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PhishingAttack {\n  asset Network {\n    | access -> hosts.connect\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category PasswordGuessing {\n  asset Network {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category LateralMovement {\n  asset Database {\n    | access -> hosts.connect\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category NetworkIntrusion {\n  asset Database {\n    | reuse -> breach\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category CloudAccess {\n  asset CloudService {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset CloudService {\n    | authenticate -> access\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PasswordGuessing {\n  asset Host {\n    | connect -> access\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category LateralMovement {\n  asset Network {\n    | access -> hosts.connect\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    | reuse -> breach\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category CloudAccess {\n  asset Host {\n    | obtain -> cloud.authenticate\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PhishingAttack {\n  asset Database {\n    | connect -> access\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PasswordGuessing {\n  asset CloudService {\n    | access -> db.read\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category LateralMovement {\n  asset Network {\n    | access -> db.read\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    | reuse -> breach\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category CloudAccess {\n  asset Password {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PhishingAttack {\n  asset Network {\n    | connect -> access\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PasswordGuessing {\n  asset Database {\n    | access -> hosts.connect\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category LateralMovement {\n  asset Network {\n    | access -> db.read\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category NetworkIntrusion {\n  asset Password {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category CloudAccess {\n  asset CloudService {\n    | authenticate -> access\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category PhishingAttack {\n  asset Host {\n    | authenticate -> access\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PasswordGuessing {\n  asset Network {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category LateralMovement {\n  asset Database {\n    | reuse -> breach\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category NetworkIntrusion {\n  asset CloudService {\n    | obtain -> cloud.authenticate\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category CloudAccess {\n  asset CloudService {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PhishingAttack {\n  asset Host {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PasswordGuessing {\n  asset Database {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category LateralMovement {\n  asset User {\n    | authenticate -> access\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker uses stolen credentials to log in to a host.", "input": "The attacker uses stolen credentials to log in to a host.", "output": "category NetworkIntrusion {\n  asset User {\n    | authenticate -> access\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category CloudAccess {\n  asset Host {\n    | connect -> access\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category PhishingAttack {\n  asset User {\n    | access -> hosts.connect\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category PasswordGuessing {\n  asset Password {\n    | connect -> access\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category LateralMovement {\n  asset User {\n    | access -> hosts.connect\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category NetworkIntrusion {\n  asset Database {\n    | access -> db.read\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category CloudAccess {\n  asset Password {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category PhishingAttack {\n  asset Network {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PasswordGuessing {\n  asset Host {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category LateralMovement {\n  asset Network {\n    | access -> hosts.connect\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker moves laterally from one host to another.", "input": "The attacker moves laterally from one host to another.", "output": "category NetworkIntrusion {\n  asset Network {\n    | connect -> access\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category CloudAccess {\n  asset Network {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category PhishingAttack {\n  asset User {\n    | reuse -> breach\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PasswordGuessing {\n  asset Database {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category LateralMovement {\n  asset Database {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category NetworkIntrusion {\n  asset Network {\n    | obtain -> cloud.authenticate\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category CloudAccess {\n  asset Database {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset Host {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [hosts] Host\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where users reuse passwords across multiple services.", "input": "Users reuse passwords across multiple services.", "output": "category PhishingAttack {\n  asset CloudService {\n    | reuse -> breach\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category PasswordGuessing {\n  asset Host {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category LateralMovement {\n  asset Password {\n    | obtain -> cloud.authenticate\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category NetworkIntrusion {\n  asset Password {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the database is accessed via guessed credentials.", "input": "The database is accessed via guessed credentials.", "output": "category CloudAccess {\n  asset CloudService {\n    | access [Exponential(0.08)] -> readData\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category PhishingAttack {\n  asset Host {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Host [host] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the user stores passwords used for cloud access.", "input": "The user stores passwords used for cloud access.", "output": "category PasswordGuessing {\n  asset CloudService {\n    | obtain -> cloud.authenticate\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category LateralMovement {\n  asset CloudService {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Database {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [databases] Database\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category NetworkIntrusion {\n  asset Database {\n    | access -> db.read\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [networks] Network\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category CloudAccess {\n  asset CloudService {\n    | access -> hosts.connect\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  CloudService [cloudservice] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker attempts to guess the password.", "input": "The attacker attempts to guess the password.", "output": "category PhishingAttack {\n  asset User {\n    guessPassword -> guessedPassword\n| guessedPassword [Exponential(0.05)] -> host.authenticate\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where accessing the cloud service allows entry to the database.", "input": "Accessing the cloud service allows entry to the database.", "output": "category PasswordGuessing {\n  asset Database {\n    | access -> db.read\n  }\n\n  asset Password {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Database [database] 1 <-- Link --> * [passwords] Password\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where the attacker accesses a network and then compromises hosts.", "input": "The attacker accesses a network and then compromises hosts.", "output": "category LateralMovement {\n  asset Network {\n    | access -> hosts.connect\n  }\n\n  asset User {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Network [network] 1 <-- Link --> * [users] User\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where phishing gives access to credentials stored by the user.", "input": "Phishing gives access to credentials stored by the user.", "output": "category NetworkIntrusion {\n  asset Password {\n    | attemptPhishing -> phish\n| phish [Exponential(0.2)] -> password.obtain\n  }\n\n  asset CloudService {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  Password [password] 1 <-- Link --> * [cloudservices] CloudService\n}"}
{"instruction": "Generate a Meta Attack Language (MAL) definition for a scenario where an attacker gains initial access through phishing.", "input": "An attacker gains initial access through phishing.", "output": "category CloudAccess {\n  asset User {\n    phish [Exponential(0.1)] -> passwords.obtain\n  }\n\n  asset Network {\n    | authenticate -> access\n    & access\n  }\n}\n\nassociations {\n  User [user] 1 <-- Link --> * [networks] Network\n}"}
