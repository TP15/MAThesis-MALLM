{"instruction": "Write a Meta Attack Language file from scratch that defines relevant assets, organizes them into categories, and models their interactions through associations.", "input": "Error: 'NoneType' object is not subscriptable", "output": "// enterpriseLang\n// Authors: Wenjun Xiong (wenjx@kth.se), Emeline Legrand, Oscar Åberg\n// Probability distributions: Quentin Biharé, Love Wessman, Lina Evensjö\n\n#id: \"org.mal_lang.attacklang\"\n#version: \"1.0.0\"\n\ncategory Person {\n    asset User {\n        | attemptMaliciousLink @hidden\n            ->  maliciousLink    \n\n        & maliciousLink //(0.712)*Exponential(1)]\n            ->  computer.os.service.attemptExploitationForClientExecution,\n                attemptMaliciousFile, // links may lead users to download files that require execution via Malicious File\n                computer.os.executeCode\n\n        | attemptMaliciousFile @hidden\n            ->  maliciousFile\n\n        & maliciousFile //(0.93)*Exponential(1)]\n            ->  computer.os.attemptDynamicDataExchange,\n                computer.os.executeCode\n\n        | attemptUserExecution @hidden\n            ->  userAccount.userExecution\n\n        | mediaInserted //(0.3)*Exponential(48)]\n            user info: \"People work in the targeted entreprise have physical access to the network and can thus easily use an infected USB device for the adversary to get initial compromise.\"\n            ->  computer.os.replicationThroughRemovableMedia,\n                computer.peripheralDevice.dataExfiltration\n\n        # userTraining //(0.22)]\n            ->  maliciousFile,\n                maliciousLink,\n                userAccount.userExecution\n    }\n}\n\ncategory Software {\n    asset UserAccount {\n        | userRights\n            ->  os.abuseElevationControlMechanism,\n                os.accountAccessRemoval,\n                os.accountDiscovery,\n                os.applicationWindowDiscovery,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptLaunchAgent,\n                os.attemptLogonScripts,\n                os.attemptPlistModification,\n                os.attemptSetuidAndSetgid,\n                os.attemptShortcutModification,\n                os.attemptSSHAuthorizedKeys,\n                os.attemptTaintSharedContent,\n                os.bash_profileAndBashrc,\n                os.bashHistory,\n                os.bruteForce,\n                os.bypassUserAccessControl,\n                os.changeDefaultFileAssociation,\n                os.clearCommandHistory,\n                os.cmstp,\n                os.commandAndScriptingInterpreter,\n                os.compileAfterDelivery,\n                os.compiledHTMLFile,\n                os.componentObjectModelHijacking,\n                os.controlPanel,\n                os.cOR_PROFILER,\n                os.credentialsInFiles,\n                os.credentialsInRegistry,\n                os.credentialStuffing,\n                os.cron,\n                os.dataDestruction,\n                os.dataEncoding,\n                os.dataFromInformationRepositories,\n                os.dataManipulation,\n                os.defaultAccounts,\n                os.deobfuscateOrDecodeFilesOrInformation,\n                os.disableOrModifyTools,\n                os.diskWipe,\n                os.dLLSearchOrderHijacking,\n                os.domainAccounts,\n                os.domainDiscovery,\n                os.domainGroups,\n                os.domainTrustDiscovery,\n                os.dynamicDataExchange,\n                os.dynamicResolution,\n                os.elevatedExecutionWithPrompt,\n                os.emailCollection,\n                os.executableInstallerFilePermissionsWeakness,\n                os.executionGuardrails,\n                os.executionThroughModuleLoad,\n                os.fileAndDirectoryDiscovery,\n                os.fileAndDirectoryPermissionsModification,\n                os.fileDeletion,\n                os.forcedAuthentication,\n                os.gatekeeperBypass,\n                os.groupPolicyModification,\n                os.groupPolicyPreferences,\n                os.gUIInputCapture,\n                os.hiddenFilesAndDirectories,\n                os.hiddenFileSystem,\n                os.hiddenWindow,\n                os.hISTCONTROL,\n                os.indicatorRemovalOnHost,\n                os.indirectCommandExecution,\n                os.inhibitSystemRecovery,\n                os.installRootCertificate,\n                os.installUtil,\n                os.internalSpearphishing,\n                os.lateralToolTransfer,\n                os.launchctl,\n                os.lC_LOAD_DYLIB_Addition,\n                os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                os.localAccounts,\n                os.localGroups,\n                os.manInTheMiddle,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.mshta,\n                os.msiexec,\n                os.networkShareConnectionRemoval,\n                os.networkShareDiscovery,\n                os.odbcconf,\n                os.goldenTicket,\n                os.parentPIDSpoofing,\n                os.passwordCracking,\n                os.passwordGuessing,\n                os.passwordPolicyDiscovery,\n                os.passwordSpraying,\n                os.pathInterceptionBySearchOrderHijacking,\n                os.peripheralDeviceDiscovery,\n                os.portableExecutableInjection,\n                os.portKnocking,\n                os.powerShellUserProfile,\n                os.privateKeys,\n                os.processDiscovery,\n                os.processDoppelganging,\n                os.processHollowing,\n                os.pubPrn,\n                os.registryRunKeysOrStartupFolder,\n                os.regsvcsOrRegasm,\n                os.regsvr32,\n                os.remoteDesktopProtocol,\n                os.remoteFileCopy, \n                os.remoteSystemDiscovery,\n                os.reopenedApplications,\n                os.resourceHijacking,\n                os.rootkit,\n                os.rundll32,\n                os.runVirtualInstance,\n                os.screensaver,\n                os.securitySoftwareDiscovery,\n                os.servicesFilePermissionsWeakness,\n                os.servicesRegistryPermissionsWeakness,\n                os.serviceStop,\n                os.signedScriptProxyExecution,\n                os.silverTicket,\n                os.sIPAndTrustProviderHijacking,\n                os.softwareDiscovery,\n                os.source,\n                os.spaceAfterFileName,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemInformationDiscovery,\n                os.systemNetworkConfigurationDiscovery,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.templateInjection,\n                os.threadExecutionHijacking,\n                os.timestomp,\n                os.trap,\n                os.trustedDeveloperUtilities,\n                os.videoCapture,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.xslScriptProcessing,\n                os.service.attemptExploitationForCredentialAccess,\n                os.service.attemptExploitationForDefenseEvasion,\n                os.service.attemptExploitationForPrivilegeEscalation,\n                os.service.attemptExploitationOfRemoteServices,\n                os.service.attemptExternalRemoteServices,\n                os.service.implantContainerImage,\n                os.service.remoteAccessSoftware,\n                os.service.cloudAccounts,\n                os.service.cloudGroups,\n                os.service.cloudServiceDiscovery,\n                os.service.cloudServiceDashboard,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.modifyCloudComputeInfrastructure,\n                os.service.officeTemplateMacros,\n                os.service.officeTest,\n                os.service.outlookForms,\n                os.service.outlookHomePage,\n                os.service.outlookRules,\n                os.service.addIns,\n                os.service.stealApplicationAccessToken,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.browser.browserBookmarkDiscovery,\n                os.service.browser.driveByCompromise,\n                os.service.browser.installExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.computer.router.internalNetwork.transmittedDataManipulation,\n                os.computer.router.externalNetwork.bidirectionaCommunication,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.computer.router.externalNetwork.deadDropResolver,\n                os.computer.router.externalNetwork.oneWayCommunication,\n                os.computer.router.externalNetwork.transmittedDataManipulation\n\n        | userCredentials\n            ->  userRights,\n                os.validAccounts,\n                os.computer.router.internalNetwork.exchangeServerCollection,\n                os.service.remoteServices\n\n        & userExecution\n            developer info: \"Binary probability relation.\"\n            ->  user.maliciousFile,\n                user.maliciousLink\n\n        | userInformation\n\n        # userTraining //(0.22)]\n            ->  os.cachedDomainCredentials,\n                os.confluence,\n                os.credentialsInFiles,\n                os.gUIInputCapture,\n                os.lSASecrets,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.nTDS,\n                os.plistModification,\n                os.reopenedApplications,\n                os.securityAccountManager,\n                os.sharepoint,\n                os.templateInjection,\n                os.twoFactorAuthenticationInterception, // remove smart cards when not in use\n                os.service.browser.browserExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.service.stealApplicationAccessToken,\n                os.service.spearphishingViaService,\n                os.service.useThirdpartySoftware\n\n        # userAccountManagement //(0.30)] \n            ->  os.accessTokenManipulation,\n                os.at,\n                os.attemptStartupItems,\n                os.bITSJobs,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.confluence,\n                os.cOR_PROFILER,\n                os.credentialStuffing,\n                os.cron,\n                os.disableOrModifySystemFirewall,\n                os.disableOrModifyTools,\n                os.disableWindowsEventLogging,\n                os.executableInstallerFilePermissionsWeakness,\n                os.indicatorBlocking,\n                os.launchAgent,\n                os.launchctl,\n                os.launchd,\n                os.launchDaemon,\n                os.manInTheBrowser,\n                os.passTheHash,\n                os.passTheTicket,\n                os.rc_common,\n                os.rDPHijacking,\n                os.remoteDesktopProtocol,\n                os.remoteScheduledTask,\n                os.scheduledTask,\n                os.servicesFilePermissionsWeakness,\n                os.serviceStop,\n                os.sharepoint,\n                os.shortcutModification,\n                os.systemdService,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsService,\n                os.winlogonHelperDLL,\n                os.service.remoteServices,\n                os.service.createSnapshot,\n                os.service.cloudServiceDashboard,\n                os.service.createCloudInstance,\n                os.service.deleteCloudInstance,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.stealApplicationAccessToken,\n                os.service.useThirdpartySoftware\n    } \n\n    asset RemoteDesktopUser extends UserAccount {\n        | userCredentials\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  os.remoteDesktopProtocol\n    }     \n\n    asset AdminAccount {\n        | adminRights\n            user info: \"Administrator is an actual account.\"\n            ->  userAccount.userRights,\n                createAccount, \n                os.abuseElevationControlMechanism,\n                os.accessibilityFeatures,\n                os.accountAccessRemoval,\n                os.appCertDLLs,\n                os.appInitDLLs,\n                os.applicationShimming,\n                os.at,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptCredentialsInFiles,\n                os.attemptDataDestruction,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptServiceRegistryPermissionsWeakness,\n                os.attemptServicesFilePermissionsWeakness,\n                os.attemptServiceStop,\n                os.attemptShortcutModification,\n                os.attemptSIDHistoryInjection,\n                os.attemptTimeProviders,\n                os.attemptWindowsAdminShares,\n                os.attemptWindowsManagementInstrumentationEventSubscription,\n                os.attemptWinlogonHelperDLL,             \n                os.authenticationPackage,\n                os.bootkit,   \n                os.clearWindowsEventLogs,\n                os.credentialAPIHooking,\n                os.credentialsFromPasswordStores,\n                os.dCShadow,\n                os.dCSync,\n                os.detailedRemoteSystemDiscovery,\n                os.disableWindowsEventLogging,\n                os.distributedComponentObjectModel,\n                os.domainControllerAuthentication,\n                os.exchangeEmailDelegatePermissions,\n                os.fileAndDirectoryDiscovery,\n                os.fileSystemLogicalOffsets,\n                os.firmwareCorruption, \n                os.groupPolicyModification,\n                os.imageFileExecutionOptionsInjection,\n                os.inhibitSystemRecovery,\n                os.lSASSDriver,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.netshHelperDLL,\n                os.networkServiceScan,\n                os.networkShareConnectionRemoval,\n                os.networkSniffing,\n                os.oSCredentialDumping,\n                os.parentPIDSpoofing,\n                os.passwordFilterDLL,\n                os.portMonitors,\n                os.powerShell,\n                os.powerShellAdminProfile,\n                os.processDiscovery,\n                os.queryRegistry,\n                os.registryRunKeysOrStartupFolder,\n                os.remoteScheduledTask,\n                os.resourceHijacking,\n                os.scheduledTask,\n                os.securitySupportProvider,\n                os.serviceExecution,\n                os.sQLStoredProcedures,\n                os.systemFirmware,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.transportAgent,\n                os.twoFactorAuthenticationInterception,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.additionalAzureServicePrincipalCredentials,\n                os.service.exchangeEmailDelegatePermissions,\n                os.service.addOffice365GlobalAdministratorRole\n             \n        | adminCredentials\n            ->  adminRights,\n                os.validAccounts,\n                os.service.remoteServices\n\n        | attemptCreateAccount @hidden\n            ->  createAccount\n\n        & createAccount //(0.05665)*Exponential(1440)]\n            ->  os.service.cloudAccount,\n                os.domainAccount,\n                os.localAccount\n\n        # privilegedAccountManagement //(0.30)]\n            ->  os.accessTokenManipulation,\n                os.domainAccount,\n                os.firmwareCorruption,\n                os.kernelModulesAndExtensions,\n                os.localAccount,\n                os.modifyRegistry,\n                os.passTheTicket,\n                os.powerShell,\n                os.remoteDesktopProtocol,\n                os.serviceExecution,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemFirmware,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.exploitationOfRemoteServices,\n                os.service.cloudAccount,\n                os.service.useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators\n                os.service.exploitHighVulnerabilityPublicFacingApplication,\n                os.service.exploitMediumVulnerabilityPublicFacingApplication,\n                os.service.exploitLowVulnerabilityPublicFacingApplication\n    }\n\n    asset Service {\n        | attemptTrustedRelationship @hidden\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n\n        & useThirdpartySoftware\n\n        | collectVideo @hidden\n\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n\n        | accessCloudBasedServiceResources\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n \n        | cloudServiceDiscovery\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n\n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n \n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        & officeTemplateMacros\n            user info: \"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system.\"\n\n        & officeTest\n            user info: \"Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.\"\n\n        & outlookForms\n            user info: \"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system.\"\n\n        & outlookHomePage\n            user info: \"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.\"\n\n        & outlookRules\n            user info: \"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system.\"\n\n        | addIns\n            user info: \"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.\"\n\n        & stealApplicationAccessToken\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n\n        & applicationDeploymentSoftware\n            user info: \"Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators.\"\n            ->  os.executeCode\n\n        | applicationHighVulnerability //(24)]\n            ->  exploitHighVulnerabilityPublicFacingApplication\n\n        | applicationMediumVulnerability //(2)]\n            ->  exploitMediumVulnerabilityPublicFacingApplication\n\n        | applicationLowVulnerability //(1)]\n            ->  exploitLowVulnerabilityPublicFacingApplication\n\n        & exploitHighVulnerabilityPublicFacingApplication //(0.5)*Exponential(2)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        & exploitMediumVulnerabilityPublicFacingApplication //(0.87)*Exponential(0.5)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        & exploitLowVulnerabilityPublicFacingApplication //(0.89)*Exponential(0.143)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        | blockUserAccess  \n\n        & implantContainerImage //(0.60)*Exponential(180)]\n            user info: \"Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored to include malicious code.\"\n            ->  os.persistence\n\n        | serviceInformation \n\n        | remoteServices //(0.04346)]\n            user info: \"An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections.\"\n            ->  os.vNC,\n                os.attemptRemoteDesktopProtocol,\n                os.attemptWindowsAdminShares,\n                os.attemptDistributedComponentObjectModel,\n                os.attemptWindowsRemoteManagement,\n                os.sSH\n\n        | remoteServiceSessionHijacking\n            user info: \"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment.\"\n            ->  os.sSHHijacking,\n                os.rDPHijacking\n\n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n\n        | informationRepositories\n            ->  os.dataCollected,\n                os.sensitiveDataCollected\n\n        | remoteAccessSoftware //(0.0789)*Exponential(106.67)]\n            ->  os.computer.router.internalNetwork.c2Connexion\n\n        | attemptSpearphishingViaService @hidden\n            ->  spearphishingViaService\n\n        & spearphishingViaService\n            user info: \"Adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.\"\n            ->  spearphishingViaPersonalEmail,\n                spearphishingViaSocialMedia\n        \n        | spearphishingViaPersonalEmail //(0.712)*Exponential(1)]\n            ->  browser.attemptSpearphishingAttachment,\n                browser.attemptSpearphishingLink\n        \n        | spearphishingViaSocialMedia //(0.4475)*Exponential(0.286)]\n            ->  browser.attemptSpearphishingAttachment,\n                browser.attemptSpearphishingLink,\n                os.bruteForce // \n\n        | supplyChainCompromise //(0.70)*(Uniform(8,30)+TruncatedNormal(0.042,0.021))]\n            user info: \"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                compromiseHardwareSupplyChain\n\n        & compromiseSoftwareDependenciesAndDevelopmentTools\n            user info: \"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        & compromiseSoftwareSupplyChain\n            user info: \"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        & compromiseHardwareSupplyChain\n            user info: \"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        | attemptExploitationForClientExecution @hidden\n            ->  exploitationForClientExecution\n\n        & exploitationForClientExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution.\"\n            ->  os.computer.user.attemptUserExecution\n\n        | attemptExploitationForCredentialAccess @hidden\n            ->  exploitationForCredentialAccess\n\n        & exploitationForCredentialAccess\n            user info: \"Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\"\n            ->  exploitationOfSQLInjection,\n                exploitationOfNTLMAuthentication         \n\n        | exploitationOfSQLInjection //(0.14)*Exponential(0.746)]   \n            ->  os.executeCode,\n                attemptExploitationForPrivilegeEscalation\n                \n        | exploitationOfNTLMAuthentication //(0.23346)*TruncatedNormal(0.011,0.00214)]\n            ->  os.executeCode,\n                attemptExploitationForPrivilegeEscalation\n\n        | attemptExploitationForDefenseEvasion @hidden\n            ->  exploitationForDefenseEvasion\n\n        & exploitationForDefenseEvasion\n            user info: \"Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery.\"\n            ->  os.bypassAntivirus,\n                os.bypassSystemAccessControls\n\n        | attemptExploitationForPrivilegeEscalation @hidden\n            ->  exploitationForPrivilegeEscalation\n\n        & exploitationForPrivilegeEscalation\n            developer info: \"Binary probability distribution.\"\n            user info: \"This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable.\"\n            ->  os.adminAccount.adminRights,\n                attemptUseThirdpartySoftware\n\n        | attemptExploitationOfRemoteServices @hidden\n            user info: \"An adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods.\"\n            ->  exploitationOfRemoteServices\n\n        & exploitationOfRemoteServices\n            ->  attemptExploitationForPrivilegeEscalation,\n                os.computer.infectedComputer\n                \n        | attemptExternalRemoteServices @hidden \n            ->  externalRemoteServices\n\n        & externalRemoteServices //(0.19)*Exponential(3)]\n            user info: \"Adversaries may use remote services to initially access and/or persist within a network.\"\n            ->  os.computer.router.internalNetwork.persistence,\n                os.computer.router.internalNetwork.remoteAccess,\n                os.attemptSystemFirmware,\n                remoteServices, // \n                attemptExploitationOfRemoteServices\n\n        # audit \n            ->  implantContainerImage\n\n        # applicationIsolationAndSandboxing\n            ->  exploitationForClientExecution,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication\n\n        # privilegedAccountManagement //(0.30)]\n            ->  implantContainerImage\n\n        # disableOrRemoveFeatureOrProgram\n            ->  exploitationOfRemoteServices,\n                externalRemoteServices\n\n        # encryptSensitiveInformation\n            ->  transmittedDataManipulation\n\n        # executionPrevention\n            ->  remoteAccessSoftware\n\n        # exploitProtection\n            ->  exploitationForClientExecution,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            ->  exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                externalRemoteServices\n\n        # threatIntelligenceProgram\n            ->  exploitationForCredentialAccess,\n                exploitationForPrivilegeEscalation,\n                exploitationForDefenseEvasion,\n                exploitationOfRemoteServices  \n\n        # passwordPolicies \n\n        # updateSoftware //(0.567125)]\n            ->  applicationDeploymentSoftware,\n                compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                os.computer.router.internalNetwork.remoteAccess\n\n        # softwareConfiguration\n\n        # activeDirectoryConfiguration\n\n        # vulnerabilityScanning //(0.653)]\n            ->  compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                exploitationOfRemoteServices\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  applicationDeploymentSoftware,\n                remoteServices,\n                cloudAccount,\n                additionalAzureServicePrincipalCredentials\n    }\n\n    asset ThirdpartySoftware extends Service {  \n        | attemptTrustedRelationship @hidden\n            +>  trustedRelationship\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n            +>  os.validAccounts // Valid Accounts used by the other party for access to internal network systems may be compromised\n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            +>  useThirdpartySoftware\n\n        & useThirdpartySoftware\n            +>  os.executeCode \n\n        # updateSoftware //(0.567125)]\n            +>  useThirdpartySoftware\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  useThirdpartySoftware\n\n        # passwordPolicies \n            +>  useThirdpartySoftware\n\n        # activeDirectoryConfiguration\n            +>  useThirdpartySoftware\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            +>  trustedRelationship,\n                useThirdpartySoftware\n    }\n\n    asset VideoCallApplication extends Service { \n        | collectVideo @hidden\n            +>  os.computer.collectVideo\n    }\n\n    asset CloudService extends Service {\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n            +>  accessCloudBasedServiceResources\n\n        | accessCloudBasedServiceResources\n\n        & stealApplicationAccessToken\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            +>  browser.spearphishingLink, //  send a link through Spearphishing Link to the target user to entice them to grant access to the application\n                applicationAccessToken\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n            user info: \"Adversaries may attempt to get a listing of cloud accounts.\"\n            +>  os.persistence\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            +>  attemptTrustedRelationship,\n                remoteServices,\n                attemptExternalRemoteServices, // \n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.firewall.bypassFirewall,\n                os.bypassHostIntrusionPrevention,\n                os.bypassApplicationControl,\n                os.bypassSystemAccessControls,\n                os.bypassAntivirus\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n            +>  sensitiveDataCollected\n\n        | cloudServiceDiscovery\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n            +>  cloudServiceInformationCollected\n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n            +>  cloudServiceInformationCollected\n   \n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n            +>  os.computer.router.internalNetwork.c2Connected // modifying or disabling a cloud firewall may enable adversary C2 communications\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n            +>  emailAddressCollected\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n            +>  persistence\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  os.internalSpearphishing\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n            +>  os.adminAccount.attemptCreateAccount\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n            +>  createSnapshot,\n                createCloudInstance,\n                deleteCloudInstance,\n                revertCloudInstance\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n            +>  os.dataFromLocalSystem,\n                os.remoteDataStaging,\n                deleteCloudInstance,\n                os.computer.router.firewall.bypassFirewall\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n            +>  os.attemptRemoteDesktopProtocol, // \n                sensitiveDataCollected\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n            +>  sensitiveDataCollected\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n            +>  blockUserAccess\n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n            +>  os.attemptServiceStop\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        & officeTemplateMacros\n            user info: \"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & officeTest\n            user info: \"Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookForms\n            user info: \"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookHomePage\n            user info: \"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookRules\n            user info: \"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        | addIns\n            user info: \"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        # disableOrRemoveFeatureOrProgram\n            +>  officeTemplateMacros\n\n        # softwareConfiguration\n            +>  officeTest\n\n        # updateSoftware //(0.567125)]\n            +>  outlookForms,\n                outlookHomePage,\n                outlookRules\n\n        # privilegedAccountManagement //(0.30)]\n            +>  additionalAzureServicePrincipalCredentials,\n                cloudAccounts,\n                exchangeEmailDelegatePermissions,\n                addOffice365GlobalAdministratorRole\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  remoteEmailCollection,\n                exchangeEmailDelegatePermissions,\n                addOffice365GlobalAdministratorRole\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            +>  cloudAccount,\n                additionalAzureServicePrincipalCredentials\n\n        # audit \n            +>  remoteEmailCollection,\n                createSnapshot,\n                createCloudInstance,\n                deleteCloudInstance,\n                disableOrModifyCloudFirewall,\n                stealApplicationAccessToken\n\n        # passwordPolicies\n            +>  cloudAccounts\n    }\n\n    asset Browser {\n        & driveByCompromise //(0.37)]\n            user info: \"A drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing.\" \n            ->  malvertising,\n                crossSiteScripting,\n                service.os.computer.user.attemptUserExecution,\n                service.attemptExploitationForClientExecution,\n                service.os.attemptGatekeeperBypass\n\n\n        | malvertising //(9,0.167)]\n            ->  service.stealApplicationAccessToken\n\n        | crossSiteScripting //(0.32)*Exponential(1)]\n            ->  service.stealApplicationAccessToken\n\n        & credentialsFromWebBrowsers //(0.625)]\n            user info: \"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\"\n            ->  service.os.userAccount.userCredentials\n \n        | phishing\n            user info: \"Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems.\"\n            ->  attemptSpearphishingAttachment,\n                attemptSpearphishingLink,\n                service.attemptSpearphishingViaService\n\n        | attemptSpearphishingLink @hidden      \n            ->  spearphishingLink\n\n        & spearphishingLink\n            user info: \"The links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution.\"\n            ->  service.os.computer.user.attemptMaliciousLink\n            \n        | attemptSpearphishingAttachment @hidden      \n            ->  spearphishingAttachment\n      \n        & spearphishingAttachment\n            user info: \"Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email.\" \n            ->  service.os.computer.user.attemptMaliciousFile,\n                service.os.attemptControlPanel // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns\n\n        | browserBookmarkDiscovery //(0.03065)*Exponential(4)]\n            user info: \"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\"\n            ->  service.os.userAccount.userInformation,\n                service.os.computer.router.internalNetwork.internalNetworkResourcesInformation\n\n        | installExtensions\n            ->  browserExtensions\n\n        & browserExtensions //(0.85)]\n            user info: \"Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser, to include credentials, and be used as an installer for a RAT for persistence.\" \n            ->  service.os.userAccount.userInformation,\n                service.os.userAccount.userCredentials,\n                service.os.persistence\n\n        & stealWebSessionCookie\n            user info: \"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials.\"\n            ->  attemptWebSessionCookie // after an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application\n\n        | attemptWebSessionCookie @hidden\n            ->  webSessionCookie\n\n        & webSessionCookie\n            user info: \"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.\"\n            ->  service.os.sensitiveDataCollected\n\n        # updateSoftware //(0.567125)]\n            ->  driveByCompromise\n\n        # exploitProtection\n            ->  driveByCompromise\n\n        # audit \n            ->  browserExtensions\n\n        # passwordPolicies \n            ->  credentialsFromWebBrowsers\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  stealWebSessionCookie\n                \n        # restrictWebBasedContent //(0.3)] // Block unknown or unused attachments by default that should not be transmitted over email.\n            ->  spearphishingAttachment, \n                spearphishingLink,\n                service.spearphishingViaService,\n                driveByCompromise,\n                service.os.commandAndScriptingInterpreter,\n                service.os.domainGenerationAlgorithms,\n                service.os.compiledHTMLFile,\n                service.os.userAccount.userExecution,\n                service.os.computer.user.maliciousLink,\n                service.os.computer.router.externalNetwork.bidirectionaCommunication,\n                service.os.computer.router.externalNetwork.deadDropResolver,\n                service.os.computer.router.externalNetwork.oneWayCommunication,\n                service.os.computer.router.externalNetwork.exfiltrationOverWebService\n    }\n\n    asset OS {\n        | attemptBITSJobs @hidden\n\n        | attemptAppCertDLLs @hidden\n\n        & appCertDLLs\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n\n        & bypassUserAccessControl //(0.277)]\n\n        | changeDefaultFileAssociation\n            user info: \"Adversaries may establish persistence by executing malicious content triggered by a file type association.\"\n\n        | attemptGatekeeperBypass @hidden\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            \n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            \n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            \n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            \n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            \n        | deobfuscateOrDecodeFilesOrInformation\n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            \n        & domainTrustDiscovery //(0.13)*Exponential(127.1)]\n            \n        & dynamicDataExchange //(0.93)*Exponential(1)]\n            user info: \"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications.\"\n            \n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n\n        & windowsRemoteManagement\n            developer info: \"Binary probability distribution. Use of Valid Acounts\"\n            user info: \"WinRM allows a user to interact with a remote system.\"\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n\n        & appInitDLLs //(0.79)*Exponential(127.1)]\n\n        & applicationShimming\n            user info: \"Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\"\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        | attemptBootkit @hidden\n\n        | attemptElevatedExecutionWithPrompt @hidden\n\n        | attemptLSASSDriver @hidden \n\n        | attemptLSASSMemory @hidden\n\n        | attemptPasswordFilterDLL @hidden\n\n        | attemptServiceExecution @hidden\n\n        | attemptServiceRegistryPermissionsWeakness @hidden\n\n        | attemptServicesFilePermissionsWeakness @hidden\n\n        | attemptSIDHistoryInjection @hidden\n            user info: \"Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\"\n\n        | attemptSIPAndTrustProviderHijacking @hidden\n\n        | attemptSQLStoredProcedures @hidden\n\n        | attemptStartupItems @hidden\n\n        | attemptSystemFirmware @hidden\n\n        | attemptTimeProviders @hidden\n\n        | attemptTransportAgent @hidden\n\n        | attemptWinlogonHelperDLL @hidden\n\n        | attemptWindowsRemoteManagement @hidden\n\n        & winlogonHelperDLL\n            user info: \"Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.\"\n\n        & authenticationPackage\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries can use Windows Authentication Packages for persistence for persistence.\"\n\n        & bootkit //(0.46)]\n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n\n        | credentialAPIHooking          \n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        & emond //(2)]\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n\n        | imageFileExecutionOptionsInjection\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n\n        | netshHelperDLL\n            user info: \"Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner.\"\n\n        & passwordFilterDLL\n            user info: \"Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains.\"\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        | portMonitors\n            user info: \"Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\"\n\n        | attemptPowerShell @hidden\n            user info: \"Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.\"\n\n        & powerShell //(0.55)]\n            user info: \"Administrator permissions are required to use PowerShell to connect to remote systems.\"    \n\n        | attemptPowerShellAdminProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n        \n        & powerShellAdminProfile //(0.5)*Exponential(2)]\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n\n        & queryRegistry //(0.05226)]\n            user info: \"The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network.\"\n\n        & rc_common\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n\n        & remoteScheduledTask\n\n        & scheduledTask //(0.33)*Exponential(54.3)]\n            user info: \"An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\"\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n\n        & securitySupportProvider\n            user info: \"An adversary may modify these Registry keys to add new SSPs.\"\n\n        & serviceExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager.\"\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        & systemFirmware\n            user info: \"System firmware may be modified by an adversary to perform or assist in malicious activity.\"\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        | attemptWindowsAdminShares @hidden\n\n        | attemptExecutionThroughAPI @hidden\n\n        | attemptAccessTokenManipulation @hidden\n\n        & accessTokenManipulation //(0.20715)]\n            user info: \"Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.\"\n\n        | attemptControlPanel @hidden\n\n        | attemptDistributedComponentObjectModel @hidden\n\n        | attemptLaunchAgent @hidden\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n\n        | attemptAccessibilityFeatures @hidden\n        \n        | attemptLogonScripts @hidden\n\n        | attemptPlistModification @hidden\n\n        | attemptRemoteDesktopProtocol @hidden\n\n        | attemptServiceStop @hidden //}\n\n        | attemptSetuidAndSetgid @hidden\n\n        | attemptShortcutModification @hidden\n\n        & shortcutModification //(0.03)]\n            user info: \"Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\"\n\n        | attemptSSHAuthorizedKeys @hidden\n\n        | attemptTaintSharedContent @hidden\n            user info: \"This is a helper attack step that requires access to shared folders.\"\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution. With File permissions, the adversary may instantly perform this technique.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n\n        & bITSJobs //(0.264)]\n            user info: \"Adversaries may abuse BITS to download, execute, and even clean up after running malicious code.\"\n\n        & cachedDomainCredentials\n            user info: \"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\"\n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        & distributedComponentObjectModel //(96)]\n            user info: \"Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM).\"\n\n        & elevatedExecutionWithPrompt\n            user info: \"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.\"\n\n        | emailCollection\n            developer info: \"Binary probability distribution. (Probabilities carried by children)\"\n            user info: \"Adversaries may target user email to collect sensitive information from a target.\"\n\n        & executableInstallerFilePermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer.\"\n\n        & executionThroughModuleLoad //(0.93)*Exponential(1)]\n            user info: \"Adversaries can use this functionality as a way to execute arbitrary code on a system.\"\n\n        & forcedAuthentication\n            user info: \"Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication.\"\n \n        & goldenTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.\"\n\n        & groupPolicyModification\n            user info: \"Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more.\"\n\n        & groupPolicyPreferences\n            user info: \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP).\"\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n\n        | indirectCommandExecution\n            user info: \"Adversaries may abuse the Windows system features for Defense Evasion.\"\n\n        & installUtil\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility.\"\n\n        & launchctl\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.\"\n\n        & lC_LOAD_DYLIB_Addition\n            user info: \"Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time.\"\n\n        & lLMNR_NBT_NS_PoisoningAndSMBRelay\n            developer info: \"Binary probability distribution. Probability carried by MiTM technique.\"\n            user info: \"AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords.\"\n\n        & lSASecrets\n            user info: \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\"\n\n        & lSASSMemory\n            user info: \"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).\"\n\n        & manInTheBrowser\n            user info: \"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques.\"\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n\n        & modifyRegistry //(0.0661)]\n            user info: \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs.\"\n\n        & msiexec\n            user info: \"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\"\n \n        | networkShareConnectionRemoval\n            user info: \"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation.\"\n\n        & networkShareDiscovery //(0.0129)]\n\n        & nTDS\n            user info: \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights.\"\n\n        & odbcconf\n            user info: \"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads.\"\n\n        | parentPIDSpoofing\n            user info: \"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.\"\n\n        & pathInterceptionBySearchOrderHijacking\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs.\"\n\n        | peripheralDeviceDiscovery //(1)]\n\n        & plistModification\n            user info: \"Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism.\"\n            developer info: \"Binary probability distribution.\"\n\n        & portableExecutableInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n\n        & powerShellUserProfile //(2)]\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n\n        & processDoppelganging\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection.\"\n\n        & processHollowing //(1440)]\n            user info: \"Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis.\"\n\n        & pubPrn\n            user info: \"Adversaries may use the trusted PubPrn script to proxy execution of malicious files.\"\n\n        & rDPHijacking\n            user info: \"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment.\"\n\n        | registryRunKeysOrStartupFolder //(0.17125)]\n            user info: \"Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\"\n\n        & regsvcsOrRegasm\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting.\"\n\n        & regsvr32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions.\"\n\n        & remoteDesktopProtocol //(0.5561)*Exponential(480)]\n            user info: \"Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session.\"\n\n        & reopenedApplications\n            user info: \"An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine.\"\n\n        & rundll32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse rundll32.exe to proxy execution of malicious code.\"\n\n        & screensaver //(0.01605)*Exponential(96)]\n            user info: \"Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.\"\n\n        & securityAccountManager\n            user info: \"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.\" \n \n        & servicesFilePermissionsWeakness //(1)]\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by services.\"\n\n        & servicesRegistryPermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\"\n\n        & serviceStop //} //(0.0837)]\n            user info: \"Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.\"\n\n        | signedScriptProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Scripts signed with trusted certificates can be used to proxy execution of malicious files.\"\n\n        & silverTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets.\"\n\n        & sIPAndTrustProviderHijacking\n            user info: \"Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system.\"\n\n        | source\n            developer info: \"Binary probability distribution.\"\n\n        | spaceAfterFileName //(1)]\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n\n        & sSHHijacking //(0.51)]\n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n\n        & sudoAndSudoCaching //(288)]\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n\n        & systemdService\n            user info: \"Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.\"\n\n        | systemServiceDiscovery //(0.0122)]\n            user info: \"Adversaries may try to get information about registered services.\"\n\n        & templateInjection\n            user info: \"Adversaries may abuse this technology to initially conceal malicious code to be executed.\"\n\n        & threadExecutionHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n\n        | trap //(0.1)]\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n\n        | trustedDeveloperUtilities\n            developer info: \"Binary probability distribution.\"\n            user info: \"An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.\"\n\n        | videoCapture //(0.74)*Exponential(0.1)]\n\n        & windowsAdminShares //(0.28)*Exponential(4114)]\n\n        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]\n            user info: \"An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions.\"\n\n        | attemptWindowsManagementInstrumentationEventSubscription @hidden\n\n        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]\n            developer info: \"We assume the dsitribution to be the same as for windowsManagementInstrumentation\"\n            user info: \"Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.\"\n\n        & xslScriptProcessing //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\"      \n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            ->  userAccount.userCredentials,\n                persistence,\n                service.additionalAzureServicePrincipalCredentials,\n                service.exchangeEmailDelegatePermissions,\n                service.addOffice365GlobalAdministratorRole\n\n        | archiveCollectedData\n            user info: \"An adversary may compress and/or encrypt data that is collected prior to exfiltration.\"\n            ->  archiveViaUtility,\n                archiveViaLibrary,\n                archiveViaCustomMethod\n\n        & archiveViaUtility\n            user info: \"An adversary may compress and/or encrypt data that is collected prior to exfiltration.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | archiveViaLibrary\n            user info: \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | archiveViaCustomMethod\n            user info: \"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n\n        | accountAccessRemoval //}\n            developer info: \"Binary probability distribution. Once they have access, adversaries may perform this technique.\"\n            user info: \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or reboot boxes to set malicious changes into place.\"\n\n        | bootOrLogonAutostartExecution\n\n        | infectedOS\n            ->  clipboardData,\n                dataFromInformationRepositories,\n                computer.infectedComputer\n\n        & clipboardData //(1)]\n            ->  adminAccount.adminCredentials,\n                userAccount.userCredentials\n\n        | accountDiscovery //(0.01967)]\n            user info: \"get account names and information\"\n            ->  service.cloudAccount,\n                service.emailAccount,\n                attemptDomainAccount,\n                attemptLocalAccount\n\n        | attemptDomainAccount @hidden\n            ->  domainAccount\n\n        & domainAccount\n            user info: \"Adversaries may attempt to get a listing of domain accounts.\"\n            ->  userAccount.userInformation,\n                persistence\n\n        | attemptLocalAccount @hidden\n            ->  localAccount\n\n        & localAccount\n            user info: \"Adversaries may attempt to get a listing of local system accounts.\"\n            ->  userAccount.userInformation,\n                persistence\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            ->  dataFromLocalSystem,\n                screenCapture,\n                visualBasic,\n                python,\n                javaScriptOrJScript\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            ->  service.browser.attemptSpearphishingAttachment,\n                executeCode\n\n        & python\n            user info: \"Adversaries may abuse Python commands and scripts for execution.\"\n            ->  executeCode\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            ->  executeCode,\n                service.browser.driveByCompromise,\n                obfuscatedFilesOrInformation\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            ->  service.browser.credentialsFromWebBrowsers\n\n        | dataManipulation //(0.65833)*Exponential(0.02)]\n            user info: \"Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity.\"\n            ->  storedDataManipulation,\n                service.transmittedDataManipulation,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation,\n                computer.router.internalNetwork.attemptTransmittedDataManipulation,\n                runtimeDataManipulation\n\n        | dataFromLocalSystem\n            developer info: \"Binary probability distribution. Distribution carried by Automated Collection.\"\n            user info: \"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\"\n            ->  attemptAutomatedCollection\n\n        | defacement\n            user info: \"Adversaries may modify visual content available internally or externally to an enterprise network.\"\n            ->  computer.router.internalNetwork.internalDefacement,\n                computer.router.externalNetwork.externalDefacement\n\n        & domainDiscovery\n            user info: \"get domain names and information\"\n\n        & domainGenerationAlgorithms \n            user info: \"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains.\" \n            ->  fallbackChannels, // leads to Fallback Channels attack\n                computer.router.internalNetwork.communicate,\n                computer.router.internalNetwork.generateDomainNames\n\n        | compromisedDataOrSystem // with probability\n            ->  attemptPrivateKeys,\n                systemNetworkConnectionsDiscovery,\n                service.browser.installExtensions,\n                computer.peripheralDevice.infectedMedia,\n                service.attemptTrustedRelationship\n\n        | attemptBinaryPadding @hidden\n            ->  binaryPadding\n\n        & binaryPadding\n            developer info: \"Binary probability distribution. Distribution carried by obfuscatedFilesOrInformation\"\n            ->  bypassSignatureBasedDetection,\n                bypassAntivirus\n\n        & applicationWindowDiscovery\n            user info: \"get a listing of opened application windows\"\n\n        & processDiscovery //(0.17)*Exponential(346)]\n            user info: \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\"\n            ->  processInjection\n\n        | collectHashInformation\n            ->  attemptPasswordCracking // leads to Brute Force: Password Cracking attack  \n\n        & compileAfterDelivery    \n            developer info: \"Binary probability distribution. Probability carried by obfuscatedFilesOrInformation\" \n            user info: \"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Spearphishing Attachment.\"\n            ->  service.browser.phishing, // source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing.\n                bypassStaticFileAnalysis,\n                bypassBinaryAnalysis,\n                bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassSignatureBasedDetection\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n\n        | attemptEncryptedChannel @hidden\n            ->  encryptedChannel\n\n        & encryptedChannel //(0.60)*Exponential(5400)]\n            user info: \"Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic.\"\n            ->  computer.router.internalNetwork.c2Connected  \n\n        | dataEncoding //(0.0614)]\n            ->  standardEncoding,\n                nonStandardEncoding\n\n        & standardEncoding\n            user info: \"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect.\" \n            ->  computer.router.internalNetwork.communicate\n\n        & nonStandardEncoding            \n            user info: \"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect.\"\n            ->  computer.router.internalNetwork.communicate\n\n        | dynamicResolution\n            user info: \"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations.\"\n            ->  fallbackChannels,\n                fastFluxDNS,\n                domainGenerationAlgorithms,\n                dNSCalculation\n\n        | fastFluxDNS\n            user info: \"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.\"\n            ->  fallbackChannels\n\n        | dNSCalculation\n            user info: \"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address.\"\n            ->  bypassEgressFiltering\n\n        | executeCode \n            ->  computer.infectedComputer,\n                computer.router.internalNetwork.remoteAccess\n\n        | attemptEndpointDenialOfService @hidden //}\n            ->  endpointDenialOfService\n\n        & endpointDenialOfService //}\n            user info: \"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users.\"\n            ->  applicationExhaustionFlood,\n                oSExhaustionFlood,\n                serviceExhaustionFlood,\n                applicationOrSystemExploitation,\n                service.applicationExhaustionFlood,\n                service.serviceExhaustionFlood,\n                service.applicationOrSystemExploitation\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n            ->  service.blockUserAccess\n\n        | oSExhaustionFlood //}\n            user info: \"Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system.\" \n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n\n        | executionGuardrails\n            user info: \"Adversaries may use guardrails and environmental keying to help protect their TTPs and evade detection.\"\n            ->  environmentalKeying\n\n        & environmentalKeying\n            user info: \"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment.\"\n            ->  payloadDelivery\n      \n        | payloadDelivery\n\n        & exfiltrationOverOtherNetworkMedium //(259.5)]\n            user info: \"Adversaries could choose to do exfiltration over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.\"     \n            ->  exfiltrationOverBluetooth,\n                computer.router.internalNetwork.dataExfiltration\n        \n        & exfiltrationOverBluetooth //(51.86)]\n            user info: \"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | fallbackChannels\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\" \n            ->  computer.router.internalNetwork.communicate  \n\n        & firmwareCorruption //} //(0.8)*Exponential(2880)]\n            user info: \"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot.\" \n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            ->  hiddenFilesAndDirectories,\n                hiddenFileSystem,\n                runVirtualInstance\n\n        & hiddenFileSystem\n            user info: \"Adversaries may use a hidden file system to conceal malicious activity from users and security tools.\" \n\n        & runVirtualInstance\n            user info: \"Adversaries may carry out malicious operations using a virtual instance to avoid detection.\"\n            ->  bypassHostIntrusionPrevention\n\n        | hiddenFilesAndDirectories //(0.0106)]\n            user info: \"To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a 'hidden' file. Adversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.\"\n            ->  bypassHostForensicAnalysis,\n                persistence\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n\n        | indicatorRemovalFromTools\n            developer info: \"Binary probability distribution\"\n            user info: \"An adversary may be able to modify the tool by removing the indicator that is no longer detected by the target's defensive systems.\"\n            ->  bypassHostIntrusionPrevention,\n                bypassLogAnalysis,\n                bypassAntivirus\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            ->  fileDeletion,\n                timestomp \n\n        | timestomp //(0.0396)]\n            user info: \"Timestomp is done on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\"\n            ->  bypassHostForensicAnalysis,\n                masquerading // hide malware and tools\n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            ->  keylogging,\n                webPortalCapture\n               \n        | keylogging\n            user info: \"Adversaries may log user keystrokes to intercept credentials as the user types them.\"\n            ->  userAccount.userCredentials \n\n        & lateralToolTransfer\n            user info: \"Adversaries may transfer tools or other files between systems in a compromised environment.\"\n\n        & webPortalCapture\n            user info: \"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service.\"\n            ->  service.attemptExternalRemoteServices, // maintain network access\n                validAccounts\n\n        | internalSpearphishing //(0.85)*Exponential(1)]\n            user info: \"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment.\" \n            ->  computer.user.attemptMaliciousFile,\n                service.applicationAccessToken,\n                service.attemptExploitationForClientExecution,\n                attemptDynamicDataExchange,\n                inputCapture\n\n        | attemptDynamicDataExchange\n\n        & manInTheMiddle //(0.35)*Exponential(1)]\n            user info: \"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\"\n            ->  networkSniffing,\n                computer.router.internalNetwork.attemptTransmittedDataManipulation,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            ->  matchLegitimateNameOrLocation,\n                rightToLeftOverride,\n                renameSystemUtilities\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        | rightToLeftOverride\n            user info: \"Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. A common use of this technique is with Spearphishing Attachment/Malicious File since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character.\"\n            ->  service.browser.attemptSpearphishingAttachment, // employ various forms of Masquerading on the file to increase the likelihood that a user will open it\n                computer.user.attemptMaliciousFile // employ various forms of Masquerading on the file to increase the likelihood that a user will open it\n\n        & renameSystemUtilities\n            user info: \"Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities.\"\n            ->  bypassFileMonitoring\n\n        & matchLegitimateNameOrLocation\n            user info: \"Adversaries may match or approximate the name or location of legitimate files when naming/placing their files.\"\n            ->  bypassFileOrPathWhitelisting\n\n        | proxy //(0.825)]\n            user info: \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure.\"\n            ->  internalProxy,\n                externalProxy,\n                attemptMultiHopProxy,\n                domainFronting\n\n        & internalProxy\n            user info: \"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        & externalProxy\n            user info: \"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | attemptMultiHopProxy @hidden\n            ->  multiHopProxy\n\n        & multiHopProxy //(0.0124)*Exponential(1440)]\n            user info: \"To disguise the source of malicious traffic, adversaries may chain together multiple proxies.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        & domainFronting\n            user info: \"Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.\"\n            ->  computer.router.internalNetwork.obfuscateNetworkTraffic,\n                computer.router.externalNetwork.obfuscateNetworkTraffic          \n\n        | attemptMultiStageChannels @hidden\n            ->  multiStageChannels\n\n        & multiStageChannels\n            user info: \"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions.\"\n            ->  computer.router.internalNetwork.c2Connected,\n                fallbackChannels\n\n        | networkDenialOfService //} //(0.4863)*Exponential(6.6)]\n            user info: \"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users.\"\n            ->  directNetworkFlood,\n                reflectionAmplification\n\n        & directNetworkFlood //} \n            user info: \"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target.\"\n            ->  applicationExhaustionFlood,\n                service.serviceExhaustionFlood\n\n        & reflectionAmplification //}\n            user info: \"Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target.\"\n            ->  applicationExhaustionFlood,\n                service.serviceExhaustionFlood\n \n        & networkSniffing //(0.0044)*Exponential(144)]\n            user info: \"An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\"\n            ->  userAccount.userCredentials\n\n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            ->  attemptBinaryPadding,\n                steganography,\n                compileAfterDelivery,\n                indicatorRemovalFromTools   \n\n        | steganography\n            developer info: \"Binary probability dsitribution.\"\n            user info: \"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult.\"\n            ->  computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptPrivateKeys @hidden\n            ->  privateKeys\n\n        & privateKeys //(0.51)]\n            developer info: \"Sources for distribution results: \"\n            user info: \"Adversaries may gather private keys from compromised systems for use in authenticating to Remote Services like SSH or for use in decrypting other collected files such as email. Private keys should require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line.\"\n            ->  service.remoteServices,\n                privateKeysWithPassphrase\n\n        | privateKeysWithPassphrase\n            developer info: \"Binary probability distribution. Probability carried by privateKeys and TTC by bruteForce/inputCapture\"\n             ->  service.remoteServices\n\n        | resourceHijacking //} //(0.046)*Exponential(48)]\n            user info: \"Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.\"\n            ->  computer.unresponsive  \n\n        & communicationThroughRemovableMedia\n\n        | remoteSystemDiscovery\n            user info: \"Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.\"\n\n        & detailedRemoteSystemDiscovery\n            user info: \"Adversaries with admin rights may get better details of the hosts enumerated\"\n               \n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            ->  attemptDisableOrModifyTools,\n                disableOrModifySystemFirewall,\n                attemptIndicatorBlocking,\n                service.disableOrModifyCloudFirewall\n\n        | attemptDisableOrModifyTools @hidden\n            ->  disableOrModifyTools\n\n        & disableOrModifyTools //(0.23)*Exponential(111.55)]\n            user info: \"Adversaries may disable security tools to avoid possible detection of their tools and activities.\"\n            ->  bypassAntivirus,\n                bypassFileMonitoring,\n                bypassHostIntrusionPrevention,\n                bypassLogAnalysis,\n                bypassSignatureBasedDetection\n\n        & disableOrModifySystemFirewall\n            user info: \"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage.\"\n            ->  computer.router.firewall.bypassFirewall,\n                computer.router.internalNetwork.c2Connected // modifying or disabling a system firewall may enable adversary C2 communications\n\n        | attemptIndicatorBlocking @hidden\n            ->  indicatorBlocking\n\n        & indicatorBlocking\n            user info: \"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.\"\n            ->  bypassAntivirus,\n                bypassHostIntrusionPrevention\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            ->  computer.router.internalNetwork.webShell\n\n        | softwareDiscovery //(0.83387)]\n            user info: \"Adversaries may attempt to get a listing of non-security related software that is installed on the system.\"\n            ->  securitySoftwareDiscovery,\n                service.attemptExploitationForPrivilegeEscalation\n\n        & securitySoftwareDiscovery\n            user info: \"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools.\"\n            developer info: \"Binary probability distribution.\"\n            ->  service.attemptExploitationForDefenseEvasion // leads to exploitation for defense evasion attack\n\n        | systemAccess\n\n        & systemInformationDiscovery //(0.7133)]\n            user info: \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\"\n            ->  processInjection,\n                systemChecks,\n                systemNetworkConfigurationDiscovery,\n                systemNetworkConnectionsDiscovery\n\n        | systemNetworkConnectionsDiscovery //(24)]\n            user info: \"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\"\n\n        | systemOwnerOrUserDiscovery\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system.\"\n            ->  userAccount.userInformation\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n\n        | systemShutdownOrReboot //}\n            user info: \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems.\"\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n\n        | attemptProtocolTunneling @hidden\n            ->  protocolTunneling\n\n        & protocolTunneling\n            user info: \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems.\"\n            ->  dynamicResolution, // DNS over HTTPS\n                proxy, // conceal C2 communications and infrastructure\n                computer.router.internalNetwork.attemptProtocolImpersonation // conceal C2 communications and infrastructure\n\n        | rootkit //(0.01255)]\n            user info: \"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.\"\n            ->  modifyAPICalls, \n                bypassAntivirus,\n                bypassFileMonitoring,\n                bypassProcessWhitelisting,\n                bypassSignatureBasedDetection, \n                bypassHostIntrusionPrevention,\n                bypassSystemAccessControls,\n                bypassFileOrPathWhitelisting\n\n        & runtimeDataManipulation //}\n            developer info: \"Binary probability distribution.\"\n            user info: \"By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n\n        | attemptApplicationLayerProtocol @hidden\n            ->  applicationLayerProtocol    \n\n        & applicationLayerProtocol //(0.20)]\n            user info: \"Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.\"\n            ->  webProtocols,\n                fileTransferProtocols,\n                mailProtocols,\n                dNS\n\n        | attemptNonApplicationLayerProtocol @hidden\n            ->  nonApplicationLayerProtocol\n\n        & nonApplicationLayerProtocol\n            user info: \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | webProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | fileTransferProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | mailProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with electronic map delivery to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        & dNS\n            user info: \"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | systemNetworkConfigurationDiscovery //(144)]\n            user info: \"Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems.\"\n\n        & twoFactorAuthenticationInterception\n            user info: \"Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources.\"\n            ->  proxy\n\n        | modifyAPICalls                \n\n        | bypassAntivirus\n\n        | bypassAutorunsAnalysis\n\n        | bypassApplicationControl\n\n        | bypassApplicationWhitelisting\n\n        | bypassBinaryAnalysis\n\n        | bypassDefensiveNetworkServiceScanning\n\n        | bypassDigitalCertificateValidation   \n\n        | bypassEgressFiltering\n\n        | bypassFileMonitoring\n\n        | bypassFileOrPathWhitelisting\n\n        | bypassFileSystemAccessControls\n\n        | bypassHeuristicDetection\n\n        | bypassHostForensicAnalysis\n        \n        | bypassHostIntrusionPrevention\n\n        | bypassProcessWhitelisting\n\n        | bypassSystemAccessControls\n\n        | bypassLogAnalysis        \n        \n        | bypassSignatureBasedDetection\n\n        | bypassStaticFileAnalysis\n\n        | bypassUserModeSignatureValidation\n        \n        | passwordPolicyDiscovery\n            developer info: \"Binary probability distribution.\"\n            ->  bruteForceWithPasswordPolicy\n\n        & bruteForceWithPasswordPolicy //(0.83)*Exponential(0.3)]\n            ->  userAccount.userCredentials // the probability distribution should be so that it has higher chance of success than the bruteforce attack\n\n        | bruteForce //(0.42)*Exponential(0.3)]\n            user info: \"Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained.\"\n            developer info: \"Sources for distribution result: Filip Wilén and Andreas Westman. 'IoT-lang: Threat modeling for Internet of Things'. Unpublished paper.\"\n            ->  passwordGuessing,\n                attemptPasswordCracking,\n                passwordSpraying,\n                credentialStuffing,\n                attemptPrivateKeys\n\n        & passTheHash //(0.16)*Exponential(480)]\n            user info: \"This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\"\n\n        & passTheTicket\n            developer info: \"Binary probability distribution\"\n            user info: \"Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password.\"\n\n        & passwordGuessing\n            user info: \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.\"\n            ->  userAccount.userCredentials // \n\n        | attemptPasswordCracking @hidden\n            ->  passwordCracking\n\n        & passwordCracking\n            user info: \"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained.\"\n            ->  userAccount.userCredentials\n\n        & passwordSpraying\n            user info: \"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials.\"\n            ->  userAccount.userCredentials        \n\n        & credentialStuffing\n            user info: \"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap.\"\n            ->  userAccount.userCredentials\n\n        | permissionGroupsDiscovery //(0.0526)]\n            user info: \"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\"\n            ->  localGroups,\n                domainGroups,\n                service.cloudGroups\n\n        & localGroups\n            user info: \"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.\" \n\n        & domainGroups\n            user info: \"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.\"\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n\n        | attemptAntivirusCheck @hidden\n            ->  antivirusCheck    \n\n        & antivirusCheck\n            ->  executeCode,\n                service.attemptExploitationForClientExecution\n\n        | persistence\n\n        | sSHCredentialInterception\n\n        & storedDataManipulation //}\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.\"    \n\n        & nonStandardPort //(0.1198)]\n            user info: \"Adversaries may communicate using a protocol and port paring that are typically not associated.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            ->  installRootCertificate\n\n        & installRootCertificate\n            user info: \"Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system.\"\n            ->  bypassDigitalCertificateValidation  \n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            ->  credentialsInFiles,\n                privateKeys,\n                service.cloudInstanceMetadataAPI\n\n        | attemptCredentialsInFiles @hidden\n            ->  credentialsInFiles\n\n        & credentialsInFiles //(0.0179)*Exponential(282)]\n            ->  userAccount.userCredentials,\n                service.browser.browserBookmarkDiscovery // associated with logins cached by a browser provides additional targets \n\n        | validAccounts\n            developer info: \"Binary probability relation.\"\n            user info: \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access.\"\n            ->  defaultAccounts,\n                attemptDomainAccounts,\n                attemptLocalAccounts,\n                service.cloudAccounts\n\n        & defaultAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // \n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | attemptDomainAccounts @hidden\n            ->  domainAccounts\n\n        & domainAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // \n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | attemptLocalAccounts @hidden\n            ->  localAccounts\n\n        & localAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // \n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | virtualizationOrSandboxEvasion //(0.18)]\n            user info: \"Adversaries may check for the presence of a virtual machine environment (VME) or sandbox to avoid potential detection of tools and activities.\"\n            ->  systemChecks,\n                userActivityBasedChecks,\n                timeBasedEvasion\n\n        | systemChecks\n            user info: \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments.\"\n            ->  bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        | userActivityBasedChecks\n            user info: \"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments.\"\n            ->  bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        | timeBasedEvasion\n            user info: \"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments.\"\n            ->  scheduledTaskOrJob,\n                attemptMultiStageChannels,\n                bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        & vNC\n            user info: \"Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC).\"\n\n        | fileDeletion //(0.1238)]\n            user info: \"Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process\"\n            ->  bypassHostForensicAnalysis\n\n        | fileAndDirectoryDiscovery //(0.3197)]\n            user info: \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.\"\n            ->  attemptAutomatedCollection\n\n        | diskWipe //}\n            user info: \"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.\"\n            ->  diskContentWipe,\n                diskStructureWipe\n\n        & diskContentWipe //} //(0.5433)*Exponential(126.437)]\n            user info: \"Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources.\"\n       \n        & diskStructureWipe //}\n            user info: \"Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources.\"\n\n        & remoteFileCopy //(0.29)]\n            user info: \"Files may be copied from one system to another to stage adversary tools or other files over the course of an operation.\"\n            ->  computer.user.attemptUserExecution, // leads to file execution attacks\n                attemptAutomatedCollection // combined with Remote File Copy attack\n        \n        | sensitiveDataCollected\n            ->  dataCompressed,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                dataSizedTransfer,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                automatedExfiltration,\n                dataEncrypted, \n                dataStaged    \n\n        | dataCollected\n            ->  dataCompressed,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                dataEncrypted,\n                dataStaged,\n                automatedExfiltration,\n                dataSizedTransfer\n\n        | dataEncrypted //(0.567)*Exponential(3.25)]\n            user info: \"Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender.\"\n            ->  computer.attemptExfiltrationOverPhysicalMedium,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                automatedExfiltration\n\n        | dataSizedTransfer\n            user info: \"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | dataStaged //(0.01025)]\n            user info: \"Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted.\"\n            ->  localDataStaging,\n                remoteDataStaging\n\n        | localDataStaging\n            user info: \"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration.\"\n            ->  archiveCollectedData, // Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data\n                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                dataCompressed,\n                dataEncrypted\n\n        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]\n            user info: \"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes.\"\n\n        | remoteDataStaging\n            user info: \"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration.\"\n            ->  archiveCollectedData,\n                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                dataCompressed,\n                dataEncrypted\n     \n        | attemptDataDestruction @hidden\n            ->  dataDestruction\n                    \n        & dataDestruction //}\n            developer info: \"Binary probability distribution.\"\n            ->  inhibitSystemRecovery // disable or delete system recovery features to augment the effects\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            ->  validAccounts,\n                oSCredentialDumping,\n                inhibitSystemRecovery\n\n        & dataCompressed //(0.75)]\n            ->  dataEncrypted,\n                automatedExfiltration,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                scheduledExfiltration\n\n        & inhibitSystemRecovery //}\n            user info: \"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.\"    \n            ->  systemShutdownOrReboot\n\n        | screenCapture\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.\" \n            ->  dataCollected\n\n        | scheduledExfiltration //(0.92)*Exponential(0.384)]\n            ->  computer.router.internalNetwork.dataExfiltration         \n    \n        | attemptExfiltrationOverAternativeProtocol @hidden\n            ->  exfiltrationOverAternativeProtocol\n\n        & exfiltrationOverAternativeProtocol //(0.79224)*Exponential(1878)]\n            ->  exfiltrationOverAsymmetricEncryptedNonC2Protocol,\n                exfiltrationOverSymmetricEncryptedNonC2Protocol,\n                exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol\n\n        | exfiltrationOverAsymmetricEncryptedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | exfiltrationOverSymmetricEncryptedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\"  \n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | dataFromInformationRepositories //(9.952)]\n            developer info: \"Sources for distribution results: See automatedCollection.md and dataFromInformationRepositories.md\"\n            user info: \"Adversaries may leverage information repositories to mine valuable information.\"\n            ->  confluence,\n                sharepoint\n\n        & confluence //(0.74)]\n            user info: \"Adversaries may leverage Confluence repositories to mine valuable information.\"\n            ->  service.informationRepositories\n   \n        & sharepoint //(0.71)]\n            user info: \"Adversaries may leverage the SharePoint repository as a source to mine valuable information.\"\n            ->  service.informationRepositories\n\n        & windowsService\n            user info: \"Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry.\"\n\n        | attemptAutomatedCollection @hidden\n            ->  automatedCollection\n\n        & automatedCollection //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results available in the ../entrepriselang_probabilities/automatedCollection.md file\"\n            user info: \"Once established within a system or network, an adversary may use automated techniques for collecting internal data.\"\n            ->  dataCollected, \n                sensitiveDataCollected\n\n        | automatedExfiltration\n            developer info: \"Binary probability distribution.\"\n            ->  attemptExfiltrationOverAternativeProtocol,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel\n\n        & networkServiceScan //(72)]\n            user info: \"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.\"\n            ->  service.attemptExploitationOfRemoteServices\n\n        # antivirus //(0.53)]\n            ->  antivirusCheck,\n                commandAndScriptingInterpreter,\n                visualBasic,\n                python,\n                service.browser.spearphishingAttachment,\n                service.browser.spearphishingLink,\n                service.spearphishingViaService   \n\n        # restrictFileAndDirectoryPermissions \n            ->  credentialsInFiles,\n                disableOrModifyTools,\n                disableOrModifySystemFirewall,\n                indicatorRemovalOnHost,\n                matchLegitimateNameOrLocation,\n                privateKeys,\n                renameSystemUtilities,\n                runtimeDataManipulation,\n                storedDataManipulation,\n                visualBasic,\n                javaScriptOrJScript,\n                computer.router.externalNetwork.dataFromCloudStorageObject,\n                computer.router.internalNetwork.taintSharedContent\n\n        # restrictRegistryPermissions\n            ->  disableOrModifyTools,\n                disableOrModifySystemFirewall\n\n        # accountUsePolicies // Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.\n            developer info: \"Binary probability relation.\"\n            ->  passwordGuessing,\n                passwordSpraying,\n                credentialStuffing\n\n        # behaviorPreventionOnEndpoint\n\n        # bootIntegrity \n            ->  firmwareCorruption,\n                service.compromiseHardwareSupplyChain\n \n        # dataBackup //(0.4567)]\n            ->  dataDestruction,\n                dataEncryptedForImpact,\n                inhibitSystemRecovery,\n                diskContentWipe,\n                diskStructureWipe,\n                computer.router.internalNetwork.internalDefacement,\n                computer.router.externalNetwork.externalDefacement\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  credentialStuffing,\n                localAccount,\n                domainAccount,\n                domainAccounts,\n                passwordGuessing,\n                passwordCracking,\n                passwordSpraying,\n                networkSniffing\n\n        # passwordPolicies \n            ->  passwordGuessing,\n                passwordCracking,\n                passwordSpraying,\n                credentialStuffing,\n                credentialsInFiles,\n                defaultAccounts,\n                localAccounts,\n                privateKeys\n\n        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.\n            ->  service.browser.driveByCompromise\n\n        # doNotMitigate // Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised.\n            ->  environmentalKeying                \n\n        # disableOrRemoveFeatureOrProgram \n            ->  javaScriptOrJScript,\n                visualBasic,\n                communicationThroughRemovableMedia,\n                commandAndScriptingInterpreter,\n                exfiltrationOverBluetooth,\n                manInTheMiddle,\n                runVirtualInstance,\n                vNC\n\n        # activeDirectoryConfiguration\n            ->  credentialsInFiles\n\n        # audit \n            ->  archiveViaUtility,\n                confluence,\n                sharepoint,\n                credentialsInFiles,\n                computer.router.externalNetwork.dataFromCloudStorageObject,\n                privateKeys,\n                python,\n                vNC\n\n        # applicationDeveloperGuidance\n\n        # codeSigning //(0.28)]\n            ->  commandAndScriptingInterpreter,\n                matchLegitimateNameOrLocation,\n                service.applicationDeploymentSoftware,\n                service.implantContainerImage\n\n        # limitHardwareInstallation\n            developer info: \"Binary probability relation.\"\n            ->  computer.hardwareAdditions,\n                computer.exfiltrationOverPhysicalMedium     \n\n        # operatingSystemConfiguration \n            ->  communicationThroughRemovableMedia,\n                domainDiscovery,\n                exfiltrationOverOtherNetworkMedium,\n                inhibitSystemRecovery,\n                installRootCertificate,\n                localAccount,\n                domainAccount\n\n        # softwareConfiguration\n            ->  installRootCertificate,\n                service.browser.stealWebSessionCookie,\n                service.browser.webSessionCookie    \n\n        # executionPrevention // Block execution of code on a system through application whitelisting, blacklisting, and/or script blocking.            \n            ->  applicationWindowDiscovery,\n                commandAndScriptingInterpreter,\n                binaryPadding,\n                service.browser.browserExtensions,\n                computer.collectAudio,\n                dataCompressed,\n                detailedRemoteSystemDiscovery,\n                domainDiscovery,\n                javaScriptOrJScript,\n                matchLegitimateNameOrLocation,\n                python,\n                runVirtualInstance, \n                systemInformationDiscovery,\n                visualBasic,\n                userAccount.userExecution,\n                userAccount.user.maliciousFile\n             \n        # privilegedAccountManagement //(0.30)]\n            ->  commandAndScriptingInterpreter,\n                domainAccounts,\n                localAccounts,\n                webPortalCapture\n\n        # encryptSensitiveInformation \n            ->  indicatorRemovalOnHost,\n                networkSniffing,\n                privateKeys,\n                storedDataManipulation,\n                computer.router.externalNetwork.dataFromCloudStorageObject  \n\n        # remoteDataStorage \n            ->  automatedCollection,\n                indicatorRemovalOnHost,\n                storedDataManipulation,\n                service.useThirdpartySoftware              \n\n        # limitSoftwareInstallation\n            ->  python,\n                vNC,\n                service.browser.browserExtensions\n\n        # updateSoftware //(0.567125)]\n            ->  firmwareCorruption\n\n        # userAccountControl\n            ->  service.trustedRelationship\n\n        # exploitProtection\n    }\n    \n    asset Windows extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptBypassUserAccessControl\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  exchangeEmailDelegatePermissions\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  attemptScheduledTask, // at can be used to schedule a task on a system\n                executeCode\n\n        | attemptAppCertDLLs @hidden\n            +>  appCertDLLs \n            \n        & appCertDLLs\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n            +>  processInjection\n\n        | attemptAppInitDLLs @hidden\n            ->  appInitDLLs\n            \n        & appInitDLLs //(0.79)*Exponential(127.1)]\n            +>  persistence\n\n        | attemptAccessibilityFeatures @hidden\n            +>  accessibilityFeatures\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n            +>  persistence\n\n        | attemptBITSJobs @hidden\n            +>  bITSJobs\n\n        & bITSJobs //(0.264)]\n            user info: \"Adversaries may abuse BITS to download, execute, and even clean up after running malicious code.\"\n            +>  executeCode,\n                persistence,\n                attemptExfiltrationOverAternativeProtocol // BITS upload functionalities can be used to perform Exfiltration Over Alternative Protocol\n\n        | bootOrLogonAutostartExecution\n            +>  registryRunKeysOrStartupFolder,\n                authenticationPackage,\n                attemptTimeProviders,\n                attemptWinlogonHelperDLL,\n                attemptLSASSDriver,\n                attemptShortcutModification,\n                securitySupportProvider,\n                portMonitors\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                networkLogonScripts\n\n        | networkLogonScripts\n            user info: \"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence.\"\n            ->  computer.router.internalNetwork.persistence\n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n            +>  attemptPowerShell, // these logs may be cleared through PowerShell\n                bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassLogAnalysis\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            +>  attemptBypassUserAccessControl, // leads to Bypass User Account Control attack\n                codeProxyExecution,\n                bypassAntivirus\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n            ->  attemptBypassUserAccessControl\n\n        | collectHashInformation\n            +>  attemptPassTheHash, // leads to Pass the Hash attack\n                networkSniffing // leads to Network Sniffing attack\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  windowsCommandShell,\n                attemptPowerShell\n\n        | attemptComponentObjectModel @hidden\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  componentObjectModel\n\n        & componentObjectModel //(96)]\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  executeCode\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptWindowsService\n\n        | attemptDistributedComponentObjectModel @hidden\n            +>  distributedComponentObjectModel\n\n        & distributedComponentObjectModel //(96)]\n            user info: \"Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM).\"\n            +>  computer.router.internalNetwork.remoteCOMExecution\n\n        | attemptControlPanel @hidden\n            +>  controlPanel\n\n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            +>  executeCode,\n                bypassApplicationControl,\n                service.browser.phishing // malicious Control Panel items can be delivered via Phishing campaigns\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            +>  processInjection,\n                persistence            \n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n            +>  bypassFileMonitoring,\n                bypassHostIntrusionPrevention, \n                bypassAntivirus         \n\n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            +>  computer.user.attemptUserExecution, // leads to User Execution attack\n                bypassApplicationWhitelisting,\n                bypassDigitalCertificateValidation   \n\n        | attemptCOR_PROFILER @hidden\n            ->  cOR_PROFILER\n\n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n            +>  persistence,\n                attemptBypassUserAccessControl, // to elevate privileges \n                attemptComponentObjectModel,\n                impareDefenses\n\n        | credentialAPIHooking\n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n            +>  userAccount.userCredentials\n\n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            +>  userAccount.userCredentials\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n            +>  attemptSIDHistoryInjection,\n                bypassLogAnalysis\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n            +>  attemptGoldenTicket, // hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket\n                attemptSilverTicket,\n                accountManipulation // hashes can then be used to change an account's password\n\n        & dynamicLinkLibraryInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & portableExecutableInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadExecutionHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & asynchronousProcedureCall\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadLocalStorage\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | deobfuscateOrDecodeFilesOrInformation \n            +>  bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassSignatureBasedDetection,\n                computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection     \n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n            +>  bypassLogAnalysis\n\n        | attemptDLLSearchOrderHijacking @hidden\n            ->  dLLSearchOrderHijacking \n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            +>  bypassProcessWhitelisting,\n                attemptBypassUserAccessControl,\n                userAccount.userRights,\n                attemptLSASSDriver,\n                service.attemptExploitationForPrivilegeEscalation                   \n               \n        | dLLSideLoading //(0.0755)]\n            ->  bypassProcessWhitelisting,\n                bypassAntivirus,\n                attemptLSASSDriver\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        | attemptLSASSDriver @hidden \n            +>  lSASSDriver\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n            +>  executeCode,\n                persistence\n\n        & cachedDomainCredentials\n            user info: \"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\"\n            +>  collectHashInformation,\n                attemptDomainAccounts\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  changeDefaultFileAssociation,\n                screensaver,\n                attemptWindowsManagementInstrumentationEventSubscription,\n                netshHelperDLL,\n                attemptAccessibilityFeatures,\n                attemptAppCertDLLs,\n                attemptAppInitDLLs,\n                attemptApplicationShimming,\n                imageFileExecutionOptionsInjection,\n                powerShellUserProfile,\n                powerShellAdminProfile,             \n                componentObjectModelHijacking\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  ntfsFileAttributes,\n                attemptHiddenWindow\n\n        & lSASecrets\n            user info: \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\"\n            +>  userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  attemptCOR_PROFILER,\n                attemptDLLSearchOrderHijacking,\n                dLLSideLoading,\n                executableInstallerFilePermissionsWeakness,\n                pathInterception,\n                attemptServicesFilePermissionsWeakness,\n                servicesRegistryPermissionsWeakness\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  disableWindowsEventLogging\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearWindowsEventLogs,\n                networkShareConnectionRemoval \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            +>  credentialAPIHooking,\n                attemptGUIInputCapture\n\n        & lateralToolTransfer\n            user info: \"Adversaries may transfer tools or other files between systems in a compromised environment.\"\n            +>  attemptWindowsAdminShares, // copy files laterally between internal victim systems using inherent file sharing protocols\n                attemptRemoteDesktopProtocol\n\n        & manInTheMiddle //(0.35)*Exponential(1)]\n            user info: \"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\"\n            +>  attemptLLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  invalidCodeSignature,\n                masqueradeTaskOrService\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  domainControllerAuthentication,\n                attemptPasswordFilterDLL\n\n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n            +>  fileProxyExecution,\n                bypassDigitalCertificateValidation,\n                bypassApplicationControl\n\n        & msiexec\n            user info: \"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution     \n\n        & odbcconf\n            user info: \"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  internalSpearphishing\n     \n        | executeCode \n            +>  componentFirmware,\n                service.attemptExploitationForPrivilegeEscalation,\n                computer.infectedWindowsComputer         \n\n        | attemptExecutionThroughAPI @hidden\n            +>  executionThroughAPI       \n\n        & executionThroughAPI //(0.56)]\n            user info: \"Adversary tools may directly use the Windows application programming interface (API) to execute binaries.\" \n            ->  executeCode,\n                processInjection\n\n        & executionThroughModuleLoad //(0.93)*Exponential(1)]\n            user info: \"Adversaries can use this functionality as a way to execute arbitrary code on a system.\"\n            +>  executeCode    \n        \n        & extraWindowMemoryInjection\n            user info: \"Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  windowsFileAndDirectoryPermissionsModification\n\n        & windowsFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptAccessibilityFeatures, // leads to Accessibility Features attack\n                bootOrLogonInitializationScripts, //leads to Logon Scripts attack\n                hijackExecutionFlow\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n            +>  bypassFileMonitoring,\n                bypassFileSystemAccessControls\n\n        | attemptFileSystemPermissionsWeakness @hidden\n            ->  fileSystemPermissionsWeakness\n\n        & fileSystemPermissionsWeakness //(1)]\n            user info: \"Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level.\"\n            ->  executeCode,\n                persistence,\n                attemptDLLSearchOrderHijacking,\n                attemptBypassUserAccessControl\n\n        & forcedAuthentication\n            user info: \"Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication.\"\n            +>  templateInjection,\n                bruteForce\n\n        & groupPolicyModification\n            user info: \"Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more.\"\n            +>  attemptScheduledTask, // leads to Scheduled Task attack\n                attemptDisableOrModifyTools, // leads to Disabling Security Tools attack\n                remoteFileCopy, // leads to Remote File Copy attack\n                attemptServiceExecution, // leads to Service Execution attack\n                adminAccount.attemptCreateAccount,\n                bypassSystemAccessControls,\n                bypassFileSystemAccessControls\n\n        & groupPolicyPreferences\n            user info: \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP).\"\n            +>  userAccount.userCredentials\n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  bypassUserAccessControl,\n                userAccount.userCredentials,\n                privateKeysWithPassphrase\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n\n        | imageFileExecutionOptionsInjection\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n            +>  bypassAutorunsAnalysis,\n                processInjection\n\n        | indirectCommandExecution\n            user info: \"Adversaries may abuse the Windows system features for Defense Evasion.\"\n            +>  executeCode,\n                bypassStaticFileAnalysis,\n                bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting\n\n        & installUtil\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility.\"\n            +>  codeProxyExecution  \n\n        | interProcessCommunication\n            user info: \"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution.\"\n            ->  attemptComponentObjectModel,\n                attemptDynamicDataExchange\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n            +>  attemptServiceStop\n\n        | stealOrForgeKerberosTickets\n            developer info: \"Binary probability dsitribution. Distribution carried by oSCredentialDumping\"\n            user info: \"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket.\"\n            ->  goldenTicket,\n                silverTicket,\n                kerberoasting\n\n        | attemptGoldenTicket @hidden\n            ->  goldenTicket\n\n        & goldenTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.\"\n            +>  attemptPassTheTicket,\n                dCShadow\n\n        | attemptSilverTicket @hidden\n            ->  silverTicket\n\n        & silverTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets.\"\n            +>  attemptPassTheTicket\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            +>  attemptHiddenWindow\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            +>  attemptHiddenWindow\n\n        & kerberoasting\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).\"\n            ->  attemptSilverTicket,\n                bruteForce,\n                persistence,\n                service.attemptExploitationForPrivilegeEscalation,\n                validAccounts\n\n        | attemptLLMNR_NBT_NS_PoisoningAndSMBRelay @hidden\n            ->  lLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        & lLMNR_NBT_NS_PoisoningAndSMBRelay\n            developer info: \"Binary probability distribution. Probability carried by MiTM technique.\"\n            user info: \"AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords.\"\n            +>  networkSniffing,\n                bruteForce\n\n        | attemptLSASSMemory @hidden\n            +>  lSASSMemory\n\n        & lSASSMemory\n            user info: \"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).\"\n            +>  useAlternateAuthenticationMaterial // harvest credential materials for Lateral Movement\n\n        | useAlternateAuthenticationMaterial\n            user info: \"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\"\n            ->  passTheHash,\n                passTheTicket,\n                service.browser.webSessionCookie,\n                service.applicationAccessToken\n\n        & manInTheBrowser\n            user info: \"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques.\"\n            +>  service.browser.driveByCompromise\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n            +>  bypassHostIntrusionPrevention\n\n        & modifyRegistry //(0.0661)]\n            user info: \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs.\"\n            +>  persistence,\n                securitySupportProvider,\n                bypassHostForensicAnalysis\n\n        | netshHelperDLL\n            user info: \"Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner.\"\n            +>  persistence\n\n        | networkShareConnectionRemoval\n            user info: \"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation.\"\n            +>  bypassHostForensicAnalysis\n\n        & nTDS\n            user info: \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights.\"\n            +>  collectHashInformation\n\n        | attemptWindowsService @hidden\n            ->  windowsService\n\n        & windowsService\n            user info: \"Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry.\"\n            +>  service.attemptExploitationForPrivilegeEscalation, // an adversary may also use a service to escalate privileges from administrator to SYSTEM\n                masquerading, // benign software with Masquerading\n                persistence\n\n        & ntfsFileAttributes //(0.00702)]\n            user info: \"Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files, to evade some defenses, such as static indicator scanning tools and anti-virus.\"\n            ->  bypassSignatureBasedDetection,\n                bypassHostForensicAnalysis,\n                bypassAntivirus\n\n        | officeApplicationStartup\n            user info: \"There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started.\"\n            ->  service.officeTemplateMacros,\n                service.officeTest,\n                service.outlookForms,\n                service.outlookHomePage,\n                service.outlookRules,\n                service.addIns\n\n        | attemptPasswordFilterDLL @hidden\n            +>  passwordFilterDLL    \n\n        & passwordFilterDLL\n            user info: \"Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains.\"\n            +>  adminAccount.adminCredentials\n\n        | attemptPassTheHash @hidden\n            ->  passTheHash\n\n        & passTheHash //(0.16)*Exponential(480)]\n            user info: \"This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\"\n            +>  computer.router.internalNetwork.remoteSystemsConnection, // PtH may be used to perform actions on local or remote systems\n                bypassSystemAccessControls\n\n        | attemptPassTheTicket @hidden\n            ->  passTheTicket\n\n        & passTheTicket\n            developer info: \"Binary probability distribution\"\n            user info: \"Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password.\"\n            +>  computer.router.internalNetwork.remoteAccess // gain remote access \n\n        | parentPIDSpoofing\n            user info: \"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.\"\n            +>  bypassHostForensicAnalysis,\n                bypassHeuristicDetection,\n                service.browser.attemptSpearphishingAttachment,\n                service.attemptExploitationForPrivilegeEscalation,\n                commandAndScriptingInterpreter\n\n        & executableInstallerFilePermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer.\"\n            +>  attemptDLLSearchOrderHijacking,\n                attemptBypassUserAccessControl\n\n        & pathInterception //(0.0352)]\n            user info: \"Adversaries may take advantage of performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking.\"\n            ->  pathInterceptionByPATHEnvironmentVariable,\n                pathInterceptionBySearchOrderHijacking,\n                pathInterceptionByUnquotedPath\n\n        | pathInterceptionByPATHEnvironmentVariable\n            user info: \"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries.\"\n\n        & pathInterceptionBySearchOrderHijacking\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs.\"\n            +>  attemptDLLSearchOrderHijacking        \n\n        | pathInterceptionByUnquotedPath\n            user info: \"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.\"\n            ->  executeCode,\n                persistence\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n            +>  attemptSystemFirmware,\n                componentFirmware,\n                bootkit\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  attemptScheduledTask,\n                at\n\n        & securityAccountManager\n            user info: \"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.\" \n            +>  collectHashInformation,\n                attemptLocalAccounts\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            +>  attemptSQLStoredProcedures,\n                attemptTransportAgent\n\n        | attemptServicesFilePermissionsWeakness @hidden\n            +>  servicesFilePermissionsWeakness\n\n        & servicesFilePermissionsWeakness //(1)]\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by services.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & servicesRegistryPermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptSQLStoredProcedures @hidden\n            +>  sQLStoredProcedures\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse Microsoft transport agents to establish persistent access to systems.\"\n            +>  persistence\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            +>  codeSigningCertificate,\n                sIPAndTrustProviderHijacking\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n            +>  serviceExecution\n\n        | attemptTransportAgent @hidden\n            +>  transportAgent\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        | attemptPowerShell @hidden\n            user info: \"Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.\"\n            +>  powerShell,\n                windowsRemoteManagement, // call with the winrm\n                computer.user.attemptUserExecution,\n                commandAndScriptingInterpreter\n\n        & powerShell //(0.55)]\n            user info: \"Administrator permissions are required to use PowerShell to connect to remote systems.\"    \n            +>  computer.router.internalNetwork.remoteSystemsConnection,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation,\n                attemptIndicatorBlocking, // tampering settings that control the collection and flow of event telemetry\n                attemptGUIInputCapture, // collect credentials\n                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment\n                systemChecks,\n                persistence,\n                attemptHiddenWindow // make windows hidden\n\n        | attemptPowerShellUserProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n            ->  powerShellUserProfile\n\n        & powerShellUserProfile //(2)]\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n            +>  persistence\n\n        | attemptPowerShellAdminProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n            +>  powerShellAdminProfile\n        \n        & powerShellAdminProfile //(0.5)*Exponential(2)]\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & processDoppelganging\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection.\"\n            +>  bypassAntivirus,\n                bypassApplicationControl    \n\n        & processHollowing //(1440)]\n            user info: \"Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis.\"\n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            +>  dynamicLinkLibraryInjection,\n                portableExecutableInjection,\n                threadExecutionHijacking,\n                asynchronousProcedureCall,\n                threadLocalStorage,\n                extraWindowMemoryInjection,\n                processHollowing,\n                processDoppelganging\n\n        | codeProxyExecution\n            ->  bypassApplicationControl,\n                bypassDigitalCertificateValidation\n\n        | fileProxyExecution\n            ->  bypassApplicationControl,\n                bypassDigitalCertificateValidation\n\n        & rDPHijacking\n            user info: \"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment.\"\n            +>  userAccount.userCredentials,\n                remoteSystemDiscovery\n\n        | rDPSessionHijacking\n            user info: \"Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session.\"\n\n        | registryRunKeysOrStartupFolder //(0.17125)]\n            user info: \"Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\"\n            +>  masquerading, // leads to Masquerading attack\n                service.remoteAccessSoftware,\n                persistence\n\n        & regsvcsOrRegasm\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting.\"\n            +>  codeProxyExecution, \n                attemptComponentObjectModel // register .NET Component Object Model (COM) assemblies\n\n        & regsvr32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions.\"\n            +>  bypassAntivirus,\n                codeProxyExecution,\n                componentObjectModelHijacking // establish Persistence via Component Object Model Hijacking\n\n        | attemptRemoteDesktopProtocol @hidden\n            +>  remoteDesktopProtocol\n\n        & remoteDesktopProtocol //(0.5561)*Exponential(480)]\n            user info: \"Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session.\"\n            +>  attemptAccessibilityFeatures,\n                remoteSystemDiscovery,\n                rDPSessionHijacking,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel\n\n        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]\n            user info: \"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes.\"\n            +>  communicationThroughRemovableMedia,\n                computer.peripheralDevice.infectedMedia\n\n        | rootkit //(0.01255)]\n            user info: \"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.\"\n            +>  credentialAPIHooking, // leads to hooking attack\n                attemptSystemFirmware // leads to system firmware attack\n\n        & rundll32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse rundll32.exe to proxy execution of malicious code.\"\n            +>  bypassAntivirus,\n                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment\n                codeProxyExecution,\n                attemptControlPanel // rundll32.exe can also be used to execute Control Panel Item files\n\n        & screensaver //(0.01605)*Exponential(96)]\n            user info: \"Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.\"\n            +>  persistence\n\n        | searchOrderHijacking\n            user info: \"Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path.\"\n            ->  attemptDLLSearchOrderHijacking // Search order hijacking is a common practice for DLL Search Order Hijacking   \n\n        & securitySupportProvider\n            user info: \"An adversary may modify these Registry keys to add new SSPs.\"\n            +>  persistence\n\n        | attemptServiceExecution @hidden\n            +>  serviceExecution\n\n        & serviceExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager.\"\n            +>  attemptWindowsService // Adversaries may also directly start services through Service Execution\n\n        | attemptServiceRegistryPermissionsWeakness @hidden\n            +>  serviceRegistryPermissionsWeakness\n\n        & serviceRegistryPermissionsWeakness\n            user info: \"When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptShortcutModification @hidden\n            +>  shortcutModification\n\n        & shortcutModification //(0.03)]\n            user info: \"Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\"\n            +>  executeCode,\n                persistence,\n                masquerading // create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program\n\n        | attemptSIDHistoryInjection @hidden\n            user info: \"Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\"\n            +>  sIDHistoryInjection\n\n        & sIDHistoryInjection\n            developer info: \"Binary probability dsitribution. Distribution carried by parents\"\n            user info: \"This is a helper attack step. Adversaries may utilize DCShadow to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence.\"           \n            ->  persistence,\n                service.remoteServices, // leads to Remote Services attack\n                attemptWindowsAdminShares, // leads to Windows Admin Shares attack    \n                windowsRemoteManagement // leads to Windows Remote Management attack          \n\n        | signedBinaryProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application whitelisting and signature validation on systems.\"\n            ->  compiledHTMLFile,\n                attemptControlPanel,\n                cmstp,\n                installUtil,\n                mshta,\n                msiexec,\n                odbcconf,\n                regsvcsOrRegasm,\n                regsvr32,\n                rundll32        \n\n        | signedScriptProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Scripts signed with trusted certificates can be used to proxy execution of malicious files.\"\n            +>  pubPrn\n\n        & pubPrn\n            user info: \"Adversaries may use the trusted PubPrn script to proxy execution of malicious files.\"\n            +>  fileProxyExecution\n\n        | attemptSIPAndTrustProviderHijacking @hidden\n            +>  sIPAndTrustProviderHijacking\n\n        & sIPAndTrustProviderHijacking\n            user info: \"Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system.\"\n            +>  bypassApplicationControl,\n                bypassAutorunsAnalysis,\n                bypassDigitalCertificateValidation,\n                bypassUserModeSignatureValidation \n\n        | attemptSoftwarePacking @hidden\n            ->  softwarePacking\n\n        & softwarePacking //(0.56784)]\n            user info: \"Packing an executable changes the file signature in an attempt to avoid signature-based detection.\"\n            ->  indicatorRemovalFromTools,\n                bypassSignatureBasedDetection,\n                bypassAntivirus,\n                bypassHeuristicDetection\n\n        | systemServiceDiscovery //(0.0122)]\n            user info: \"Adversaries may try to get information about registered services.\"\n            +>  service.serviceInformation \n\n        | attemptTaintSharedContent @hidden\n            user info: \"This is a helper attack step that requires access to shared folders.\"\n            +>  computer.router.internalNetwork.taintSharedContent   \n\n        & templateInjection\n            user info: \"Adversaries may abuse this technology to initially conceal malicious code to be executed.\"\n            +>  bypassStaticFileAnalysis, \n                forcedAuthentication, // leads to Forced Authentication attack\n                service.browser.spearphishingAttachment, // can be delivered via Spearphishing Attachment\n                attemptTaintSharedContent // can be delivered via Taint Shared Content\n\n        | attemptTimeProviders @hidden\n            +>  timeProviders\n\n        & timeProviders\n            user info: \"Adversaries may abuse Windows Time service to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider.\"\n            ->  persistence\n\n        | trustedDeveloperUtilities\n            developer info: \"Binary probability distribution.\"\n            user info: \"An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.\"\n            +>  mSBuild\n\n        & mSBuild\n            user info: \"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility.\"\n            ->  codeProxyExecution\n\n        | unquotedPaths\n            user info: \"An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable.\"\n            ->  executeCode   \n\n        | attemptServiceStop @hidden //}\n            +>  serviceStop\n\n        & serviceStop //} //(0.0837)]\n            user info: \"Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.\"\n            +>  attemptDataDestruction,\n                attemptDataEncryptedForImpact\n\n        | attemptScheduledTask @hidden\n            ->  scheduledTask  \n\n        & scheduledTask //(0.33)*Exponential(54.3)]\n            user info: \"An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\"\n            +>  executeCode,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence,\n                remoteScheduledTask\n\n        & remoteScheduledTask\n            +>  computer.router.internalNetwork.remoteExecution\n\n        | attemptSystemTimeDiscovery @hidden\n            ->  systemTimeDiscovery\n\n        & systemTimeDiscovery //(0.19744)]\n            user info: \"The information could be useful for performing other techniques, such as executing a file with a Scheduled Task, or to discover locality information based on time zone to assist in victim targeting.\"\n            ->  attemptScheduledTask\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  credentialsInRegistry,\n                groupPolicyPreferences\n\n        | attemptWindowsAdminShares @hidden\n            ->  windowsAdminShares\n\n        & windowsAdminShares //(0.28)*Exponential(4114)]\n            +>  networkShareConnectionRemoval, // leads to Network Share Connection Removal attack\n                windowsManagementInstrumentation // leads to Windows Management Instrumentation attack\n\n        & windowsCommandShell\n            developer info: \"Adversaries may abuse the Windows command shell for execution.\"\n            ->  executeCode\n\n        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]\n            user info: \"An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions.\"\n            +>  systemInformationDiscovery, // extract information about the operating system\n                systemChecks,\n                executeCode,\n                inhibitSystemRecovery,\n                attemptIndicatorBlocking // tampering settings that control the collection and flow of event telemetry\n\n        | attemptWindowsManagementInstrumentationEventSubscription @hidden\n            +>  windowsManagementInstrumentationEventSubscription\n\n        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]\n            developer info: \"We assume the dsitribution to be the same as for windowsManagementInstrumentation\"\n            user info: \"Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.\"\n            +>  persistence\n\n        | attemptWindowsRemoteManagement @hidden\n            +>  windowsRemoteManagement\n\n        & windowsRemoteManagement\n            developer info: \"Binary probability distribution. Use of Valid Acounts\"\n            user info: \"WinRM allows a user to interact with a remote system.\"\n            +>  computer.router.internalNetwork.remoteExecution,\n                service.externalRemoteServices // Windows Remote Management can also be used externally  \n\n        | attemptWinlogonHelperDLL @hidden\n            +>  winlogonHelperDLL\n\n        & winlogonHelperDLL\n            user info: \"Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.\"\n            +>  persistence\n\n        & remoteFileCopy //(0.29)]\n            user info: \"Files may be copied from one system to another to stage adversary tools or other files over the course of an operation.\"\n            +>  attemptWindowsAdminShares, // Adversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.\n                attemptRemoteDesktopProtocol\n\n        | attemptRegistryKeysEnabled @hidden\n            ->  registryKeysEnabled\n\n        & registryKeysEnabled\n            ->  attemptDynamicDataExchange\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            +>  attemptWindowsAdminShares\n\n        | attemptDynamicDataExchange @hidden\n            +>  dynamicDataExchange \n\n        & dynamicDataExchange //(0.93)*Exponential(1)]\n            user info: \"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications.\"\n            +>  commandAndScriptingInterpreter,\n                executeCode\n\n        | captureAPICalls\n            user info: \"Some API calls include parameters that reveal user authentication credentials for Credential Access.\"\n            ->  userAccount.userCredentials\n\n        | attemptLogonScripts\n            ->  logonScripts\n\n        & logonScripts //(288)]\n            user info: \"An adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread.\"\n            ->  attemptAccessTokenManipulation,\n                adminAccount.adminRights   \n\n        | attemptSystemFirmware @hidden\n            +>  systemFirmware\n        \n        & systemFirmware\n            user info: \"System firmware may be modified by an adversary to perform or assist in malicious activity.\"\n            +>  systemShutdownOrReboot,\n                attemptDataDestruction\n\n        | systemShutdownOrReboot //}\n            user info: \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems.\"  \n\n        & queryRegistry //(0.05226)]\n            user info: \"The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network.\"\n            +>  commandAndScriptingInterpreter,\n                systemChecks,\n                systemInformationDiscovery\n\n        & networkShareDiscovery //(0.0129)]\n            +>  computer.router.internalNetwork.networkShareDiscovery\n\n        | attemptAccessTokenManipulation @hidden\n            +>  accessTokenManipulation\n\n        & accessTokenManipulation //(0.20715)]\n            user info: \"Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.\"\n            +>  tokenImpersonationOrTheft,\n                createProcessWithAToken,\n                makeAndImpersonateToken,\n                parentPIDSpoofing,\n                attemptSIDHistoryInjection\n\n        | tokenImpersonationOrTheft\n            user info: \"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n        \n        | createProcessWithAToken\n            user info: \"Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | makeAndImpersonateToken\n            user info: \"Adversaries may make and impersonate tokens to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptBypassUserAccessControl @hidden\n            ->  bypassUserAccessControl\n\n        & bypassUserAccessControl //(0.277)]\n            +>  service.attemptExploitationForPrivilegeEscalation\n   \n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            +>  attemptSoftwarePacking\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            +>  attemptLSASSMemory,\n                securityAccountManager,\n                nTDS,\n                lSASecrets,\n                cachedDomainCredentials,\n                dCSync,\n                stealOrForgeKerberosTickets\n\n        | peripheralDeviceDiscovery //(1)]\n            +>  computer.peripheralDeviceDiscovery\n\n        | portMonitors\n            user info: \"Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\"\n            +>  executeCode,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | emailCollection\n            developer info: \"Binary probability distribution. (Probabilities carried by children)\"\n            user info: \"Adversaries may target user email to collect sensitive information from a target.\"\n            +>  localEmailCollection,\n                remoteEmailCollection,\n                emailForwardingRule,\n                service.remoteEmailCollection,\n                service.emailForwardingRule\n       \n        & localEmailCollection //(0.892)*Exponential(95.58)]\n            user info: \"Adversaries may target user email on local systems to collect sensitive information.\"\n            ->  sensitiveDataCollected\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n            ->  attemptRemoteDesktopProtocol, // \n                sensitiveDataCollected\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n            ->  sensitiveDataCollected\n\n        | attemptApplicationShimming @hidden\n            ->  applicationShimming\n            \n        & applicationShimming\n            user info: \"Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\"\n            +>  persistence, // use application shim databases for persistence\n                processInjection,\n                credentialAPIHooking, // the shim database uses Hooking to redirect the code as necessary in order to communicate with the OS\n                attemptBypassUserAccessControl // certain shims can be used to Bypass User Account Control (UAC)\n\n        & authenticationPackage\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries can use Windows Authentication Packages for persistence for persistence.\"\n            +>  persistence   \n\n        | changeDefaultFileAssociation\n            user info: \"Adversaries may establish persistence by executing malicious content triggered by a file type association.\"\n            +>  persistence\n\n        | trustedDomainInfo // leads to SID-History Injection, Pass the Ticket, and Kerberoasting attacks\n            user info: \"The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting.\"\n\n        & domainTrustDiscovery //(0.13)*Exponential(127.1)]\n            +>  trustedDomainInfo\n\n        | attemptBootkit @hidden\n            +>  bootkit\n\n        & bootkit //(0.46)]\n            +>  persistence\n            \n        | videoCapture //(0.74)*Exponential(0.1)]\n            +>  computer.collectVideo            \n\n        & xslScriptProcessing //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\"\n            +>  executeCode,\n                windowsManagementInstrumentation, // leads to Windows Management Instrumentation attack\n                bypassAntivirus,\n                bypassApplicationWhitelisting,\n                bypassDigitalCertificateValidation\n\n        # activeDirectoryConfiguration\n            +>  cachedDomainCredentials,\n                dCSync,\n                goldenTicket,\n                groupPolicyPreferences,\n                passTheTicket,\n                sIDHistoryInjection\n\n        # antivirus //(0.53)]\n            +>  powerShell,\n                softwarePacking,\n                templateInjection\n\n        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.\n            +>  distributedComponentObjectModel,\n                componentObjectModel,\n                dynamicDataExchange\n\n        # audit \n            +>  at,\n                credentialsInRegistry,\n                domainTrustDiscovery,\n                bypassUserAccessControl,\n                dLLSearchOrderHijacking,\n                dLLSideLoading,\n                emailForwardingRule,\n                executableInstallerFilePermissionsWeakness,\n                groupPolicyPreferences,\n                pathInterception,\n                remoteDesktopProtocol,\n                rDPHijacking,\n                servicesFilePermissionsWeakness,\n                scheduledTask,\n                sQLStoredProcedures,\n                transportAgent,\n                windowsService\n\n        # behaviorPreventionOnEndpoint\n            +>  dynamicDataExchange,\n                dynamicLinkLibraryInjection,\n                extraWindowMemoryInjection,\n                portableExecutableInjection,\n                threadExecutionHijacking,\n                asynchronousProcedureCall,\n                threadLocalStorage,\n                processHollowing,\n                processDoppelganging\n        \n        # codeSigning //(0.28)]\n            +>  invalidCodeSignature,\n                powerShell,\n                powerShellUserProfile,\n                powerShellAdminProfile,\n                sQLStoredProcedures,\n                transportAgent\n\n        # credentialAccessProtection\n            ->  lSASSDriver,\n                lSASSMemory\n\n        # executionPrevention\n            +>  accessibilityFeatures,\n                appCertDLLs,\n                appInitDLLs,\n                cmstp,\n                controlPanel,\n                compiledHTMLFile,\n                cOR_PROFILER,\n                dLLSearchOrderHijacking,\n                executionThroughAPI,\n                executionThroughModuleLoad,\n                installUtil,\n                mshta,\n                networkShareDiscovery,\n                odbcconf,\n                pathInterception,\n                pubPrn,\n                queryRegistry,\n                regsvcsOrRegasm,\n                screensaver,\n                sIPAndTrustProviderHijacking,\n                systemTimeDiscovery,\n                windowsCommandShell,\n                winlogonHelperDLL,\n                xslScriptProcessing,\n                computer.router.internalNetwork.taintSharedContent\n\n        # exploitProtection\n            +>  regsvr32,\n                rundll32,\n                computer.router.internalNetwork.taintSharedContent\n\n        # limitHardwareInstallation\n            developer info: \"Binary probability relation.\"\n            +>  replicationThroughRemovableMedia\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  domainControllerAuthentication\n\n        # operatingSystemConfiguration\n            +>  at,\n                passwordFilterDLL,\n                bITSJobs,\n                cachedDomainCredentials,\n                lSASSMemory,\n                rDPHijacking,\n                remoteDesktopProtocol,\n                scheduledTask,\n                securityAccountManager\n\n        # passwordPolicies \n            +>  cachedDomainCredentials,\n                credentialsInRegistry,\n                dCSync,\n                kerberoasting,\n                lSASSMemory,\n                lSASecrets,\n                nTDS,\n                passTheHash,\n                passTheTicket,\n                securityAccountManager,\n                silverTicket,\n                windowsAdminShares               \n\n        # privilegedProcessIntegrity  \n            ->  authenticationPackage,\n                domainControllerAuthentication,\n                lSASSDriver,\n                lSASSMemory,\n                securitySupportProvider \n\n        # privilegedAccountManagement //(0.30)]\n            +>  at,\n                bootkit,\n                bypassUserAccessControl,\n                cachedDomainCredentials,\n                componentObjectModel,\n                credentialsInRegistry,\n                dCSync,\n                distributedComponentObjectModel,\n                domainControllerAuthentication,\n                goldenTicket,\n                kerberoasting,\n                lSASSMemory,\n                lSASecrets,\n                msiexec,\n                nTDS,\n                passTheHash,\n                rDPHijacking,\n                scheduledTask,\n                securityAccountManager,\n                silverTicket,\n                sQLStoredProcedures,\n                transportAgent,\n                windowsFileAndDirectoryPermissionsModification\n\n        # restrictFileAndDirectoryPermissions\n            +>  clearWindowsEventLogs,\n                controlPanel,\n                cOR_PROFILER,\n                dLLSideLoading,\n                bootOrLogonInitializationScripts,\n                logonScripts,\n                modifyRegistry,\n                ntfsFileAttributes,\n                pathInterception,\n                powerShellUserProfile,\n                powerShellAdminProfile,\n                sIPAndTrustProviderHijacking,\n                serviceStop,\n                serviceExecution,\n                servicesRegistryPermissionsWeakness,\n                timeProviders,\n                disableWindowsEventLogging,\n                windowsFileAndDirectoryPermissionsModification\n\n        # restrictRegistryPermissions // Restrict the ability to modify certain hives or keys in the Windows Registry.\n            +>  sIPAndTrustProviderHijacking,\n                serviceStop,\n                serviceRegistryPermissionsWeakness,\n                timeProviders\n\n        # restrictLibraryLoading\n            ->  dLLSearchOrderHijacking,\n                lSASSDriver       \n\n        # remoteDataStorage \n            +>  clearWindowsEventLogs\n\n        # softwareConfiguration\n            +>  powerShellUserProfile,\n                powerShellAdminProfile,\n                dynamicDataExchange\n\n        # bootIntegrity \n            +>  bootkit,\n                systemFirmware      \n\n        # encryptSensitiveInformation\n            +>  kerberoasting,\n                localEmailCollection,\n                nTDS,\n                remoteEmailCollection,\n                silverTicket,\n                emailForwardingRule,\n                clearWindowsEventLogs\n\n        # disableOrRemoveFeatureOrProgram\n            +>  cmstp,\n                distributedComponentObjectModel,\n                installUtil,\n                lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                mshta,\n                odbcconf,\n                powerShell,\n                rDPHijacking,\n                registryKeysEnabled,\n                regsvcsOrRegasm,\n                remoteDesktopProtocol,\n                replicationThroughRemovableMedia,\n                screensaver,\n                templateInjection,\n                mSBuild,\n                windowsRemoteManagement,\n                dynamicDataExchange\n\n        # updateSoftware //(0.567125)]\n            +>  appInitDLLs,\n                applicationShimming,\n                bypassUserAccessControl,\n                dLLSideLoading,\n                groupPolicyPreferences,\n                passTheHash,\n                systemFirmware\n        \n        # userAccountControl\n            +>  applicationShimming, \n                bypassUserAccessControl,\n                executableInstallerFilePermissionsWeakness,\n                servicesFilePermissionsWeakness,\n                passTheHash\n    }\n\n    asset Linux extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  attemptSSHAuthorizedKeys\n\n        & at\n            user info: \"Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode\n\n        | attemptBootkit @hidden\n            +>  bootkit\n\n        & bootkit //(0.46)]\n            +>  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        & clearLinuxSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptSystemdService\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n            +>  collectHashInformation\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptBash_profileAndBashrc,\n                trap\n\n        | spaceAfterFileName //(1)]\n            +>  computer.user.attemptUserExecution\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution. With File permissions, the adversary may instantly perform this technique.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            +>  persistence\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  lD_PRELOAD\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  linuxFileAndDirectoryPermissionsModification\n\n        & linuxFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearLinuxSystemLogs,\n                attemptClearCommandHistory \n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit        \n\n        & lD_PRELOAD\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                attemptProcMemory // populate a target process with more available gadgets\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  masqueradeTaskOrService,\n                spaceAfterFileName,\n                spaceAfterFileName\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n            +>  bypassHostIntrusionPrevention\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            +>  procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n            +>  collectHashInformation\n\n        & ptraceSystemCalls\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n            +>  bootkit\n\n        | attemptProcMemory @hidden\n            ->  procMemory\n\n        & procMemory\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            +>  ptraceSystemCalls,\n                attemptProcMemory,\n                vDSOHijacking\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  at,\n                cron\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            +>  attemptSQLStoredProcedures,\n                attemptTransportAgent\n\n        | attemptSetuidAndSetgid @hidden\n            +>  setuidAndSetgid      \n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence  \n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            +>  userAccount.userCredentials\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | attemptSQLStoredProcedures @hidden\n            +>  sQLStoredProcedures\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        & sudoAndSudoCaching //(288)]\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptSystemdService @hidden\n            ->  systemdService\n\n        & systemdService\n            user info: \"Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.\"\n            +>  persistence\n\n        | attemptTransportAgent @hidden\n            +>  transportAgent\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        | trap //(0.1)]\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            +>  executeCode,\n                persistence\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        & vDSOHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | executeCode \n            +>  computer.infectedLinuxComputer \n\n        # antivirus //(0.53)]\n            +>  kernelModulesAndExtensions\n\n        # audit \n            +>  at,\n                cron,\n                sQLStoredProcedures,\n                transportAgent\n\n        # behaviorPreventionOnEndpoint\n            +>  ptraceSystemCalls,\n                procMemory,\n                vDSOHijacking\n\n        # bootIntegrity \n            +>  bootkit\n\n        # codeSigning //(0.28)]\n            +>  sQLStoredProcedures,\n                transportAgent\n\n        # disableOrRemoveFeatureOrProgram\n            +>  sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # encryptSensitiveInformation\n            +>  clearLinuxSystemLogs\n\n        # executionPrevention\n            +>  kernelModulesAndExtensions,\n                unixShell,\n                lD_PRELOAD\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            ->  clearCommandHistory,\n                hISTCONTROL              \n\n        # limitSoftwareInstallation\n            +>  systemdService\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  pluggableAuthenticationModules,\n                sSH\n            \n        # operatingSystemConfiguration\n            +>  bashHistory,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            +>  sSHHijacking,\n                procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        # privilegedAccountManagement //(0.30)]\n            +>  bootkit,\n                _etc_passwdAND_etc_shadow,\n                sSHHijacking,\n                sQLStoredProcedures,\n                sudoAndSudoCaching,\n                pluggableAuthenticationModules,\n                procFilesystem,\n                ptraceSystemCalls,\n                transportAgent,\n                linuxFileAndDirectoryPermissionsModification\n\n        # restrictFileAndDirectoryPermissions\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearLinuxSystemLogs,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                sudoAndSudoCaching,\n                systemdService,\n                procMemory,\n                linuxFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            +>  clearLinuxSystemLogs\n    }\n\n    asset MacOS extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching,\n                attemptElevatedExecutionWithPrompt\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  attemptSSHAuthorizedKeys\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                adminAccount.adminCredentials,\n                userAccount.userCredentials\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            ->  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions,\n                reopenedApplications,\n                attemptPlistModification\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                rc_common,\n                attemptStartupItems\n\n        & clearMacSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell,\n                appleScript\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptEmond,\n                attemptBash_profileAndBashrc,\n                trap,\n                lC_LOAD_DYLIB_Addition\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            +>  attemptHiddenWindow\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            +>  attemptHiddenWindow\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  attemptKeychain,\n                securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & dylibHijacking //(0.16)] \n            user info: \"Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.\"\n            ->  service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack\n\n        | attemptElevatedExecutionWithPrompt @hidden\n            +>  elevatedExecutionWithPrompt\n\n        & elevatedExecutionWithPrompt\n            user info: \"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptEmond @hidden\n            ->  emond\n\n        & emond //(2)]\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n            +>  persistence,\n                service.attemptExploitationForPrivilegeEscalation\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  macFileAndDirectoryPermissionsModification\n\n        & macFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | executeCode \n            +>  computer.infectedMacOSComputer\n\n        | attemptGatekeeperBypass @hidden\n            +> gatekeeperBypass\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n            +>  bypassApplicationControl,\n                bypassAntivirus \n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  userAccount.userCredentials\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  attemptHiddenWindow,\n                hiddenUsers\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  dylibHijacking\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearMacSystemLogs,\n                attemptClearCommandHistory  \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            +>  attemptGUIInputCapture\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n            +>  adminAccount.attemptCreateAccount\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit  \n\n        | attemptLaunchAgent @hidden\n            +>  launchAgent\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n            +>  persistence\n\n        & launchctl\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon \n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode,\n                persistence   \n\n        | attemptLaunchDaemon @hidden\n            ->  launchDaemon\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n            +>  persistence,\n                attemptLaunchAgent,\n                service.attemptExploitationForPrivilegeEscalation   \n\n        & lC_LOAD_DYLIB_Addition\n            user info: \"Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time.\"\n            +>  persistence\n\n        | attemptLogonScripts @hidden\n            +>  logonScripts\n\n        & logonScripts\n            ->  adminAccount.adminRights  \n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  invalidCodeSignature,        \n                attemptElevatedExecutionWithPrompt // combine with elevatedExecutionWithPrompt to trick the user into granting escalated privileges to malicious code\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            +>  attemptSoftwarePacking\n\n        | attemptPlistModification @hidden\n            +>  plistModification\n\n        & plistModification\n            user info: \"Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism.\"\n            developer info: \"Binary probability distribution.\"\n            +>  bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting,\n                executeCode,\n                reopenedApplications,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & rc_common\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n            +>  persistence\n\n        & reopenedApplications\n            user info: \"An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine.\"\n            +>  persistence\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  cron,\n                launchd\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            +>  userAccount.userCredentials\n\n        | attemptSetuidAndSetgid @hidden\n            ->  setuidAndSetgid\n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptSoftwarePacking @hidden\n            ->  softwarePacking\n\n        & softwarePacking //(0.56784)]\n            user info: \"Packing an executable changes the file signature in an attempt to avoid signature-based detection.\"\n            ->  indicatorRemovalFromTools,\n                bypassSignatureBasedDetection,\n                bypassAntivirus,\n                bypassHeuristicDetection \n\n        | source\n            developer info: \"Binary probability distribution.\"\n            +>  executeCode\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n            +>  launchctl\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            +>  codeSigningCertificate,  \n                gatekeeperBypass\n\n        | attemptSudoAndSudoCaching @hidden\n            ->  sudoAndSudoCaching\n            \n        & sudoAndSudoCaching //(288)]\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | trap //(0.1)]\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            +>  executeCode,\n                persistence\n\n        | videoCapture //(0.74)*Exponential(0.1)]\n            +>  computer.collectVideo     \n\n        | spaceAfterFileName //(1)]\n            +>  computer.user.attemptUserExecution\n\n        & networkShareDiscovery //(0.0129)]\n            +>  computer.router.internalNetwork.networkShareDiscovery\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        | windowsManagementInstrumentation\n            ->  commandAndScriptingInterpreter\n\n        | attemptKeychain @hidden\n            ->  keychain\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n            +>  userAccount.userCredentials\n\n        & appleScript\n            developer info: \"Binary probability distribution.\"\n            ->  executeCode,\n                attemptGUIInputCapture // collect credentials\n                \n        | attemptStartupItems @hidden\n            +>  startupItems\n\n        & startupItems\n            user info: \"An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.\"\n            ->  persistence,\n                service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack \n\n        # antivirus //(0.53)]\n            +>  kernelModulesAndExtensions,\n                softwarePacking\n\n        # audit \n            +>  lC_LOAD_DYLIB_Addition,\n                cron,\n                launchd\n\n        # codeSigning //(0.28)]\n            +>  appleScript,\n                invalidCodeSignature,\n                lC_LOAD_DYLIB_Addition\n\n        # disableOrRemoveFeatureOrProgram\n            +>  emond,\n                reopenedApplications,\n                sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # executionPrevention\n            +>  appleScript,\n                elevatedExecutionWithPrompt,\n                gatekeeperBypass,\n                hiddenWindow,\n                kernelModulesAndExtensions,\n                lC_LOAD_DYLIB_Addition,\n                networkShareDiscovery,\n                unixShell\n\n        # encryptSensitiveInformation\n            +>  clearMacSystemLogs\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            ->  clearCommandHistory,\n                hISTCONTROL   \n\n        # multiFactorAuthentication //(0.99325)]\n            +>  pluggableAuthenticationModules,\n                sSH\n\n        # operatingSystemConfiguration\n            +>  bashHistory,\n                hiddenUsers,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            +>  keychain,\n                sSHHijacking\n\n        # privilegedAccountManagement //(0.30)]\n            +>  sSHHijacking,\n                macFileAndDirectoryPermissionsModification,\n                pluggableAuthenticationModules\n\n        # restrictFileAndDirectoryPermissions\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearMacSystemLogs,\n                dylibHijacking,\n                logonScripts,\n                plistModification,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                startupItems,\n                sudoAndSudoCaching,\n                macFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            +>  clearMacSystemLogs\n    }    \n}\n\ncategory Network {\n    asset Router {\n        \n    }\n\n    asset InternalNetwork {\n        | obfuscateNetworkTraffic\n\n        & applicationLayerConnexion\n            ->  c2Connexion,\n                bypassNetworkIntrusionDetection,\n                router.externalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n\n        & dataExfiltration\n            ->  router.externalNetwork.dataExfiltration\n\n        & internalDefacement //} //(0.31)*Exponential(10.67)]\n            user info: \"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.\"\n            ->  router.computer.os.service.browser.driveByCompromise // website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise\n\n        | attemptExfiltrationOverC2Channel @hidden\n             ->  exfiltrationOverC2Channel\n\n         & exfiltrationOverC2Channel //(0.79224)*Exponential(1878)]\n            user info: \" Data exfiltration is performed over the Command and Control channel.\"\n             ->  dataExfiltration\n\n        E firewallExists\n            <-  router.firewall\n            ->  router.firewall.bypassFirewall\n\n        | bypassNetworkIntrusionDetection \n\n        | bypassProxies\n\n        | attemptTransmittedDataManipulation @hidden\n            ->  transmittedDataManipulation\n\n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \"\n\n        & c2Connexion\n            ->  c2Connected\n\n        & exchangeServerCollection\n            user info: \"Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network.\"\n            ->  router.computer.os.dataCollected\n\n        | networkShareDiscovery\n            user info: \"Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \"\n        \n        | internalNetworkResourcesInformation\n\n        | remoteSystemsConnection\n            ->  router.internalNetwork.dataFromNetworkSharedDrive\n\n        | webShell //(0.1586)*Exponential(1)]\n            user info: \"Web shells may serve as Redundant Access or as a persistence mechanism.\"\n            ->  persistence\n\n        | persistence \n        \n        | remoteAccess\n\n        | remoteCOMExecution\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) to execute on remote systems as part of lateral movement.\"\n\n        | remoteExecution\n\n        | c2Connected \n            ->  communicate,\n                dataObfuscation,\n                packetCapture,\n                dataEncryptedForImpact, // \n                attemptExfiltrationOverC2Channel // \n\n        | communicate \n\n        | generateDomainNames \n\n        | dataObfuscation //(0.685)]\n            user info: \"This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system.\"\n            ->  junkData,\n                router.computer.os.steganography,\n                attemptProtocolImpersonation\n\n        & junkData\n            user info: \"Adversaries may add junk data to protocols used for command and control to make detection more difficult.\"\n            ->  bypassNetworkIntrusionDetection \n\n        | attemptProtocolImpersonation @hidden\n            ->  protocolImpersonation\n\n        & protocolImpersonation\n            user info: \"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts.\"\n            ->  communicate\n\n        | packetCapture\n\n        & taintSharedContent\n            user info: \"Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system.\"\n\n        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results : see automatedCollection.md file\"\n            user info: \"Adversaries may search network shares on computers they have compromised to find files of interest.\"\n\n        # encryptSensitiveInformation\n            ->  transmittedDataManipulation,\n                exchangeServerCollection\n\n        # executionPrevention             \n            ->  router.computer.os.networkServiceScan\n\n        # filterNetworkTraffic //(0.8217)]\n            ->  router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.directNetworkFlood,\n                router.computer.os.endpointDenialOfService,\n                router.computer.os.lateralToolTransfer,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.dNS,\n                router.computer.os.vNC,\n                router.computer.os.protocolTunneling,\n                router.computer.os.multiHopProxy,\n                router.computer.os.reflectionAmplification,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.bITSJobs,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                router.computer.os.forcedAuthentication \n\n        # limitAccessToResourceOverNetwork\n            ->  router.computer.os.manInTheMiddle,\n                router.computer.os.remoteDesktopProtocol,\n                router.computer.os.windowsAdminShares,\n                router.computer.os.rDPHijacking,\n                router.computer.hardwareAdditions,\n                router.computer.os.service.externalRemoteServices\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  exchangeServerCollection,\n                router.externalNetwork.dataFromCloudStorageObject\n\n        # networkIntrusionPrevention\n            ->  applicationLayerConnexion,\n                c2Connexion,\n                dataExfiltration,\n                exfiltrationOverC2Channel,\n                generateDomainNames,\n                junkData,\n                protocolImpersonation,\n                router.computer.os.userAccount.userExecution,\n                router.computer.user.maliciousLink,\n                router.computer.os.service.browser.spearphishingAttachment,\n                router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.encryptedChannel,\n                router.computer.os.dataCompressed,\n                router.computer.os.domainGenerationAlgorithms,\n                router.computer.os.internalProxy,\n                router.computer.os.externalProxy,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.standardEncoding,\n                router.computer.os.nonStandardEncoding,\n                router.computer.os.fallbackChannels,\n                router.computer.os.lateralToolTransfer,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.multiStageChannels,\n                router.computer.os.networkServiceScan,\n                router.computer.os.protocolTunneling,\n                router.computer.os.remoteFileCopy,\n                router.computer.os.applicationLayerProtocol,\n                router.computer.os.nonStandardPort,\n                router.computer.os.templateInjection,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        # networkSegmentation\n            ->  router.computer.os.service.applicationDeploymentSoftware,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.nonStandardPort,\n                router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.domainAccount,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.privateKeys,\n                router.computer.os.runtimeDataManipulation,\n                router.computer.os.domainTrustDiscovery,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                router.computer.os.rDPHijacking,\n                router.computer.os.serviceStop\n\n        # sSLOrTLSInspection\n            ->  obfuscateNetworkTraffic,\n                router.computer.os.encryptedChannel,\n                router.computer.os.domainFronting\n    }\n\n    asset NetworkSharedDrive extends InternalNetwork {\n        & taintSharedContent\n            user info: \"Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system.\"\n            +>  router.computer.os.executeCode\n\n        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results : see automatedCollection.md file\"\n            user info: \"Adversaries may search network shares on computers they have compromised to find files of interest.\"\n            +>  router.computer.os.sensitiveDataCollected\n    }\n\n    asset ExternalNetwork {\n        | obfuscateNetworkTraffic\n\n        | bypassNetworkIntrusionDetection\n\n        | dataExfiltration\n\n        & dataFromCloudStorageObject //(0.11)]\n            user info: \"Adversaries may access data objects from improperly secured cloud storage.\"\n            ->  router.computer.os.service.sensitiveDataCollected\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n\n        & externalDefacement //}\n            user info: \"Websites are a common victim of defacement that often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.\"\n\n        & exfiltrationOverWebService\n            user info: \"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.\"\n            ->  exfiltrationToCodeRepository,\n                exfiltrationToCloudStorage\n\n        | exfiltrationToCodeRepository\n            user info: \"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel.\"\n            ->  dataExfiltration\n\n        | exfiltrationToCloudStorage\n            user info: \"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel.\"\n            ->  dataExfiltration\n\n        | webService //(0.0445)]\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\"\n            ->  deadDropResolver,\n                bidirectionaCommunication,\n                oneWayCommunication\n\n        & deadDropResolver\n            user info: \"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure.\"\n            ->  router.internalNetwork.c2Connected\n\n        & bidirectionaCommunication\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel.\"\n            ->  router.internalNetwork.c2Connected\n            \n        & oneWayCommunication\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel.\"\n            ->  router.internalNetwork.c2Connected\n\n        | attemptTransmittedDataManipulation @hidden //}\n            ->  transmittedDataManipulation\n \n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n            \n        # encryptSensitiveInformation\n            ->  transmittedDataManipulation\n\n        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.\n            ->  dataFromCloudStorageObject,\n                router.computer.os.endpointDenialOfService,\n                router.computer.os.multiHopProxy,\n                router.computer.os.directNetworkFlood,\n                router.computer.os.reflectionAmplification,\n                router.computer.os.bITSJobs\n\n        # networkIntrusionPrevention\n            ->  bidirectionaCommunication,\n                deadDropResolver,\n                oneWayCommunication,\n                router.computer.os.service.browser.spearphishingAttachment,\n                router.internalNetwork.dataObfuscation,\n                router.internalNetwork.exfiltrationOverC2Channel,\n                router.internalNetwork.generateDomainNames,\n                router.computer.os.nonStandardPort,\n                router.computer.os.fallbackChannels,\n                router.computer.os.multiStageChannels,\n                router.computer.os.remoteFileCopy,\n                router.computer.os.applicationLayerProtocol\n\n        # networkSegmentation // Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.\n            ->  router.computer.os.nonStandardPort,\n                router.computer.os.privateKeys,\n                router.computer.os.runtimeDataManipulation        \n\n        # sSLOrTLSInspection\n            ->  obfuscateNetworkTraffic\n    }\n\n    asset Firewall {\n        & bypassFirewall @hidden\n            ->  router.internalNetwork.dataExfiltration,\n                router.internalNetwork.c2Connexion\n\n        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.\n            ->  router.computer.os.service.cloudInstanceMetadataAPI,\n                router.computer.os.bITSJobs,\n                router.computer.os.portKnocking\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            ->  router.computer.os.nonStandardPort,\n                router.computer.os.service.externalRemoteServices,\n                router.computer.os.remoteDesktopProtocol,\n                router.computer.os.distributedComponentObjectModel,\n                router.computer.os.windowsRemoteManagement\n    }\n}\n\ncategory Hardware {\n    asset Computer {\n        | infectedComputer\n            ->  router.internalNetwork.applicationLayerConnexion,\n                router.internalNetwork.attemptDataEncryptedForImpact, // \n                router.externalNetwork.attemptDataEncryptedForImpact, // \n                os.nonStandardPort,\n                os.fileDeletion,\n                os.attemptPowerShell,\n                os.accountManipulation,\n                os.screenCapture,\n                os.validAccounts,\n                peripheralDevice.infectedMedia,\n                peripheralDevice.dataFromRemovableMedia\n\n        | infectedWindowsComputer\n                \n        | infectedLinuxComputer\n\n        | infectedMacOSComputer \n\n        | unresponsive\n\n        & hardwareAdditions \n\n        | attemptExfiltrationOverPhysicalMedium @hidden\n            ->  exfiltrationOverPhysicalMedium\n\n        & exfiltrationOverPhysicalMedium //(0.79224)*Exponential(7.69)]\n            ->  exfiltrationOverUSB,\n                peripheralDevice.dataExfiltration\n\n        | exfiltrationOverUSB\n            user info: \"Adversaries may attempt to exfiltrate data over a USB connected physical device.\"\n            ->  peripheralDevice.dataExfiltration\n\n        & collectAudio //(0.74)*Exponential(0.1)]\n            ->  os.dataCollected\n        \n        | peripheralDeviceDiscovery\n            developer info: \"Binary distribution result (endpoint)\"\n            user info: \"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\"\n\n        | collectVideo\n            ->  os.dataCollected\n\n        # disableOrRemoveFeatureOrProgram\n            ->  exfiltrationOverPhysicalMedium\n    }\n\n    asset HardwareAddition extends Computer {\n        | physicalAccess //(0.11)*Exponential(8)]\n            ->  hardwareAdditions,\n                os.attemptAccessibilityFeatures\n            \n        & hardwareAdditions \n            user info: \"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access.\" \n            +>  os.executeCode,\n                os.attemptGatekeeperBypass\n    }\n\n    asset PeripheralDevice {\n        | collectVideo\n\n        | collectAudio //(0.74)*Exponential(0.1)]\n\n        | dataExfiltration\n\n        | infectedMedia\n\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n    }\n\n    asset Webcam extends PeripheralDevice {\n        | collectVideo\n            +>  computer.collectVideo\n    }\n\n    asset RemovableMedia extends PeripheralDevice {\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n            +>  computer.os.sensitiveDataCollected\n\n        | infectedMedia\n\n        | dataExfiltration\n    }\n    \n    asset Microphone extends PeripheralDevice {\n        | collectAudio //(0.74)*Exponential(0.1)]\n            +>  computer.collectAudio\n    }\n}\n\nassociations {\n    User [user] * <--Uses--> * [computer] Computer\n    User [user] 1 <--Logsin--> * [userAccount] UserAccount\n    AdminAccount [adminAccount] * <--Manages--> * [userAccount] UserAccount\n    UserAccount [userAccount] * <--Accesses--> 1 [os] OS\n    AdminAccount [adminAccount] * <--Accesses--> 1 [os] OS\n    OS [os] 1 <--Runs--> * [service] Service\n    Computer [computer] * <--Operates--> * [os] OS\n    Router [router] * <--Communicates--> * [computer] Computer\n    Firewall [firewall] 1 <--Protects--> 1 [router] Router\n    InternalNetwork [internalNetwork] * <--Connects--> * [router] Router\n    ExternalNetwork [externalNetwork] * <--Connects--> * [router] Router\n    Browser [browser] * <--Accesses--> * [service] Service\n    Computer [computer] * <--Serves--> * [peripheralDevice] PeripheralDevice\n}"}
{"instruction": "Translate the grouping below into a category definition in Meta Attack Language.", "input": "In the realm of a hypothetical security assessment, we've identified a category of assets known as 'Users'. These users are associated with various entity types within the targeted enterprise, each with distinct attributes and potential vulnerabilities.\n\nOne such attribute is the 'attemptMaliciousLink', where users may unknowingly click on malicious links that could lead to the execution of malicious code on their connected computers. This association connects the 'User' asset to the 'computer.os.service.attemptExploitationForClientExecution', as well as potential 'attemptMaliciousFile' incidents, which could prompt users to download files requiring execution via malicious files.\n\nAnother association is 'attemptMaliciousFile', where users might inadvertently download harmful files. These files can trigger attempts at dynamic data exchange or direct execution of code on the user's computer.\n\nThere's also the 'attemptUserExecution' attribute, where an adversary may try to execute code using the user's account credentials.\n\nIn addition, we've noted an association called 'mediaInserted', where there's a possibility that users have physical access to the network. This could enable them to use an infected USB device for initial compromise, leading to replication through removable media and data exfiltration.\n\nLastly, while the 'userTraining' association seems to indicate some form of user education, it's unclear how it directly impacts users' susceptibility to malicious links, files, or executions. However, it's worth considering the potential role of user training in mitigating these risks.", "output": "category Person {\n    asset User {\n        | attemptMaliciousLink @hidden\n            ->  maliciousLink    \n\n        & maliciousLink //(0.712)*Exponential(1)]\n            ->  computer.os.service.attemptExploitationForClientExecution,\n                attemptMaliciousFile, // links may lead users to download files that require execution via Malicious File\n                computer.os.executeCode\n\n        | attemptMaliciousFile @hidden\n            ->  maliciousFile\n\n        & maliciousFile //(0.93)*Exponential(1)]\n            ->  computer.os.attemptDynamicDataExchange,\n                computer.os.executeCode\n\n        | attemptUserExecution @hidden\n            ->  userAccount.userExecution\n\n        | mediaInserted //(0.3)*Exponential(48)]\n            user info: \"People work in the targeted entreprise have physical access to the network and can thus easily use an infected USB device for the adversary to get initial compromise.\"\n            ->  computer.os.replicationThroughRemovableMedia,\n                computer.peripheralDevice.dataExfiltration\n\n        # userTraining //(0.22)]\n            ->  maliciousFile,\n                maliciousLink,\n                userAccount.userExecution\n    }\n}"}
{"instruction": "Given these related assets, write a category definition in Meta Attack Language.", "input": "In the given MAL code, we have several categories, assets, associations, and attack steps related to a software environment. Let's break down some of these components:\n\n* **Category: Software** - This category includes various assets, such as user accounts, services, and remote desktop user accounts, which are common in software-based systems.\n\n* **Asset: UserAccount** - This asset represents a typical user account in a software environment. It has user credentials, user execution capabilities, user information, and user account management-related attributes.\n\n  - **UserCredentials** - This attribute refers to the credentials associated with the user account, such as passwords, userRights, valid accounts, and userRights collected from various sources like Exchange Server, SharePoint, and Windows Management Instrumentation (WMI).\n\n  - **UserExecution** - This attribute relates to the execution of malicious files or links by the user account.\n\n  - **UserInformation** - This attribute includes details on user training, user account management, and user account-related information collection from various sources like cached domain credentials, LSASS secrets, and two-factor authentication interception.\n\n* **Asset: RemoteDesktopUser** - This is a subtype of the UserAccount that specifically focuses on remote desktop user accounts. It has user credentials and multi-factor authentication-related attributes.\n\n* **Asset: AdminAccount** - This asset represents an administrator account with elevated privileges. It has adminRights, attemptCreateAccount, createAccount, privilegedAccountManagement, and adminCredentials attributes.\n\n  - **AdminCredentials** - This attribute refers to the admin credentials associated with the account, such as adminRights, valid accounts, and service.remoteServices.\n\n* **Asset: Service** - This asset represents a service running in the software environment. It has attributes like attemptTrustedRelationship, attemptUseThirdpartySoftware, applicationAccessToken, accessCloudBasedServiceResources, persistence, sensitiveDataCollected, cloudServiceInformationCollected, cloudAccount, cloudGroups, cloudInstanceMetadataAPI, cloudServiceDiscovery, cloudServiceDashboard, disableOrModifyCloudFirewall, emailAccount, emailAddressCollected, additionalAzureServicePrincipalCredentials, exchangeEmailDelegatePermissions, addOffice365GlobalAdministratorRole, modifyCloudComputeInfrastructure, createSnapshot, createCloudInstance, deleteCloudInstance, revertCloudInstance, remoteEmailCollection, emailForwardingRule, applicationExhaustionFlood, and serviceExhaustionFlood.\n\n  - **cloudAccounts, cloudGroups, cloudInstanceMetadataAPI, cloudServiceDashboard, disableOrModifyCloudFirewall, emailAccount, emailAddressCollected, additionalAzureServicePrincipalCredentials, exchangeEmailDelegatePermissions, addOffice365GlobalAdministratorRole, modifyCloudComputeInfrastructure, createSnapshot, createCloudInstance, deleteCloudInstance, revertCloudInstance, remoteEmailCollection, emailForwardingRule, applicationExhaustionFlood, and serviceExhaustionFlood** - These attributes deal with cloud-based service resources, permissions, and manipulation.\n\n* **Associations** - The associations in the code show how different components are linked. For example, userCredentials is associated with userRights, userExecution, userAccountManagement, and userTraining. Similarly, service.remoteServices are associated with adminCredentials and applicationAccessToken. Additionally, we see relationships between components like RemoteDesktopUser extending UserAccount, AdminAccount having attributes related to createAccount, and Service having attributes like attemptTrustedRelationship and attemptUseThirdpartySoftware.", "output": "category Software {\n    asset UserAccount {\n        | userRights\n            ->  os.abuseElevationControlMechanism,\n                os.accountAccessRemoval,\n                os.accountDiscovery,\n                os.applicationWindowDiscovery,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptLaunchAgent,\n                os.attemptLogonScripts,\n                os.attemptPlistModification,\n                os.attemptSetuidAndSetgid,\n                os.attemptShortcutModification,\n                os.attemptSSHAuthorizedKeys,\n                os.attemptTaintSharedContent,\n                os.bash_profileAndBashrc,\n                os.bashHistory,\n                os.bruteForce,\n                os.bypassUserAccessControl,\n                os.changeDefaultFileAssociation,\n                os.clearCommandHistory,\n                os.cmstp,\n                os.commandAndScriptingInterpreter,\n                os.compileAfterDelivery,\n                os.compiledHTMLFile,\n                os.componentObjectModelHijacking,\n                os.controlPanel,\n                os.cOR_PROFILER,\n                os.credentialsInFiles,\n                os.credentialsInRegistry,\n                os.credentialStuffing,\n                os.cron,\n                os.dataDestruction,\n                os.dataEncoding,\n                os.dataFromInformationRepositories,\n                os.dataManipulation,\n                os.defaultAccounts,\n                os.deobfuscateOrDecodeFilesOrInformation,\n                os.disableOrModifyTools,\n                os.diskWipe,\n                os.dLLSearchOrderHijacking,\n                os.domainAccounts,\n                os.domainDiscovery,\n                os.domainGroups,\n                os.domainTrustDiscovery,\n                os.dynamicDataExchange,\n                os.dynamicResolution,\n                os.elevatedExecutionWithPrompt,\n                os.emailCollection,\n                os.executableInstallerFilePermissionsWeakness,\n                os.executionGuardrails,\n                os.executionThroughModuleLoad,\n                os.fileAndDirectoryDiscovery,\n                os.fileAndDirectoryPermissionsModification,\n                os.fileDeletion,\n                os.forcedAuthentication,\n                os.gatekeeperBypass,\n                os.groupPolicyModification,\n                os.groupPolicyPreferences,\n                os.gUIInputCapture,\n                os.hiddenFilesAndDirectories,\n                os.hiddenFileSystem,\n                os.hiddenWindow,\n                os.hISTCONTROL,\n                os.indicatorRemovalOnHost,\n                os.indirectCommandExecution,\n                os.inhibitSystemRecovery,\n                os.installRootCertificate,\n                os.installUtil,\n                os.internalSpearphishing,\n                os.lateralToolTransfer,\n                os.launchctl,\n                os.lC_LOAD_DYLIB_Addition,\n                os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                os.localAccounts,\n                os.localGroups,\n                os.manInTheMiddle,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.mshta,\n                os.msiexec,\n                os.networkShareConnectionRemoval,\n                os.networkShareDiscovery,\n                os.odbcconf,\n                os.goldenTicket,\n                os.parentPIDSpoofing,\n                os.passwordCracking,\n                os.passwordGuessing,\n                os.passwordPolicyDiscovery,\n                os.passwordSpraying,\n                os.pathInterceptionBySearchOrderHijacking,\n                os.peripheralDeviceDiscovery,\n                os.portableExecutableInjection,\n                os.portKnocking,\n                os.powerShellUserProfile,\n                os.privateKeys,\n                os.processDiscovery,\n                os.processDoppelganging,\n                os.processHollowing,\n                os.pubPrn,\n                os.registryRunKeysOrStartupFolder,\n                os.regsvcsOrRegasm,\n                os.regsvr32,\n                os.remoteDesktopProtocol,\n                os.remoteFileCopy, \n                os.remoteSystemDiscovery,\n                os.reopenedApplications,\n                os.resourceHijacking,\n                os.rootkit,\n                os.rundll32,\n                os.runVirtualInstance,\n                os.screensaver,\n                os.securitySoftwareDiscovery,\n                os.servicesFilePermissionsWeakness,\n                os.servicesRegistryPermissionsWeakness,\n                os.serviceStop,\n                os.signedScriptProxyExecution,\n                os.silverTicket,\n                os.sIPAndTrustProviderHijacking,\n                os.softwareDiscovery,\n                os.source,\n                os.spaceAfterFileName,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemInformationDiscovery,\n                os.systemNetworkConfigurationDiscovery,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.templateInjection,\n                os.threadExecutionHijacking,\n                os.timestomp,\n                os.trap,\n                os.trustedDeveloperUtilities,\n                os.videoCapture,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.xslScriptProcessing,\n                os.service.attemptExploitationForCredentialAccess,\n                os.service.attemptExploitationForDefenseEvasion,\n                os.service.attemptExploitationForPrivilegeEscalation,\n                os.service.attemptExploitationOfRemoteServices,\n                os.service.attemptExternalRemoteServices,\n                os.service.implantContainerImage,\n                os.service.remoteAccessSoftware,\n                os.service.cloudAccounts,\n                os.service.cloudGroups,\n                os.service.cloudServiceDiscovery,\n                os.service.cloudServiceDashboard,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.modifyCloudComputeInfrastructure,\n                os.service.officeTemplateMacros,\n                os.service.officeTest,\n                os.service.outlookForms,\n                os.service.outlookHomePage,\n                os.service.outlookRules,\n                os.service.addIns,\n                os.service.stealApplicationAccessToken,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.browser.browserBookmarkDiscovery,\n                os.service.browser.driveByCompromise,\n                os.service.browser.installExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.computer.router.internalNetwork.transmittedDataManipulation,\n                os.computer.router.externalNetwork.bidirectionaCommunication,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.computer.router.externalNetwork.deadDropResolver,\n                os.computer.router.externalNetwork.oneWayCommunication,\n                os.computer.router.externalNetwork.transmittedDataManipulation\n\n        | userCredentials\n            ->  userRights,\n                os.validAccounts,\n                os.computer.router.internalNetwork.exchangeServerCollection,\n                os.service.remoteServices\n\n        & userExecution\n            developer info: \"Binary probability relation.\"\n            ->  user.maliciousFile,\n                user.maliciousLink\n\n        | userInformation\n\n        # userTraining //(0.22)]\n            ->  os.cachedDomainCredentials,\n                os.confluence,\n                os.credentialsInFiles,\n                os.gUIInputCapture,\n                os.lSASecrets,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.nTDS,\n                os.plistModification,\n                os.reopenedApplications,\n                os.securityAccountManager,\n                os.sharepoint,\n                os.templateInjection,\n                os.twoFactorAuthenticationInterception, // remove smart cards when not in use\n                os.service.browser.browserExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.service.stealApplicationAccessToken,\n                os.service.spearphishingViaService,\n                os.service.useThirdpartySoftware\n\n        # userAccountManagement //(0.30)] \n            ->  os.accessTokenManipulation,\n                os.at,\n                os.attemptStartupItems,\n                os.bITSJobs,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.confluence,\n                os.cOR_PROFILER,\n                os.credentialStuffing,\n                os.cron,\n                os.disableOrModifySystemFirewall,\n                os.disableOrModifyTools,\n                os.disableWindowsEventLogging,\n                os.executableInstallerFilePermissionsWeakness,\n                os.indicatorBlocking,\n                os.launchAgent,\n                os.launchctl,\n                os.launchd,\n                os.launchDaemon,\n                os.manInTheBrowser,\n                os.passTheHash,\n                os.passTheTicket,\n                os.rc_common,\n                os.rDPHijacking,\n                os.remoteDesktopProtocol,\n                os.remoteScheduledTask,\n                os.scheduledTask,\n                os.servicesFilePermissionsWeakness,\n                os.serviceStop,\n                os.sharepoint,\n                os.shortcutModification,\n                os.systemdService,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsService,\n                os.winlogonHelperDLL,\n                os.service.remoteServices,\n                os.service.createSnapshot,\n                os.service.cloudServiceDashboard,\n                os.service.createCloudInstance,\n                os.service.deleteCloudInstance,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.stealApplicationAccessToken,\n                os.service.useThirdpartySoftware\n    } \n\n    asset RemoteDesktopUser extends UserAccount {\n        | userCredentials\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  os.remoteDesktopProtocol\n    }     \n\n    asset AdminAccount {\n        | adminRights\n            user info: \"Administrator is an actual account.\"\n            ->  userAccount.userRights,\n                createAccount, \n                os.abuseElevationControlMechanism,\n                os.accessibilityFeatures,\n                os.accountAccessRemoval,\n                os.appCertDLLs,\n                os.appInitDLLs,\n                os.applicationShimming,\n                os.at,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptCredentialsInFiles,\n                os.attemptDataDestruction,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptServiceRegistryPermissionsWeakness,\n                os.attemptServicesFilePermissionsWeakness,\n                os.attemptServiceStop,\n                os.attemptShortcutModification,\n                os.attemptSIDHistoryInjection,\n                os.attemptTimeProviders,\n                os.attemptWindowsAdminShares,\n                os.attemptWindowsManagementInstrumentationEventSubscription,\n                os.attemptWinlogonHelperDLL,             \n                os.authenticationPackage,\n                os.bootkit,   \n                os.clearWindowsEventLogs,\n                os.credentialAPIHooking,\n                os.credentialsFromPasswordStores,\n                os.dCShadow,\n                os.dCSync,\n                os.detailedRemoteSystemDiscovery,\n                os.disableWindowsEventLogging,\n                os.distributedComponentObjectModel,\n                os.domainControllerAuthentication,\n                os.exchangeEmailDelegatePermissions,\n                os.fileAndDirectoryDiscovery,\n                os.fileSystemLogicalOffsets,\n                os.firmwareCorruption, \n                os.groupPolicyModification,\n                os.imageFileExecutionOptionsInjection,\n                os.inhibitSystemRecovery,\n                os.lSASSDriver,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.netshHelperDLL,\n                os.networkServiceScan,\n                os.networkShareConnectionRemoval,\n                os.networkSniffing,\n                os.oSCredentialDumping,\n                os.parentPIDSpoofing,\n                os.passwordFilterDLL,\n                os.portMonitors,\n                os.powerShell,\n                os.powerShellAdminProfile,\n                os.processDiscovery,\n                os.queryRegistry,\n                os.registryRunKeysOrStartupFolder,\n                os.remoteScheduledTask,\n                os.resourceHijacking,\n                os.scheduledTask,\n                os.securitySupportProvider,\n                os.serviceExecution,\n                os.sQLStoredProcedures,\n                os.systemFirmware,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.transportAgent,\n                os.twoFactorAuthenticationInterception,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.additionalAzureServicePrincipalCredentials,\n                os.service.exchangeEmailDelegatePermissions,\n                os.service.addOffice365GlobalAdministratorRole\n             \n        | adminCredentials\n            ->  adminRights,\n                os.validAccounts,\n                os.service.remoteServices\n\n        | attemptCreateAccount @hidden\n            ->  createAccount\n\n        & createAccount //(0.05665)*Exponential(1440)]\n            ->  os.service.cloudAccount,\n                os.domainAccount,\n                os.localAccount\n\n        # privilegedAccountManagement //(0.30)]\n            ->  os.accessTokenManipulation,\n                os.domainAccount,\n                os.firmwareCorruption,\n                os.kernelModulesAndExtensions,\n                os.localAccount,\n                os.modifyRegistry,\n                os.passTheTicket,\n                os.powerShell,\n                os.remoteDesktopProtocol,\n                os.serviceExecution,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemFirmware,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.exploitationOfRemoteServices,\n                os.service.cloudAccount,\n                os.service.useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators\n                os.service.exploitHighVulnerabilityPublicFacingApplication,\n                os.service.exploitMediumVulnerabilityPublicFacingApplication,\n                os.service.exploitLowVulnerabilityPublicFacingApplication\n    }\n\n    asset Service {\n        | attemptTrustedRelationship @hidden\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n\n        & useThirdpartySoftware\n\n        | collectVideo @hidden\n\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n\n        | accessCloudBasedServiceResources\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n \n        | cloudServiceDiscovery\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n\n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n \n        | serviceExhaustionFlood //}"}
{"instruction": "Create a category in Meta Attack Language that includes the assets listed below.", "input": "In the course of our network analysis, we've identified a few critical components that could potentially be exploited by adversaries. One such component is the Router, a device that facilitates data communication between networks. It's worth noting that this router has an external network connection, which could be a potential avenue for attackers to bypass network intrusion detection systems.\n\nAnother significant component is the Internal Network, a private network within our system. This network is not devoid of risks, as it appears to have obfuscated network traffic, which could mask malicious activities. Furthermore, it seems that there's an application layer connection within the Internal Network that links to several other components, including a potential command and control (C2) connection and a mechanism to bypass network intrusion detection. It's also worth mentioning that data encryption for impact is attempted on this network, possibly to create a disruptive effect on system and network resources.\n\nAdversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\n\nData exfiltration also appears to be a concern within the Internal Network, as there seems to be a path for data to be sent out through the router's external network connection. Lastly, there's an internal defacement component, which could indicate that an attacker might attempt to alter the appearance of internal resources or systems to disrupt operations or gain unauthorized access.\n\nIn summary, our network analysis has revealed several potential attack vectors, including data obfuscation, data encryption for impact, data exfiltration, and internal defacement. It's crucial to monitor these components closely to mitigate any potential risks.", "output": "category Network {\n    asset Router {\n        \n    }\n\n    asset InternalNetwork {\n        | obfuscateNetworkTraffic\n\n        & applicationLayerConnexion\n            ->  c2Connexion,\n                bypassNetworkIntrusionDetection,\n                router.externalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n\n        & dataExfiltration\n            ->  router.externalNetwork.dataExfiltration\n\n        & internalDefacement //} //(0.31)*Exponential(10.67)]"}
{"instruction": "Write a Meta Attack Language snippet that declares a category containing these assets.", "input": "In the realm of a hypothetical network, the Hardware category encompasses a variety of components, primarily computers and peripheral devices.\n\n1. **Computers**: These are the primary workstations within the network, which can be infected, unresponsive, or even leveraged for hardware additions.\n\n   - **Infected Computers**: These devices have been compromised, potentially allowing adversaries to execute malicious code, manipulate accounts, capture screens, delete files, and attempt data encryption for impact. They may also exfiltrate data over physical media or even USB devices. Infected computers can be further categorized into Windows, Linux, or MacOS instances.\n\n   - **Unresponsive Computers**: These systems may have crashed, hung, or are otherwise unavailable for use.\n\n   - **Hardware Additions**: These are additional components added to computers, such as accessories or other computers, which can be exploited by adversaries to gain access to the system or execute code.\n\n   - **Exfiltration Over Physical Medium**: Adversaries may attempt to exfiltrate data from a computer using hidden methods over a physical medium, such as a USB drive.\n\n   - **Exfiltration Over USB**: This refers to the covert transfer of data from a computer to a USB-connected physical device.\n\n   - **Collect Audio/Video**: Adversaries may attempt to collect audio or video data from the computer, possibly for intelligence gathering or further actions.\n\n2. **Peripheral Devices**: These are ancillary components connected to computers, such as webcams, microphones, removable media, and other devices capable of data collection, infection, or data exfiltration.\n\n   - **Webcams**: These devices can be used to collect video data from the connected computer.\n\n   - **Removable Media**: These are portable storage devices, such as USB drives, which can be used for data exfiltration, data collection, or even infecting the computer with malware.\n\n   - **Microphones**: These devices can be used to collect audio data from the connected computer.\n\nIn summary, the Hardware category in our network consists of various devices, including computers and peripheral devices, which can be compromised, manipulated, or exploited by adversaries for data collection, data exfiltration, or gaining access to the system.", "output": "category Hardware {\n    asset Computer {\n        | infectedComputer\n            ->  router.internalNetwork.applicationLayerConnexion,\n                router.internalNetwork.attemptDataEncryptedForImpact, // \n                router.externalNetwork.attemptDataEncryptedForImpact, // \n                os.nonStandardPort,\n                os.fileDeletion,\n                os.attemptPowerShell,\n                os.accountManipulation,\n                os.screenCapture,\n                os.validAccounts,\n                peripheralDevice.infectedMedia,\n                peripheralDevice.dataFromRemovableMedia\n\n        | infectedWindowsComputer\n                \n        | infectedLinuxComputer\n\n        | infectedMacOSComputer \n\n        | unresponsive\n\n        & hardwareAdditions \n\n        | attemptExfiltrationOverPhysicalMedium @hidden\n            ->  exfiltrationOverPhysicalMedium\n\n        & exfiltrationOverPhysicalMedium //(0.79224)*Exponential(7.69)]\n            ->  exfiltrationOverUSB,\n                peripheralDevice.dataExfiltration\n\n        | exfiltrationOverUSB\n            user info: \"Adversaries may attempt to exfiltrate data over a USB connected physical device.\"\n            ->  peripheralDevice.dataExfiltration\n\n        & collectAudio //(0.74)*Exponential(0.1)]\n            ->  os.dataCollected\n        \n        | peripheralDeviceDiscovery\n            developer info: \"Binary distribution result (endpoint)\"\n            user info: \"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\"\n\n        | collectVideo\n            ->  os.dataCollected\n\n        # disableOrRemoveFeatureOrProgram\n            ->  exfiltrationOverPhysicalMedium\n    }\n\n    asset HardwareAddition extends Computer {\n        | physicalAccess //(0.11)*Exponential(8)]\n            ->  hardwareAdditions,\n                os.attemptAccessibilityFeatures\n            \n        & hardwareAdditions \n            user info: \"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access.\" \n            +>  os.executeCode,\n                os.attemptGatekeeperBypass\n    }\n\n    asset PeripheralDevice {\n        | collectVideo\n\n        | collectAudio //(0.74)*Exponential(0.1)]\n\n        | dataExfiltration\n\n        | infectedMedia\n\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n    }\n\n    asset Webcam extends PeripheralDevice {\n        | collectVideo\n            +>  computer.collectVideo\n    }\n\n    asset RemovableMedia extends PeripheralDevice {\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n            +>  computer.os.sensitiveDataCollected\n\n        | infectedMedia\n\n        | dataExfiltration\n    }\n    \n    asset Microphone extends PeripheralDevice {\n        | collectAudio //(0.74)*Exponential(0.1)]\n            +>  computer.collectAudio\n    }\n}"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In a recent security assessment, we've identified a user asset that could potentially fall prey to malicious activities. This user, referred to as 'User', has been flagged due to its association with several attack steps.\n\nThe User asset is noteworthy because it can attempt malicious links, which, if clicked, may lead to the 'maliciousLink' event. This association is marked as 'attemptMaliciousLink' and is hidden, suggesting it could be a covert action. The User, in conjunction with the 'maliciousLink', could potentially trigger 'computer.os.service.attemptExploitationForClientExecution', leading to further actions such as 'attemptMaliciousFile' and 'computer.os.executeCode'.\n\n'AttemptMaliciousFile' is another association tied to the User, which, if activated, could lead to 'computer.os.attemptDynamicDataExchange' and 'computer.os.executeCode'. These actions indicate a potential for data exfiltration and code execution on the user's computer.\n\nAdditionally, the User asset is linked to 'attemptUserExecution'. This could suggest that the adversary may try to execute malicious code within the user's account.\n\nIt's also worth mentioning that the User asset is associated with 'mediaInserted', which implies that people with physical access to the network could use an infected USB device for initial compromise. This is a significant risk factor, as it bypasses many security measures.\n\nLastly, there's a low probability association between the User and 'userTraining'. This could indicate that the user, through malicious files, links, or even user execution, could be trained by the adversary to perform actions that aid in their malicious activities.\n\nIn summary, the User asset presents a multifaceted threat, with potential for malicious link clicks, file downloads, data exfiltration, code execution, and even user training by the adversary. It's crucial to monitor and protect this asset closely.", "output": "asset User {\n        | attemptMaliciousLink @hidden\n            ->  maliciousLink    \n\n        & maliciousLink //(0.712)*Exponential(1)]\n            ->  computer.os.service.attemptExploitationForClientExecution,\n                attemptMaliciousFile, // links may lead users to download files that require execution via Malicious File\n                computer.os.executeCode\n\n        | attemptMaliciousFile @hidden\n            ->  maliciousFile\n\n        & maliciousFile //(0.93)*Exponential(1)]\n            ->  computer.os.attemptDynamicDataExchange,\n                computer.os.executeCode\n\n        | attemptUserExecution @hidden\n            ->  userAccount.userExecution\n\n        | mediaInserted //(0.3)*Exponential(48)]\n            user info: \"People work in the targeted entreprise have physical access to the network and can thus easily use an infected USB device for the adversary to get initial compromise.\"\n            ->  computer.os.replicationThroughRemovableMedia,\n                computer.peripheralDevice.dataExfiltration\n\n        # userTraining //(0.22)]\n            ->  maliciousFile,\n                maliciousLink,\n                userAccount.userExecution\n    }"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "This UserAccount asset represents a user's account on a target system, encompassing various details and potential attack vectors. The user account is associated with a set of user rights, permissions, and attributes that could be exploited during an attack.\n\nThe user rights associated with this account are numerous and varied, ranging from the ability to abuse elevation control mechanisms and account access removal, to attempts at automated collection, data manipulation, and execution through APIs. The account also has ties to several files, such as bash_profile and bashrc, history, and various scripts and interpreters.\n\nOther attributes of the user account include credentials stored in files or the registry, email collection, and the potential for password cracking or guessing. The account is also linked to various services, cloud accounts, and group policies that could be exploited to gain additional access or escalate privileges.\n\nAdditionally, the user account is connected to several network-related aspects, such as network share discovery and connection removal, remote file copy, and even router internal and external network communications. This suggests that the account could potentially be used to manipulate data, establish one-way communication, or even set up a dead drop resolver for data exfiltration.\n\nLastly, the user account is associated with several execution-related actions, such as the execution of malicious files or links, and the potential for binary probability relations. This indicates that the account could be used to run malicious software or access malicious websites.\n\nIn summary, the UserAccount asset is a significant target for potential attacks due to its numerous associated user rights, files, services, and network connections. Attackers might attempt to exploit these associations to gain unauthorized access, escalate privileges, or exfiltrate data from the system.", "output": "asset UserAccount {\n        | userRights\n            ->  os.abuseElevationControlMechanism,\n                os.accountAccessRemoval,\n                os.accountDiscovery,\n                os.applicationWindowDiscovery,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptLaunchAgent,\n                os.attemptLogonScripts,\n                os.attemptPlistModification,\n                os.attemptSetuidAndSetgid,\n                os.attemptShortcutModification,\n                os.attemptSSHAuthorizedKeys,\n                os.attemptTaintSharedContent,\n                os.bash_profileAndBashrc,\n                os.bashHistory,\n                os.bruteForce,\n                os.bypassUserAccessControl,\n                os.changeDefaultFileAssociation,\n                os.clearCommandHistory,\n                os.cmstp,\n                os.commandAndScriptingInterpreter,\n                os.compileAfterDelivery,\n                os.compiledHTMLFile,\n                os.componentObjectModelHijacking,\n                os.controlPanel,\n                os.cOR_PROFILER,\n                os.credentialsInFiles,\n                os.credentialsInRegistry,\n                os.credentialStuffing,\n                os.cron,\n                os.dataDestruction,\n                os.dataEncoding,\n                os.dataFromInformationRepositories,\n                os.dataManipulation,\n                os.defaultAccounts,\n                os.deobfuscateOrDecodeFilesOrInformation,\n                os.disableOrModifyTools,\n                os.diskWipe,\n                os.dLLSearchOrderHijacking,\n                os.domainAccounts,\n                os.domainDiscovery,\n                os.domainGroups,\n                os.domainTrustDiscovery,\n                os.dynamicDataExchange,\n                os.dynamicResolution,\n                os.elevatedExecutionWithPrompt,\n                os.emailCollection,\n                os.executableInstallerFilePermissionsWeakness,\n                os.executionGuardrails,\n                os.executionThroughModuleLoad,\n                os.fileAndDirectoryDiscovery,\n                os.fileAndDirectoryPermissionsModification,\n                os.fileDeletion,\n                os.forcedAuthentication,\n                os.gatekeeperBypass,\n                os.groupPolicyModification,\n                os.groupPolicyPreferences,\n                os.gUIInputCapture,\n                os.hiddenFilesAndDirectories,\n                os.hiddenFileSystem,\n                os.hiddenWindow,\n                os.hISTCONTROL,\n                os.indicatorRemovalOnHost,\n                os.indirectCommandExecution,\n                os.inhibitSystemRecovery,\n                os.installRootCertificate,\n                os.installUtil,\n                os.internalSpearphishing,\n                os.lateralToolTransfer,\n                os.launchctl,\n                os.lC_LOAD_DYLIB_Addition,\n                os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                os.localAccounts,\n                os.localGroups,\n                os.manInTheMiddle,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.mshta,\n                os.msiexec,\n                os.networkShareConnectionRemoval,\n                os.networkShareDiscovery,\n                os.odbcconf,\n                os.goldenTicket,\n                os.parentPIDSpoofing,\n                os.passwordCracking,\n                os.passwordGuessing,\n                os.passwordPolicyDiscovery,\n                os.passwordSpraying,\n                os.pathInterceptionBySearchOrderHijacking,\n                os.peripheralDeviceDiscovery,\n                os.portableExecutableInjection,\n                os.portKnocking,\n                os.powerShellUserProfile,\n                os.privateKeys,\n                os.processDiscovery,\n                os.processDoppelganging,\n                os.processHollowing,\n                os.pubPrn,\n                os.registryRunKeysOrStartupFolder,\n                os.regsvcsOrRegasm,\n                os.regsvr32,\n                os.remoteDesktopProtocol,\n                os.remoteFileCopy, \n                os.remoteSystemDiscovery,\n                os.reopenedApplications,\n                os.resourceHijacking,\n                os.rootkit,\n                os.rundll32,\n                os.runVirtualInstance,\n                os.screensaver,\n                os.securitySoftwareDiscovery,\n                os.servicesFilePermissionsWeakness,\n                os.servicesRegistryPermissionsWeakness,\n                os.serviceStop,\n                os.signedScriptProxyExecution,\n                os.silverTicket,\n                os.sIPAndTrustProviderHijacking,\n                os.softwareDiscovery,\n                os.source,\n                os.spaceAfterFileName,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemInformationDiscovery,\n                os.systemNetworkConfigurationDiscovery,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.templateInjection,\n                os.threadExecutionHijacking,\n                os.timestomp,\n                os.trap,\n                os.trustedDeveloperUtilities,\n                os.videoCapture,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.xslScriptProcessing,\n                os.service.attemptExploitationForCredentialAccess,\n                os.service.attemptExploitationForDefenseEvasion,\n                os.service.attemptExploitationForPrivilegeEscalation,\n                os.service.attemptExploitationOfRemoteServices,\n                os.service.attemptExternalRemoteServices,\n                os.service.implantContainerImage,\n                os.service.remoteAccessSoftware,\n                os.service.cloudAccounts,\n                os.service.cloudGroups,\n                os.service.cloudServiceDiscovery,\n                os.service.cloudServiceDashboard,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.modifyCloudComputeInfrastructure,\n                os.service.officeTemplateMacros,\n                os.service.officeTest,\n                os.service.outlookForms,\n                os.service.outlookHomePage,\n                os.service.outlookRules,\n                os.service.addIns,\n                os.service.stealApplicationAccessToken,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.browser.browserBookmarkDiscovery,\n                os.service.browser.driveByCompromise,\n                os.service.browser.installExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.computer.router.internalNetwork.transmittedDataManipulation,\n                os.computer.router.externalNetwork.bidirectionaCommunication,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.computer.router.externalNetwork.deadDropResolver,\n                os.computer.router.externalNetwork.oneWayCommunication,\n                os.computer.router.externalNetwork.transmittedDataManipulation\n\n        | userCredentials\n            ->  userRights,\n                os.validAccounts,\n                os.computer.router.internalNetwork.exchangeServerCollection,\n                os.service.remoteServices\n\n        & userExecution\n            developer info: \"Binary probability relation.\"\n            ->  user.maliciousFile,\n                user.maliciousLink\n\n        | userInformation\n\n        # userTraining //(0.22)]\n            ->  os.cachedDomainCredentials,\n                os.confluence,\n                os.credentialsInFiles,\n                os.gUIInputCapture,\n                os.lSASecrets,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.nTDS,\n                os.plistModification,\n                os.reopenedApplications,\n                os.securityAccountManager,\n                os.sharepoint,\n                os.templateInjection,\n                os.twoFactorAuthenticationInterception, // remove smart cards when not in use\n                os.service.browser.browserExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.service.stealApplicationAccessToken,\n                os.service.spearphishingViaService,\n                os.service.useThirdpartySoftware\n\n        # userAccountManagement //(0.30)] \n            ->  os.accessTokenManipulation,\n                os.at,\n                os.attemptStartupItems,\n                os.bITSJobs,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.confluence,\n                os.cOR_PROFILER,\n                os.credentialStuffing,\n                os.cron,\n                os.disableOrModifySystemFirewall,\n                os.disableOrModifyTools,\n                os.disableWindowsEventLogging,\n                os.executableInstallerFilePermissionsWeakness,\n                os.indicatorBlocking,\n                os.launchAgent,\n                os.launchctl,\n                os.launchd,\n                os.launchDaemon,\n                os.manInTheBrowser,\n                os.passTheHash,\n                os.passTheTicket,\n                os.rc_common,\n                os.rDPHijacking,\n                os.remoteDesktopProtocol,\n                os.remoteScheduledTask,\n                os.scheduledTask,\n                os.servicesFilePermissionsWeakness,\n                os.serviceStop,\n                os.sharepoint,\n                os.shortcutModification,\n                os.systemdService,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsService,\n                os.winlogonHelperDLL,\n                os.service.remoteServices,\n                os.service.createSnapshot,\n                os.service.cloudServiceDashboard,\n                os.service.createCloudInstance,\n                os.service.deleteCloudInstance,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.stealApplicationAccessToken,\n                os.service.useThirdpartySoftware\n    }"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In the course of our ongoing system review, we've come across a UserAccount, specifically a RemoteDesktopUser, which is a specialized type of account with unique attributes. This particular user account is identified by its userCredentials.\n\nInterestingly, this RemoteDesktopUser account has an association with a multi-factor authentication mechanism, indicating an added layer of security for remote access. This multi-factor authentication is directly linked to the system's remote desktop protocol for authentication purposes.\n\nIt's worth noting that this RemoteDesktopUser account is a crucial component in our remote access infrastructure, as it's closely tied to the remote desktop protocol for user authentication. Ensuring the security of this user account and its associated multi-factor authentication mechanism is essential for maintaining the integrity of our remote access services.", "output": "asset RemoteDesktopUser extends UserAccount {\n        | userCredentials\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  os.remoteDesktopProtocol\n    }"}
{"instruction": "Convert the following cyber-attack description into Meta Attack Language code.", "input": "In the system under analysis, we have an important asset identified as the 'AdminAccount'. This account serves as the primary administrator account, housing significant user rights for system management. It's crucial to note that various system actions and attack steps are associated with this account, including account access removal, service manipulation, and registry modification.\n\nThe AdminAccount is a point of interest due to its potential to grant access to numerous sensitive operations, such as creating new accounts, modifying group policies, and executing PowerShell scripts. Attackers may target this account to elevate their privileges, access sensitive data, or execute malicious actions across the system.\n\nFor instance, the AdminAccount could be used to attempt automating the collection of credentials, executing through API, manipulating service registry permissions, or even executing high, medium, or low vulnerability exploits on public-facing applications. Additionally, it may be used to create new accounts, both locally and in the cloud, thus expanding an attacker's foothold in the system.\n\nIt's also important to note that the AdminAccount is connected to other assets, such as user accounts, operating system components, and service accounts, indicating a complex web of associations that attackers can exploit.\n\nLastly, the AdminAccount is linked to a category of privileged accounts, which also includes domain and local accounts. This category encompasses actions like access token manipulation, kernel module manipulation, and firmware corruption, among others, highlighting its critical nature in the system.", "output": "asset AdminAccount {\n        | adminRights\n            user info: \"Administrator is an actual account.\"\n            ->  userAccount.userRights,\n                createAccount, \n                os.abuseElevationControlMechanism,\n                os.accessibilityFeatures,\n                os.accountAccessRemoval,\n                os.appCertDLLs,\n                os.appInitDLLs,\n                os.applicationShimming,\n                os.at,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptCredentialsInFiles,\n                os.attemptDataDestruction,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptServiceRegistryPermissionsWeakness,\n                os.attemptServicesFilePermissionsWeakness,\n                os.attemptServiceStop,\n                os.attemptShortcutModification,\n                os.attemptSIDHistoryInjection,\n                os.attemptTimeProviders,\n                os.attemptWindowsAdminShares,\n                os.attemptWindowsManagementInstrumentationEventSubscription,\n                os.attemptWinlogonHelperDLL,             \n                os.authenticationPackage,\n                os.bootkit,   \n                os.clearWindowsEventLogs,\n                os.credentialAPIHooking,\n                os.credentialsFromPasswordStores,\n                os.dCShadow,\n                os.dCSync,\n                os.detailedRemoteSystemDiscovery,\n                os.disableWindowsEventLogging,\n                os.distributedComponentObjectModel,\n                os.domainControllerAuthentication,\n                os.exchangeEmailDelegatePermissions,\n                os.fileAndDirectoryDiscovery,\n                os.fileSystemLogicalOffsets,\n                os.firmwareCorruption, \n                os.groupPolicyModification,\n                os.imageFileExecutionOptionsInjection,\n                os.inhibitSystemRecovery,\n                os.lSASSDriver,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.netshHelperDLL,\n                os.networkServiceScan,\n                os.networkShareConnectionRemoval,\n                os.networkSniffing,\n                os.oSCredentialDumping,\n                os.parentPIDSpoofing,\n                os.passwordFilterDLL,\n                os.portMonitors,\n                os.powerShell,\n                os.powerShellAdminProfile,\n                os.processDiscovery,\n                os.queryRegistry,\n                os.registryRunKeysOrStartupFolder,\n                os.remoteScheduledTask,\n                os.resourceHijacking,\n                os.scheduledTask,\n                os.securitySupportProvider,\n                os.serviceExecution,\n                os.sQLStoredProcedures,\n                os.systemFirmware,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.transportAgent,\n                os.twoFactorAuthenticationInterception,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.additionalAzureServicePrincipalCredentials,\n                os.service.exchangeEmailDelegatePermissions,\n                os.service.addOffice365GlobalAdministratorRole\n             \n        | adminCredentials\n            ->  adminRights,\n                os.validAccounts,\n                os.service.remoteServices\n\n        | attemptCreateAccount @hidden\n            ->  createAccount\n\n        & createAccount //(0.05665)*Exponential(1440)]\n            ->  os.service.cloudAccount,\n                os.domainAccount,\n                os.localAccount\n\n        # privilegedAccountManagement //(0.30)]\n            ->  os.accessTokenManipulation,\n                os.domainAccount,\n                os.firmwareCorruption,\n                os.kernelModulesAndExtensions,\n                os.localAccount,\n                os.modifyRegistry,\n                os.passTheTicket,\n                os.powerShell,\n                os.remoteDesktopProtocol,\n                os.serviceExecution,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemFirmware,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.exploitationOfRemoteServices,\n                os.service.cloudAccount,\n                os.service.useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators\n                os.service.exploitHighVulnerabilityPublicFacingApplication,\n                os.service.exploitMediumVulnerabilityPublicFacingApplication,\n                os.service.exploitLowVulnerabilityPublicFacingApplication\n    }"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In a system under assessment, there are several key assets of interest that could be targeted by adversaries. One such asset is the Service, a component that potentially connects to various third-party services and applications.\n\nThe Service can attempt to establish trusted relationships through hidden channels, exploiting existing connections that may not be as secure as standard access points. Adversaries might also seek to leverage third-party software installed within the network for unauthorized access.\n\nWithin the Service, there are several attributes of note. For instance, the applicationAccessToken is a binary probability distribution that, once stolen or gathered, can be used instantly to bypass typical authentication processes. Adversaries may collect sensitive data, cloud service information, and even cloud account credentials as part of their attack strategy.\n\nThe Service also interacts with cloud resources extensively. Adversaries might attempt to discover, enumerate, and access cloud-based services after gaining initial access. They could manipulate cloud firewalls, create, delete, or revert cloud instances, and even set up email forwarding rules or remote email collection to gather sensitive information.\n\nThe Service's cloud accounts and associated groups can also be targeted, with adversaries seeking to obtain and abuse cloud account credentials to gain persistence, privilege escalation, or defense evasion. Additionally, they might add adversary-controlled credentials for Azure Service Principals or even grant themselves higher permission levels within email accounts.\n\nIn essence, the Service presents a significant attack surface for adversaries, offering a variety of potential entry points and methods for data collection and manipulation within the system.", "output": "asset Service {\n        | attemptTrustedRelationship @hidden\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n\n        & useThirdpartySoftware\n\n        | collectVideo @hidden\n\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n\n        | accessCloudBasedServiceResources\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n \n        | cloudServiceDiscovery\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n\n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n\n        | applicationExhaustionFlood //}"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "In a recent system assessment, we've identified a category of potential risks related to third-party software integrated within our network. This category includes components such as the 'ThirdpartySoftware' asset, which extends our existing services.\n\nThe ThirdpartySoftware asset is significant due to its ability to establish trusted relationships with external entities, potentially bypassing standard security measures. This could be exploited by adversaries seeking access to our internal network systems, as they might leverage existing connections that may not be as heavily guarded. The user information associated with this risk indicates that valid accounts used by the other party for network access could be compromised.\n\nAdditionally, ThirdpartySoftware provides a conduit for adversaries to gain access and execute code within our systems by using third-party application deployment systems installed within our network. This risk is represented by the 'attemptUseThirdpartySoftware' step.\n\nFurthermore, several other critical system configurations, such as software updates, multi-factor authentication, password policies, and Active Directory Configuration, are tied to the use of ThirdpartySoftware. Properly managing these configurations and employing network segmentation strategies, including limiting outgoing traffic to only necessary ports, can help mitigate the risks associated with this asset.\n\nIt's essential to keep a close eye on our third-party software integrations, as they can serve as a potential weak link in our security posture. By addressing these risks, we can bolster our defenses and maintain the integrity of our network.", "output": "asset ThirdpartySoftware extends Service {  \n        | attemptTrustedRelationship @hidden\n            +>  trustedRelationship\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n            +>  os.validAccounts // Valid Accounts used by the other party for access to internal network systems may be compromised\n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            +>  useThirdpartySoftware\n\n        & useThirdpartySoftware\n            +>  os.executeCode \n\n        # updateSoftware //(0.567125)]\n            +>  useThirdpartySoftware\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  useThirdpartySoftware\n\n        # passwordPolicies \n            +>  useThirdpartySoftware\n\n        # activeDirectoryConfiguration\n            +>  useThirdpartySoftware\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            +>  trustedRelationship,\n                useThirdpartySoftware\n    }"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In the course of our system analysis, we've identified a significant component known as the VideoCallApplication, which operates under the Service category. This application is designed to facilitate video calls and, as per its code, it appears to have a unique feature called 'collectVideo' that operates covertly.\n\nThe 'collectVideo' feature seems to be directly linked to the operating system's computer, specifically its capability to collect video data, denoted as 'os.computer.collectVideo'. This suggests that the VideoCallApplication may be gathering video data from the system without explicit user consent or knowledge, which could potentially pose a privacy concern.\n\nIt's worth noting that the VideoCallApplication's 'collectVideo' feature is a crucial element in the system's functionality, as it directly connects to the operating system's video data collection capability. This relationship between the VideoCallApplication and the operating system's video data collection feature should be thoroughly investigated to ensure the system's compliance with privacy regulations and to mitigate any potential risks.", "output": "asset VideoCallApplication extends Service { \n        | collectVideo @hidden\n            +>  os.computer.collectVideo\n    }"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "In the examined code, we've identified a model for various components within a cloud-based environment, specifically focusing on a CloudService. This CloudService is an extension of a Service, and it encompasses several key attributes and associations that could be of interest to adversaries.\n\n1. **Application Access Token**: Stolen or gathered tokens can provide adversaries instant access to remote systems, bypassing typical authentication processes. These tokens are often obtained through spearphishing techniques, allowing adversaries to access cloud-based services, resources, and accounts.\n\n2. **Access Cloud-Based Service Resources**: This action is closely related to the Application Access Token, as it involves using the token to access various resources within a cloud-based service.\n\n3. **Steal Application Access Token**: Adversaries may exploit third-party application deployment systems within an enterprise network to gain unauthorized access to application access tokens.\n\n4. **Persistence**: Adversaries may establish persistence by maintaining adversary-controlled credentials for cloud accounts, Service Principals, or email accounts.\n\n5. **Sensitive Data Collected**: Adversaries may target cloud services to collect sensitive data, including credentials, instance metadata, and other information that could aid in further exploitation.\n\n6. **Cloud Service Information Collected**: Adversaries might enumerate cloud services running on a system after gaining access to gather useful information, such as specific services, resources, and features.\n\n7. **Cloud Account**: Adversaries might attempt to list cloud accounts to gain Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\n\n8. **Cloud Accounts**: Obtaining and abusing the credentials of a cloud account can provide adversaries with an avenue for Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\n\n9. **Cloud Groups**: Adversaries might find cloud groups and permission settings to determine the roles of users and groups within an environment, potentially identifying which users are associated with a particular group.\n\n10. **Cloud Instance Metadata API**: Adversaries may target this API to collect credentials and other sensitive data.\n\n11. **Cloud Service Discovery**: Adversaries might enumerate the cloud services running on a system after gaining access to gather useful information.\n\n12. **Cloud Service Dashboard**: Adversaries may use a cloud service dashboard GUI with stolen credentials to gain information from an operational cloud environment.\n\n13. **Disable or Modify Cloud Firewall**: Adversaries might disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\n\n14. **Email Account**: Adversaries may attempt to list email addresses and accounts.\n\n15. **Email Address Collected**: Adversaries may target an Exchange server or Office 365 to collect email addresses and accounts.\n\n16. **Additional Azure Service Principal Credentials**: Adversaries might add adversary-controlled credentials for Azure Service Principals to maintain persistent access to victim Azure accounts.\n\n17. **Exchange Email Delegate Permissions**: Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account.\n\n18. **Add Office 365 Global Administrator Role**: An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\n\n19. **Modify Cloud Compute Infrastructure**: Adversaries might modify a cloud account's compute service infrastructure to evade defenses.\n\n20. **Create Snapshot**: Adversaries may create a snapshot or data backup within a cloud account to evade defenses.\n\n21. **Create Cloud Instance**: Adversaries might create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\n\n22. **Delete Cloud Instance**: Adversaries may delete a cloud instance after performing malicious activities, potentially to evade detection and remove evidence of their presence.\n\n23. **Revert Cloud Instance**: Adversaries might revert changes made to a cloud instance after performing malicious activities, again potentially to evade detection and remove evidence of their presence.\n\n24. **Remote Email Collection**: Adversaries may target an Exchange server or Office 365 to collect sensitive information.\n\n25. **Email Forwarding Rule**: Adversaries might setup email forwarding rules to collect sensitive information.", "output": "asset CloudService extends Service {\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n            +>  accessCloudBasedServiceResources\n\n        | accessCloudBasedServiceResources\n\n        & stealApplicationAccessToken\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            +>  browser.spearphishingLink, //  send a link through Spearphishing Link to the target user to entice them to grant access to the application\n                applicationAccessToken\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n            user info: \"Adversaries may attempt to get a listing of cloud accounts.\"\n            +>  os.persistence\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            +>  attemptTrustedRelationship,\n                remoteServices,\n                attemptExternalRemoteServices, // \n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.firewall.bypassFirewall,\n                os.bypassHostIntrusionPrevention,\n                os.bypassApplicationControl,\n                os.bypassSystemAccessControls,\n                os.bypassAntivirus\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n            +>  sensitiveDataCollected\n\n        | cloudServiceDiscovery\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n            +>  cloudServiceInformationCollected\n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n            +>  cloudServiceInformationCollected\n   \n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n            +>  os.computer.router.internalNetwork.c2Connected // modifying or disabling a cloud firewall may enable adversary C2 communications\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n            +>  emailAddressCollected\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n            +>  persistence\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  os.internalSpearphishing\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n            +>  os.adminAccount.attemptCreateAccount\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n            +>  createSnapshot,\n                createCloudInstance,\n                deleteCloudInstance,\n                revertCloudInstance\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n            +>  os.dataFromLocalSystem,\n                os.remoteDataStaging,\n                deleteCloudInstance,\n                os.computer.router.firewall.bypassFirewall\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n            +>  os.attemptRemoteDesktopProtocol, // \n                sensitiveDataCollected\n\n        & emailForwardingRule //(0.00061)]\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n            +>  sensitiveDataCollected\n\n        | applicationExhaustionFlood //}"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In the context of our system, the Browser asset serves as a gateway for users to access various web resources. It's crucial to maintain security around this asset considering its potential vulnerabilities.\n\nFor instance, the Browser is susceptible to a drive-by compromise, where an attacker can gain unauthorized access by exploiting vulnerabilities in the browser or web pages visited. This can lead to malvertising, cross-site scripting, unauthorized user execution, or attempts to bypass gatekeepers.\n\nMalvertising, a common form of online advertising fraud, can be used to steal application access tokens, while cross-site scripting may also be employed for the same purpose.\n\nCredentials can also be acquired from the browser by adversaries, either through phishing attempts or by reading specific files related to the target browser. Phishing messages are designed to elicit sensitive information or gain system access. Spearphishing links and attachments are two common methods used within phishing attacks.\n\nSpearphishing links require active user interaction, often leveraging social engineering to get the user to click or copy and paste a URL into their browser. Spearphishing attachments, on the other hand, are malware attached to emails and are a specific variant of spearphishing.\n\nAdversaries may also enumerate browser bookmarks to learn more about compromised hosts, potentially revealing personal information or details about internal network resources.\n\nBrowser extensions can be installed maliciously and used for various malicious purposes, such as stealing sensitive data, persistence, or even acting as installers for Remote Access Trojans (RATs).\n\nAnother vulnerability is the stealing of web session cookies, which can be used to authenticate to web applications and services without needing credentials. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.\n\nThe Browser also allows for software updates, which, if not properly secured, could lead to drive-by compromises. Protections against exploits are crucial to prevent such incidents. Regular audits and strong password policies should be enforced, while multi-factor authentication can help mitigate the impact of stolen session cookies.\n\nLastly, it's essential to restrict web-based content to prevent the transmission of unknown or unused attachments, potentially protecting against spearphishing attachments, links, and other related threats.", "output": "asset Browser {\n        & driveByCompromise //(0.37)]\n            user info: \"A drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing.\" \n            ->  malvertising,\n                crossSiteScripting,\n                service.os.computer.user.attemptUserExecution,\n                service.attemptExploitationForClientExecution,\n                service.os.attemptGatekeeperBypass\n\n\n        | malvertising //(9,0.167)]\n            ->  service.stealApplicationAccessToken\n\n        | crossSiteScripting //(0.32)*Exponential(1)]\n            ->  service.stealApplicationAccessToken\n\n        & credentialsFromWebBrowsers //(0.625)]\n            user info: \"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\"\n            ->  service.os.userAccount.userCredentials\n \n        | phishing\n            user info: \"Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems.\"\n            ->  attemptSpearphishingAttachment,\n                attemptSpearphishingLink,\n                service.attemptSpearphishingViaService\n\n        | attemptSpearphishingLink @hidden      \n            ->  spearphishingLink\n\n        & spearphishingLink\n            user info: \"The links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution.\"\n            ->  service.os.computer.user.attemptMaliciousLink\n            \n        | attemptSpearphishingAttachment @hidden      \n            ->  spearphishingAttachment\n      \n        & spearphishingAttachment\n            user info: \"Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email.\" \n            ->  service.os.computer.user.attemptMaliciousFile,\n                service.os.attemptControlPanel // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns\n\n        | browserBookmarkDiscovery //(0.03065)*Exponential(4)]\n            user info: \"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\"\n            ->  service.os.userAccount.userInformation,\n                service.os.computer.router.internalNetwork.internalNetworkResourcesInformation\n\n        | installExtensions\n            ->  browserExtensions\n\n        & browserExtensions //(0.85)]\n            user info: \"Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser, to include credentials, and be used as an installer for a RAT for persistence.\" \n            ->  service.os.userAccount.userInformation,\n                service.os.userAccount.userCredentials,\n                service.os.persistence\n\n        & stealWebSessionCookie\n            user info: \"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials.\"\n            ->  attemptWebSessionCookie // after an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application\n\n        | attemptWebSessionCookie @hidden\n            ->  webSessionCookie\n\n        & webSessionCookie\n            user info: \"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.\"\n            ->  service.os.sensitiveDataCollected\n\n        # updateSoftware //(0.567125)]\n            ->  driveByCompromise\n\n        # exploitProtection\n            ->  driveByCompromise\n\n        # audit \n            ->  browserExtensions\n\n        # passwordPolicies \n            ->  credentialsFromWebBrowsers\n\n        # multiFactorAuthentication //(0.99325)]\n            ->  stealWebSessionCookie\n                \n        # restrictWebBasedContent //(0.3)] // Block unknown or unused attachments by default that should not be transmitted over email.\n            ->  spearphishingAttachment, \n                spearphishingLink,\n                service.spearphishingViaService,\n                driveByCompromise,\n                service.os.commandAndScriptingInterpreter,\n                service.os.domainGenerationAlgorithms,\n                service.os.compiledHTMLFile,\n                service.os.userAccount.userExecution,\n                service.os.computer.user.maliciousLink,\n                service.os.computer.router.externalNetwork.bidirectionaCommunication,\n                service.os.computer.router.externalNetwork.deadDropResolver,\n                service.os.computer.router.externalNetwork.oneWayCommunication,\n                service.os.computer.router.externalNetwork.exfiltrationOverWebService\n    }"}
{"instruction": "Given this cyber incident, write its equivalent representation in Meta Attack Language.", "input": "In the OS category, we have a diverse set of components that represent potential attack surfaces for adversaries.\n\n1. **appCertDLLs**: This component is associated with user-level applications. The information related to this value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\n\n2. **bypassUserAccessControl**: This is a binary probability distribution that represents an attempt to bypass user access controls, potentially allowing adversaries to execute unauthorized operations.\n\n3. **changeDefaultFileAssociation**: Adversaries may establish persistence by executing malicious content triggered by a file type association.\n\n4. **gatekeeperBypass**: This component allows apps loaded onto the system from certain sources to bypass the built-in Gatekeeper check, providing a potential route for adversaries.\n\n5. **cmstp**: This binary probability distribution can be abused by adversaries to proxy the execution of malicious code.\n\n6. **compiledHTMLFile**: This technology can be abused to conceal malicious code, which can be triggered by user execution.\n\n7. **cOR_PROFILER**: Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\n\n8. **componentObjectModelHijacking**: Adversaries can use the Component Object Model (COM) system to insert malicious code that can be executed when that system component is executed through normal system operation.\n\n9. **controlPanel**: Adversaries may abuse control.exe to proxy the execution of malicious payloads.\n\n10. **credentialsInRegistry**: This component represents a potential target for adversaries, as it may contain sensitive information like passwords that can be used for offline cracking.\n\n11. **deobfuscateOrDecodeFilesOrInformation**: This component may be targeted by adversaries to decode or deobfuscate malicious files or information.\n\n12. **dLLSearchOrderHijacking**: Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\n\n13. **domainTrustDiscovery**: This component represents a potential avenue for adversaries to discover domain trust relationships, which could aid in lateral movement.\n\n14. **dynamicDataExchange**: Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications, and could potentially be abused by adversaries.\n\n15. **mshta**: This utility executes Microsoft HTML Applications and can be used to proxy execute malicious .hta files, as well as bypass application whitelisting.\n\n16. **windowsRemoteManagement**: Allows a user to interact with a remote system, potentially providing adversaries with a means to execute commands remotely.\n\n17. **_etc_passwdAND_etc_shadow**: Adversaries may attempt to dump the contents of these files to enable offline password cracking.\n\n18. **accessibilityFeatures**: This component helps attackers to open a System-level command shell, where they can execute arbitrary Windows commands, including adding or modifying accounts on the system.\n\n19. **appInitDLLs**: Utilizing these DLLs may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\n\n20. **applicationShimming**: Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\n\n21. **at**: Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\n\n22. **attemptBootkit**: Refers to an attempt by adversaries to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\n\n23. **credentialAPIHooking**: Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\n\n24. **dCShadow**: This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\n\n25. **dCSync**: Adversaries may attempt", "output": "asset OS {\n        | attemptBITSJobs @hidden\n\n        | attemptAppCertDLLs @hidden\n\n        & appCertDLLs\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n\n        & bypassUserAccessControl //(0.277)]\n\n        | changeDefaultFileAssociation\n            user info: \"Adversaries may establish persistence by executing malicious content triggered by a file type association.\"\n\n        | attemptGatekeeperBypass @hidden\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            \n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            \n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            \n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            \n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            \n        | deobfuscateOrDecodeFilesOrInformation\n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            \n        & domainTrustDiscovery //(0.13)*Exponential(127.1)]\n            \n        & dynamicDataExchange //(0.93)*Exponential(1)]\n            user info: \"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications.\"\n            \n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n\n        & windowsRemoteManagement\n            developer info: \"Binary probability distribution. Use of Valid Acounts\"\n            user info: \"WinRM allows a user to interact with a remote system.\"\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n\n        & appInitDLLs //(0.79)*Exponential(127.1)]\n\n        & applicationShimming\n            user info: \"Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\"\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        | attemptBootkit @hidden\n\n        | attemptElevatedExecutionWithPrompt @hidden\n\n        | attemptLSASSDriver @hidden \n\n        | attemptLSASSMemory @hidden\n\n        | attemptPasswordFilterDLL @hidden\n\n        | attemptServiceExecution @hidden\n\n        | attemptServiceRegistryPermissionsWeakness @hidden\n\n        | attemptServicesFilePermissionsWeakness @hidden\n\n        | attemptSIDHistoryInjection @hidden\n            user info: \"Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\"\n\n        | attemptSIPAndTrustProviderHijacking @hidden\n\n        | attemptSQLStoredProcedures @hidden\n\n        | attemptStartupItems @hidden\n\n        | attemptSystemFirmware @hidden\n\n        | attemptTimeProviders @hidden\n\n        | attemptTransportAgent @hidden\n\n        | attemptWinlogonHelperDLL @hidden\n\n        | attemptWindowsRemoteManagement @hidden\n\n        & winlogonHelperDLL\n            user info: \"Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.\"\n\n        & authenticationPackage\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries can use Windows Authentication Packages for persistence for persistence.\"\n\n        & bootkit //(0.46)]\n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n\n        | credentialAPIHooking          \n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        & emond //(2)]\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n\n        | imageFileExecutionOptionsInjection\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n\n        | netshHelperDLL\n            user info: \"Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner.\"\n\n        & passwordFilterDLL\n            user info: \"Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains.\"\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        | portMonitors\n            user info: \"Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\"\n\n        | attemptPowerShell @hidden\n            user info: \"Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.\"\n\n        & powerShell //(0.55)]\n            user info: \"Administrator permissions are required to use PowerShell to connect to remote systems.\"    \n\n        | attemptPowerShellAdminProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n        \n        & powerShellAdminProfile //(0.5)*Exponential(2)]\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n\n        & queryRegistry //(0.05226)]\n            user info: \"The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network.\"\n\n        & rc_common\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n\n        & remoteScheduledTask\n\n        & scheduledTask //(0.33)*Exponential(54.3)]\n            user info: \"An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\"\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n\n        & securitySupportProvider\n            user info: \"An adversary may modify these Registry keys to add new SSPs.\"\n\n        & serviceExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager.\"\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        & systemFirmware\n            user info: \"System firmware may be modified by an adversary to perform or assist in malicious activity.\"\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        | attemptWindowsAdminShares @hidden\n\n        | attemptExecutionThroughAPI @hidden\n\n        | attemptAccessTokenManipulation @hidden\n\n        & accessTokenManipulation //(0.20715)]\n            user info: \"Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.\"\n\n        | attemptControlPanel @hidden\n\n        | attemptDistributedComponentObjectModel @hidden\n\n        | attemptLaunchAgent @hidden\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n\n        | attemptAccessibilityFeatures @hidden\n        \n        | attemptLogonScripts @hidden\n\n        | attemptPlistModification @hidden\n\n        | attemptRemoteDesktopProtocol @hidden\n\n        | attemptServiceStop @hidden //}"}
{"instruction": "Represent the attack behavior below in your custom Meta Attack Language.", "input": "In the Windows operating system landscape, several attack vectors have been identified that adversaries can leverage to gain unauthorized access, escalate privileges, and maintain persistence.\n\n1. **AbuseElevationControlMechanism**: Adversaries may circumvent mechanisms designed to control elevate privileges, attempting to gain higher-level permissions. This could lead to attempts to bypass user access control and execute malicious code.\n\n2. **AccountManipulation**: Account manipulation can aid adversaries in maintaining access to credentials and certain permission levels within an environment. This can include exchanging email delegate permissions to gain access to adversary-controlled email accounts.\n\n3. **at.exe**: The \"at\" utility is abused to perform task scheduling for initial or recurring execution of malicious code. This can facilitate attempts at scheduled task execution and executeCode.\n\n4. **appCertDLLs**: This value can be used to obtain persistence and privilege escalation, causing a malicious DLL to be loaded and run in the context of separate processes on the computer, leading to process injection.\n\n5. **appInitDLLs**: Manipulation of appInitDLLs can lead to persistence on the system.\n\n6. **accessibilityFeatures**: Adversaries may abuse these features to open a System-level command shell, allowing them to execute arbitrary Windows commands, including adding or modifying accounts on the system, resulting in persistence.\n\n7. **BITSJobs**: Adversaries may abuse BITS to download, execute, and even clean up after running malicious code, potentially leading to executeCode, persistence, and Exfiltration Over Alternative Protocol.\n\n8. **bootOrLogonAutostartExecution**: Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\n\n9. **commandAndScriptingInterpreter**: Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries, potentially leading to attempts at PowerShell execution.\n\n10. **ComponentObjectModel**: Adversaries may abuse this system to insert malicious code that can be executed, resulting in process injection and persistence.\n\n11. **cmstp**: Adversaries may abuse CMSTP to proxy execution of malicious code, leading to bypass User Access Control, codeProxyExecution, and bypassAntivirus.\n\n12. **codeSigningCertificate**: Adversaries may create, acquire, or steal code signing materials to sign their malware or tools, which can lead to bypass User Access Control.\n\n13. **collectHashInformation**: This technique can lead to Pass the Hash and Network Sniffing attacks.\n\n14. **dynamicLinkLibraryInjection**: Adversaries may inject dynamic-link libraries (DLLs) into processes to evade process-based defenses and potentially elevate privileges.\n\n15. **portableExecutableInjection**: Injecting portable executables (PE) into processes can also aid in evading process-based defenses and potentially elevate privileges.\n\n16. **threadExecutionHijacking**: Injecting malicious code into hijacked processes can evade process-based defenses and potentially elevate privileges.\n\n17. **asynchronousProcedureCall**: Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue to evade process-based defenses and potentially elevate privileges.\n\n18. **threadLocalStorage**: Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks to evade process-based defenses and potentially elevate privileges.\n\n19. **deobfuscateOrDecodeFilesOrInformation**: This technique can help bypass antivirus, host intrusion prevention, signature-based detection, network intrusion detection on both internal and external networks, and bypass application whitelisting and digital certificate validation.\n\n20. **disableWindowsEventLogging**: Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits, potentially bypassing log analysis.\n\n21. **DLLSearchOrderHijacking**: Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\n\n22. **DLLSideLoading**: This technique can bypass process whitelisting and antivirus, potentially leading to attempts at LSASSDriver.\n\n23. **domainControllerAuthentication**:", "output": "asset Windows extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptBypassUserAccessControl\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  exchangeEmailDelegatePermissions\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  attemptScheduledTask, // at can be used to schedule a task on a system\n                executeCode\n\n        | attemptAppCertDLLs @hidden\n            +>  appCertDLLs \n            \n        & appCertDLLs\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n            +>  processInjection\n\n        | attemptAppInitDLLs @hidden\n            ->  appInitDLLs\n            \n        & appInitDLLs //(0.79)*Exponential(127.1)]\n            +>  persistence\n\n        | attemptAccessibilityFeatures @hidden\n            +>  accessibilityFeatures\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n            +>  persistence\n\n        | attemptBITSJobs @hidden\n            +>  bITSJobs\n\n        & bITSJobs //(0.264)]\n            user info: \"Adversaries may abuse BITS to download, execute, and even clean up after running malicious code.\"\n            +>  executeCode,\n                persistence,\n                attemptExfiltrationOverAternativeProtocol // BITS upload functionalities can be used to perform Exfiltration Over Alternative Protocol\n\n        | bootOrLogonAutostartExecution\n            +>  registryRunKeysOrStartupFolder,\n                authenticationPackage,\n                attemptTimeProviders,\n                attemptWinlogonHelperDLL,\n                attemptLSASSDriver,\n                attemptShortcutModification,\n                securitySupportProvider,\n                portMonitors\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                networkLogonScripts\n\n        | networkLogonScripts\n            user info: \"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence.\"\n            ->  computer.router.internalNetwork.persistence\n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n            +>  attemptPowerShell, // these logs may be cleared through PowerShell\n                bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassLogAnalysis\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            +>  attemptBypassUserAccessControl, // leads to Bypass User Account Control attack\n                codeProxyExecution,\n                bypassAntivirus\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n            ->  attemptBypassUserAccessControl\n\n        | collectHashInformation\n            +>  attemptPassTheHash, // leads to Pass the Hash attack\n                networkSniffing // leads to Network Sniffing attack\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  windowsCommandShell,\n                attemptPowerShell\n\n        | attemptComponentObjectModel @hidden\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  componentObjectModel\n\n        & componentObjectModel //(96)]\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  executeCode\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptWindowsService\n\n        | attemptDistributedComponentObjectModel @hidden\n            +>  distributedComponentObjectModel\n\n        & distributedComponentObjectModel //(96)]\n            user info: \"Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM).\"\n            +>  computer.router.internalNetwork.remoteCOMExecution\n\n        | attemptControlPanel @hidden\n            +>  controlPanel\n\n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            +>  executeCode,\n                bypassApplicationControl,\n                service.browser.phishing // malicious Control Panel items can be delivered via Phishing campaigns\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            +>  processInjection,\n                persistence            \n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n            +>  bypassFileMonitoring,\n                bypassHostIntrusionPrevention, \n                bypassAntivirus         \n\n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            +>  computer.user.attemptUserExecution, // leads to User Execution attack\n                bypassApplicationWhitelisting,\n                bypassDigitalCertificateValidation   \n\n        | attemptCOR_PROFILER @hidden\n            ->  cOR_PROFILER\n\n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n            +>  persistence,\n                attemptBypassUserAccessControl, // to elevate privileges \n                attemptComponentObjectModel,\n                impareDefenses\n\n        | credentialAPIHooking\n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n            +>  userAccount.userCredentials\n\n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            +>  userAccount.userCredentials\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n            +>  attemptSIDHistoryInjection,\n                bypassLogAnalysis\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n            +>  attemptGoldenTicket, // hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket\n                attemptSilverTicket,\n                accountManipulation // hashes can then be used to change an account's password\n\n        & dynamicLinkLibraryInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & portableExecutableInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadExecutionHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & asynchronousProcedureCall\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadLocalStorage\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | deobfuscateOrDecodeFilesOrInformation \n            +>  bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassSignatureBasedDetection,\n                computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection     \n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n            +>  bypassLogAnalysis\n\n        | attemptDLLSearchOrderHijacking @hidden\n            ->  dLLSearchOrderHijacking \n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            +>  bypassProcessWhitelisting,\n                attemptBypassUserAccessControl,\n                userAccount.userRights,\n                attemptLSASSDriver,\n                service.attemptExploitationForPrivilegeEscalation                   \n               \n        | dLLSideLoading //(0.0755)]\n            ->  bypassProcessWhitelisting,\n                bypassAntivirus,\n                attemptLSASSDriver\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        | attemptLSASSDriver @hidden \n            +>  lSASSDriver\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n            +>  executeCode,\n                persistence\n\n        & cachedDomainCredentials\n            user info: \"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\"\n            +>  collectHashInformation,\n                attemptDomainAccounts\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  changeDefaultFileAssociation,\n                screensaver,\n                attemptWindowsManagementInstrumentationEventSubscription,\n                netshHelperDLL,\n                attemptAccessibilityFeatures,\n                attemptAppCertDLLs,\n                attemptAppInitDLLs,\n                attemptApplicationShimming,\n                imageFileExecutionOptionsInjection,\n                powerShellUserProfile,\n                powerShellAdminProfile,             \n                componentObjectModelHijacking\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  ntfsFileAttributes,\n                attemptHiddenWindow\n\n        & lSASecrets\n            user info: \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\"\n            +>  userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  attemptCOR_PROFILER,\n                attemptDLLSearchOrderHijacking,\n                dLLSideLoading,\n                executableInstallerFilePermissionsWeakness,\n                pathInterception,\n                attemptServicesFilePermissionsWeakness,\n                servicesRegistryPermissionsWeakness\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  disableWindowsEventLogging\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearWindowsEventLogs,\n                networkShareConnectionRemoval \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            +>  credentialAPIHooking,\n                attemptGUIInputCapture\n\n        & lateralToolTransfer\n            user info: \"Adversaries may transfer tools or other files between systems in a compromised environment.\"\n            +>  attemptWindowsAdminShares, // copy files laterally between internal victim systems using inherent file sharing protocols\n                attemptRemoteDesktopProtocol\n\n        & manInTheMiddle //(0.35)*Exponential(1)]\n            user info: \"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\"\n            +>  attemptLLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  invalidCodeSignature,\n                masqueradeTaskOrService\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  domainControllerAuthentication,\n                attemptPasswordFilterDLL\n\n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n            +>  fileProxyExecution,\n                bypassDigitalCertificateValidation,\n                bypassApplicationControl\n\n        & msiexec\n            user info: \"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution     \n\n        & odbcconf\n            user info: \"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  internalSpearphishing\n     \n        | executeCode \n            +>  componentFirmware,\n                service.attemptExploitationForPrivilegeEscalation,\n                computer.infectedWindowsComputer         \n\n        | attemptExecutionThroughAPI @hidden\n            +>  executionThroughAPI       \n\n        & executionThroughAPI //(0.56)]\n            user info: \"Adversary tools may directly use the Windows application programming interface (API) to execute binaries.\" \n            ->  executeCode,\n                processInjection\n\n        & executionThroughModuleLoad //(0.93)*Exponential(1)]\n            user info: \"Adversaries can use this functionality as a way to execute arbitrary code on a system.\"\n            +>  executeCode    \n        \n        & extraWindowMemoryInjection\n            user info: \"Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  windowsFileAndDirectoryPermissionsModification\n\n        & windowsFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptAccessibilityFeatures, // leads to Accessibility Features attack\n                bootOrLogonInitializationScripts, //leads to Logon Scripts attack\n                hijackExecutionFlow\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n            +>  bypassFileMonitoring,\n                bypassFileSystemAccessControls\n\n        | attemptFileSystemPermissionsWeakness @hidden\n            ->  fileSystemPermissionsWeakness\n\n        & fileSystemPermissionsWeakness //(1)]\n            user info: \"Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level.\"\n            ->  executeCode,\n                persistence,\n                attemptDLLSearchOrderHijacking,\n                attemptBypassUserAccessControl\n\n        & forcedAuthentication\n            user info: \"Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication.\"\n            +>  templateInjection,\n                bruteForce\n\n        & groupPolicyModification\n            user info: \"Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more.\"\n            +>  attemptScheduledTask, // leads to Scheduled Task attack\n                attemptDisableOrModifyTools, // leads to Disabling Security Tools attack\n                remoteFileCopy, // leads to Remote File Copy attack\n                attemptServiceExecution, // leads to Service Execution attack\n                adminAccount.attemptCreateAccount,\n                bypassSystemAccessControls,\n                bypassFileSystemAccessControls\n\n        & groupPolicyPreferences\n            user info: \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP).\"\n            +>  userAccount.userCredentials\n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  bypassUserAccessControl,\n                userAccount.userCredentials,\n                privateKeysWithPassphrase\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n\n        | imageFileExecutionOptionsInjection\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n            +>  bypassAutorunsAnalysis,\n                processInjection\n\n        | indirectCommandExecution\n            user info: \"Adversaries may abuse the Windows system features for Defense Evasion.\"\n            +>  executeCode,\n                bypassStaticFileAnalysis,\n                bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting\n\n        & installUtil\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility.\"\n            +>  codeProxyExecution  \n\n        | interProcessCommunication\n            user info: \"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution.\"\n            ->  attemptComponentObjectModel,\n                attemptDynamicDataExchange\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        | serviceExhaustionFlood //}"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "In this Linux operating system environment, several attack vectors and associated tactics are identified to help thwart malicious actors. These vectors range from exploiting user privileges to manipulating system processes and services.\n\n1. AbuseElevationControlMechanism: Adversaries may attempt to bypass mechanisms designed to control user privileges and elevate them to higher levels, using methods such as attempting SetUID and SetGID, or taking advantage of Sudo and Sudo caching.\n\n2. AccountManipulation: Account manipulation can be used by adversaries to maintain access to credentials and certain permission levels within the environment. This can involve attempting SSH authorized keys.\n\n3. at: Adversaries may abuse the 'at' utility to perform task scheduling for initial or recurring execution of malicious code, leading to persistence on the system.\n\n4. attemptBootkit @hidden: Adversaries may use bootkits for persistent execution.\n\n5. bootkit @hidden: Persistence is achieved by loading loadable kernel modules to evade defenses and remain covert on the system.\n\n6. bootOrLogonAutostartExecution: Adversaries may utilize kernel modules and extensions to repeatedly execute malicious payloads as part of persistence.\n\n7. attemptClearCommandHistory @hidden: Adversaries can delete logs or clear command histories to hide evidence of an intrusion. This can be done by modifying system logs, attempting to clear the Linux system logs, or bypassing log analysis and host forensic analysis.\n\n8. commandAndScriptingInterpreter: Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. This can involve using Unix shell.\n\n9. createOrModifySystemProcess: Adversaries can create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. This can involve attempting systemd service.\n\n10. credentialsFromPasswordStores: Adversaries may search for user credentials stored in common locations like securityd memory or _etc_passwd AND _etc_shadow.\n\n11. cron: Adversaries can abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code, leading to persistence on the system.\n\n12. _etc_passwdAND_etc_shadow: Adversaries may attempt to dump the contents of these files to enable offline password cracking and collect hash information.\n\n13. eventTriggeredExecution: Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. This can involve attempting Bash_profile and Bashrc, or trap.\n\n14. spaceAfterFileName: Adversaries may manipulate the name of executable files to make them appear legitimate or benign, a technique known as masquerading.\n\n15. attemptBash_profileAndBashrc @hidden: Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\n\n16. hijackExecutionFlow: Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs, using LD_PRELOAD.\n\n17. fileAndDirectoryPermissionsModification: Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\n\n18. impareDefenses: Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This can involve modifying hISTCONTROL.\n\n19. indicatorRemovalOnHost: Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware, to avoid detection.\n\n20. hISTCONTROL: Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands, bypassing log analysis and host forensic analysis.\n\n21. infectedOS: The OS may be infected, leading to further attack steps such as attempting Bash history.\n\n22. kernelModulesAndExtensions: Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses, potentially leading to the use of rootkits.\n\n23. lD_PRELOAD: Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries.\n\n24. masquerading: Adversaries may manipulate the name of a task or service to", "output": "asset Linux extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  attemptSSHAuthorizedKeys\n\n        & at\n            user info: \"Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode\n\n        | attemptBootkit @hidden\n            +>  bootkit\n\n        & bootkit //(0.46)]\n            +>  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        & clearLinuxSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptSystemdService\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n            +>  collectHashInformation\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptBash_profileAndBashrc,\n                trap\n\n        | spaceAfterFileName //(1)]\n            +>  computer.user.attemptUserExecution\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution. With File permissions, the adversary may instantly perform this technique.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            +>  persistence\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  lD_PRELOAD\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  linuxFileAndDirectoryPermissionsModification\n\n        & linuxFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearLinuxSystemLogs,\n                attemptClearCommandHistory \n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit        \n\n        & lD_PRELOAD\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                attemptProcMemory // populate a target process with more available gadgets\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  masqueradeTaskOrService,\n                spaceAfterFileName,\n                spaceAfterFileName\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n            +>  bypassHostIntrusionPrevention\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            +>  procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n            +>  collectHashInformation\n\n        & ptraceSystemCalls\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n            +>  bootkit\n\n        | attemptProcMemory @hidden\n            ->  procMemory\n\n        & procMemory\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            +>  ptraceSystemCalls,\n                attemptProcMemory,\n                vDSOHijacking\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  at,\n                cron\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            +>  attemptSQLStoredProcedures,\n                attemptTransportAgent\n\n        | attemptSetuidAndSetgid @hidden\n            +>  setuidAndSetgid      \n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence  \n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            +>  userAccount.userCredentials\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | attemptSQLStoredProcedures @hidden\n            +>  sQLStoredProcedures\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        & sudoAndSudoCaching //(288)]\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptSystemdService @hidden\n            ->  systemdService\n\n        & systemdService\n            user info: \"Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.\"\n            +>  persistence\n\n        | attemptTransportAgent @hidden\n            +>  transportAgent\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        | trap //(0.1)]\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            +>  executeCode,\n                persistence\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        & vDSOHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | executeCode \n            +>  computer.infectedLinuxComputer \n\n        # antivirus //(0.53)]\n            +>  kernelModulesAndExtensions\n\n        # audit \n            +>  at,\n                cron,\n                sQLStoredProcedures,\n                transportAgent\n\n        # behaviorPreventionOnEndpoint\n            +>  ptraceSystemCalls,\n                procMemory,\n                vDSOHijacking\n\n        # bootIntegrity \n            +>  bootkit\n\n        # codeSigning //(0.28)]\n            +>  sQLStoredProcedures,\n                transportAgent\n\n        # disableOrRemoveFeatureOrProgram\n            +>  sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # encryptSensitiveInformation\n            +>  clearLinuxSystemLogs\n\n        # executionPrevention\n            +>  kernelModulesAndExtensions,\n                unixShell,\n                lD_PRELOAD\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            ->  clearCommandHistory,\n                hISTCONTROL              \n\n        # limitSoftwareInstallation\n            +>  systemdService\n\n        # multiFactorAuthentication //(0.99325)]\n            +>  pluggableAuthenticationModules,\n                sSH\n            \n        # operatingSystemConfiguration\n            +>  bashHistory,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            +>  sSHHijacking,\n                procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        # privilegedAccountManagement //(0.30)]\n            +>  bootkit,\n                _etc_passwdAND_etc_shadow,\n                sSHHijacking,\n                sQLStoredProcedures,\n                sudoAndSudoCaching,\n                pluggableAuthenticationModules,\n                procFilesystem,\n                ptraceSystemCalls,\n                transportAgent,\n                linuxFileAndDirectoryPermissionsModification\n\n        # restrictFileAndDirectoryPermissions\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearLinuxSystemLogs,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                sudoAndSudoCaching,\n                systemdService,\n                procMemory,\n                linuxFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            +>  clearLinuxSystemLogs\n    }"}
{"instruction": "Given this cyber incident, write its equivalent representation in Meta Attack Language.", "input": "In this threat model, we outline various potential attack vectors and techniques that an adversary may employ to compromise a MacOS system. The model is organized around assets, attack steps, and associations between them.\n\n**Assets:**\n1. MacOS: The primary target of the adversary, which is extended from the base OS to include specific components and mechanisms.\n2. User information: Sensitive data associated with users, such as credentials, account details, and permission levels.\n3. Bash history: A record of previously executed commands, which can contain insecurely stored credentials.\n4. Bash_profile and Bashrc files: Files that can be manipulated to gain persistence each time a user logs in or opens a new shell.\n5. Boot or logon initialization scripts: Scripts automatically executed at boot or logon initialization to establish persistence.\n6. Command and scripting interpreters: Tools used to execute commands, scripts, or binaries, such as Unix shell, AppleScript, and Visual Basic.\n7. System processes: Processes at the system level, which can be modified or created to repeatedly execute malicious payloads.\n8. Credentials from password stores: Stored user credentials, obtained from locations like Keychain and securityd memory.\n9. Event Monitor Daemon (emond): A daemon used to schedule malicious commands to run on predictable event triggers for persistence.\n10. Visual Basic: A programming language that can be abused for execution.\n11. JavaScript or JScript: Scripting languages used to execute various behaviors, often as part of a Drive-by Compromise or secondary payloads.\n12. System logs: Logs that track system or user-initiated actions, which can be cleared to hide evidence of an intrusion.\n13. Code signing materials: Items used to sign malware or tools, such as code signing certificates.\n14. System processes (launchAgent, launchDaemon, launchctl, launchd): Processes used for task scheduling and execution of malicious code.\n15. Kernel modules and extensions: Loadable kernel modules used to covertly persist on a system and evade defenses.\n16. Gatekeeper bypass mechanisms: Techniques that bypass the built-in Gatekeeper check, allowing the loading of unsigned or untrusted apps.\n17. GUI input capture mechanisms: Methods for capturing user input for obtaining credentials.\n18. Artifact hiding techniques: Strategies for hiding traces of an intrusion, such as hidden users, hidden windows, and obfuscated files or information.\n19. Executable files: Executables that can be modified, hijacked, or manipulated for malicious purposes.\n20. Network shares: Shared resources on a network that can be discovered and exploited by adversaries.\n\n**Attack Steps:**\n1. Attempt to elevate privileges: Circumvent mechanisms designed to control elevated privileges to gain higher-level permissions.\n2. Account manipulation: Aid adversaries in maintaining access to credentials and certain permission levels within an environment.\n3. Attempt to clear command history: Abuse command history files to search for insecurely stored credentials.\n4. Attempt to clear system logs: Clear system logs to hide evidence of an intrusion.\n5. Create, acquire, or steal code signing materials: Sign malware or tools with legitimate code signing certificates.\n6. Abuse command and script interpreters: Execute commands, scripts, or binaries using tools like Unix shell, AppleScript, and Visual Basic.\n7. Establish persistence and/or elevate privileges using event triggers: Leverage system mechanisms that trigger execution based on specific events.\n8. Abuse Visual Basic for execution: Use Visual Basic to execute malicious code, often hidden in windows.\n9. Abuse JavaScript/JScript for execution: Use JavaScript/JScript to execute various behaviors, such as hosting malicious scripts on websites or downloading and executing these script files as secondary payloads.\n10. Attempt to clear command history: Abuse this feature to search for cleartext passwords and prevent their own commands from appearing in logs.\n11. Create or modify system-level processes: Repeatedly execute malicious payloads as part of persistence.\n12. Search for common password storage locations: Obtain user credentials from locations like Keychain and securityd memory.\n13. Abuse the cron utility for task scheduling: Schedule initial or recurring execution of malicious code.\n14. Take advantage of ambiguous paths", "output": "asset MacOS extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching,\n                attemptElevatedExecutionWithPrompt\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            +>  attemptSSHAuthorizedKeys\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                adminAccount.adminCredentials,\n                userAccount.userCredentials\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            ->  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions,\n                reopenedApplications,\n                attemptPlistModification\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                rc_common,\n                attemptStartupItems\n\n        & clearMacSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell,\n                appleScript\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptEmond,\n                attemptBash_profileAndBashrc,\n                trap,\n                lC_LOAD_DYLIB_Addition\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            +>  attemptHiddenWindow\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            +>  attemptHiddenWindow\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  attemptKeychain,\n                securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & dylibHijacking //(0.16)] \n            user info: \"Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.\"\n            ->  service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack\n\n        | attemptElevatedExecutionWithPrompt @hidden\n            +>  elevatedExecutionWithPrompt\n\n        & elevatedExecutionWithPrompt\n            user info: \"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptEmond @hidden\n            ->  emond\n\n        & emond //(2)]\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n            +>  persistence,\n                service.attemptExploitationForPrivilegeEscalation\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            +>  macFileAndDirectoryPermissionsModification\n\n        & macFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | executeCode \n            +>  computer.infectedMacOSComputer\n\n        | attemptGatekeeperBypass @hidden\n            +> gatekeeperBypass\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n            +>  bypassApplicationControl,\n                bypassAntivirus \n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  userAccount.userCredentials\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  attemptHiddenWindow,\n                hiddenUsers\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  dylibHijacking\n\n        | indicatorRemovalOnHost //(0.04)]\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearMacSystemLogs,\n                attemptClearCommandHistory  \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            +>  attemptGUIInputCapture\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n            +>  adminAccount.attemptCreateAccount\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit  \n\n        | attemptLaunchAgent @hidden\n            +>  launchAgent\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n            +>  persistence\n\n        & launchctl\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon \n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode,\n                persistence   \n\n        | attemptLaunchDaemon @hidden\n            ->  launchDaemon\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n            +>  persistence,\n                attemptLaunchAgent,\n                service.attemptExploitationForPrivilegeEscalation   \n\n        & lC_LOAD_DYLIB_Addition\n            user info: \"Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time.\"\n            +>  persistence\n\n        | attemptLogonScripts @hidden\n            +>  logonScripts\n\n        & logonScripts\n            ->  adminAccount.adminRights  \n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            +>  invalidCodeSignature,        \n                attemptElevatedExecutionWithPrompt // combine with elevatedExecutionWithPrompt to trick the user into granting escalated privileges to malicious code\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            +>  attemptSoftwarePacking\n\n        | attemptPlistModification @hidden\n            +>  plistModification\n\n        & plistModification\n            user info: \"Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism.\"\n            developer info: \"Binary probability distribution.\"\n            +>  bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting,\n                executeCode,\n                reopenedApplications,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & rc_common\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n            +>  persistence\n\n        & reopenedApplications\n            user info: \"An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine.\"\n            +>  persistence\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  cron,\n                launchd\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            +>  userAccount.userCredentials\n\n        | attemptSetuidAndSetgid @hidden\n            ->  setuidAndSetgid\n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptSoftwarePacking @hidden\n            ->  softwarePacking\n\n        & softwarePacking //(0.56784)]\n            user info: \"Packing an executable changes the file signature in an attempt to avoid signature-based detection.\"\n            ->  indicatorRemovalFromTools,\n                bypassSignatureBasedDetection,\n                bypassAntivirus,\n                bypassHeuristicDetection \n\n        | source\n            developer info: \"Binary probability distribution.\"\n            +>  executeCode\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n            +>  launchctl\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            +>  codeSigningCertificate,  \n                gatekeeperBypass\n\n        | attemptSudoAndSudoCaching @hidden\n            ->  sudoAndSudoCaching\n            \n        & sudoAndSudoCaching //(288)]\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | trap //(0.1)]\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            +>  executeCode,\n                persistence\n\n        | videoCapture //(0.74)*Exponential(0.1)]\n            +>  computer.collectVideo     \n\n        | spaceAfterFileName //(1)]\n            +>  computer.user.attemptUserExecution\n\n        & networkShareDiscovery //(0.0129)]\n            +>  computer.router.internalNetwork.networkShareDiscovery\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        | windowsManagementInstrumentation\n            ->  commandAndScriptingInterpreter\n\n        | attemptKeychain @hidden\n            ->  keychain\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n            +>  userAccount.userCredentials\n\n        & appleScript\n            developer info: \"Binary probability distribution.\"\n            ->  executeCode,\n                attemptGUIInputCapture // collect credentials\n                \n        | attemptStartupItems @hidden\n            +>  startupItems\n\n        & startupItems\n            user info: \"An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.\"\n            ->  persistence,\n                service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack \n\n        # antivirus //(0.53)]\n            +>  kernelModulesAndExtensions,\n                softwarePacking\n\n        # audit \n            +>  lC_LOAD_DYLIB_Addition,\n                cron,\n                launchd\n\n        # codeSigning //(0.28)]\n            +>  appleScript,\n                invalidCodeSignature,\n                lC_LOAD_DYLIB_Addition\n\n        # disableOrRemoveFeatureOrProgram\n            +>  emond,\n                reopenedApplications,\n                sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # executionPrevention\n            +>  appleScript,\n                elevatedExecutionWithPrompt,\n                gatekeeperBypass,\n                hiddenWindow,\n                kernelModulesAndExtensions,\n                lC_LOAD_DYLIB_Addition,\n                networkShareDiscovery,\n                unixShell\n\n        # encryptSensitiveInformation\n            +>  clearMacSystemLogs\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            ->  clearCommandHistory,\n                hISTCONTROL   \n\n        # multiFactorAuthentication //(0.99325)]\n            +>  pluggableAuthenticationModules,\n                sSH\n\n        # operatingSystemConfiguration\n            +>  bashHistory,\n                hiddenUsers,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            +>  keychain,\n                sSHHijacking\n\n        # privilegedAccountManagement //(0.30)]\n            +>  sSHHijacking,\n                macFileAndDirectoryPermissionsModification,\n                pluggableAuthenticationModules\n\n        # restrictFileAndDirectoryPermissions\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearMacSystemLogs,\n                dylibHijacking,\n                logonScripts,\n                plistModification,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                startupItems,\n                sudoAndSudoCaching,\n                macFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            +>  clearMacSystemLogs\n    }"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "In the course of our network assessment, we stumbled upon an essential component - the Router. This device serves as a crucial link, facilitating data communication between various network segments. It's a versatile piece of hardware, capable of processing and forwarding data packets based on their destination addresses.\n\nThe Router in question is a Cisco 891W series, a compact yet robust device, known for its reliability and flexibility. It's equipped with WAN interface card slots, which allow for multiple connections to different networks, enhancing redundancy and providing backup paths in case of a failure.\n\nThe Router is configured with an IP address (192.168.1.1) and a default gateway (192.168.1.254), ensuring that data destined for the wider network is properly routed. It's also worth noting that it is connected to a switch (model: Aruba 2930F) and a firewall (model: Palo Alto PA-220), creating a secure and efficient network infrastructure.\n\nFrom a security standpoint, the Router is a prime target for attackers seeking to disrupt network communications or gain unauthorized access to sensitive data. Potential attack steps include exploiting vulnerabilities in its firmware, launching denial-of-service attacks, or manipulating routing tables to reroute traffic through malicious networks. It's crucial to keep the Router's software up-to-date, implement access controls, and monitor its logs for any suspicious activity.\n\nIn summary, the Router is a vital asset in our network infrastructure, connecting different segments, facilitating data communication, and requiring careful management to maintain its security and integrity.", "output": "asset Router {\n        \n    }"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "In the system under review, there exists an internal network, a critical asset that hosts various applications and services. This network is equipped with a mechanism to obfuscate network traffic, aiming to evade detection by potential adversaries.\n\nWithin the internal network, there's a connection point at the application layer, designated as `applicationLayerConnexion`, which serves as a conduit for two primary associations: a connection to a command and control (C2) server, `c2Connexion`, and an attempt to bypass network intrusion detection systems (NIDS). Furthermore, the internal network's router is configured to bypass NIDS when data is transmitted externally, `router.externalNetwork.bypassNetworkIntrusionDetection`.\n\nAdditionally, the internal network employs an attempt to encrypt data for impact, labeled as `attemptDataEncryptedForImpact`. This attempt is tied to a specific encryption method, `dataEncryptedForImpact`, although the encryption key or method for this particular attempt remains hidden. It's important to note that the `dataEncryptedForImpact` component is present within the internal network, although the specifics of its usage are not immediately clear.", "output": "asset InternalNetwork {\n        | obfuscateNetworkTraffic\n\n        & applicationLayerConnexion\n            ->  c2Connexion,\n                bypassNetworkIntrusionDetection,\n                router.externalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //}"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "**Asset Description:**\n\nThe NetworkSharedDrive, a part of our internal network, serves as a platform for sharing sensitive content. This shared drive is accessible by multiple users within the organization, making it a potential target for adversaries. The drive's content can be tainted, meaning that once a user opens the shared file, the malicious portion can be executed, allowing the adversary to run their code on a remote system.\n\nIt's essential to note that the distribution of data on this shared drive is based on automated collection methods, as detailed in the automatedCollection.md file. This information could be of interest to adversaries, who might search network shares on compromised computers to find files they deem valuable.\n\n**Relationship Description:**\n\nThe NetworkSharedDrive is connected to the router's computer OS, enabling the execution of code (router.computer.os.executeCode) and the collection of sensitive data (router.computer.os.sensitiveDataCollected) through the shared content. This relationship highlights the potential security risks associated with the shared drive and the need for robust access controls and monitoring mechanisms.", "output": "asset NetworkSharedDrive extends InternalNetwork {\n        & taintSharedContent\n            user info: \"Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system.\"\n            +>  router.computer.os.executeCode\n\n        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results : see automatedCollection.md file\"\n            user info: \"Adversaries may search network shares on computers they have compromised to find files of interest.\"\n            +>  router.computer.os.sensitiveDataCollected\n    }"}
{"instruction": "Convert the following cyber-attack description into Meta Attack Language code.", "input": "In the course of our system analysis, we've identified an asset referred to as the ExternalNetwork. This network is notable for its susceptibility to potential threats, particularly those involving obfuscated network traffic, bypassing network intrusion detection, and data exfiltration.\n\nIn terms of connections, the ExternalNetwork is associated with cloud storage objects, which could potentially be a source of user information. Adversaries might exploit improper security measures to gain access to data objects stored in these cloud repositories. This connection is significant as it allows for the exfiltration of sensitive data collected by various services running on the router.computer.os.\n\nFurthermore, the ExternalNetwork is also linked to an attack step where data might be encrypted to amplify the impact of any potential breach. However, it seems that this encrypted data is hidden, possibly to evade detection by security measures. This step is labeled as dataEncryptedForImpact.\n\nIn summary, the ExternalNetwork is a critical asset that requires careful monitoring due to its associations with data exfiltration, obfuscated network traffic, and bypassing network intrusion detection. Additionally, the potential for adversaries to access data objects from cloud storage and the encrypted data for impact are concerns that need to be addressed promptly.", "output": "asset ExternalNetwork {\n        | obfuscateNetworkTraffic\n\n        | bypassNetworkIntrusionDetection\n\n        | dataExfiltration\n\n        & dataFromCloudStorageObject //(0.11)]\n            user info: \"Adversaries may access data objects from improperly secured cloud storage.\"\n            ->  router.computer.os.service.sensitiveDataCollected\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //}"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "**Asset Description:**\n\nDuring a recent security assessment, we encountered a critical firewall component that serves as a crucial barrier to protect the internal network from potential threats. The firewall, upon closer inspection, appears to have two primary functions: bypassing and filtering network traffic.\n\nThe 'bypassFirewall' function, marked as hidden, seems to allow data exfiltration and C2 connections, which could potentially bypass the firewall rules and expose our internal network to unauthorized access and data theft.\n\nOn the other hand, the 'filterNetworkTraffic' function appears to be designed to modify firewall rules and network controls, allowing only legitimate traffic for services such as Cloud Instance Metadata API, BITS jobs, and port knocking. It also seems to enforce network segmentation by limiting outgoing traffic to necessary ports for specific network segments, restricting non-standard ports, external remote services, Remote Desktop Protocol, Distributed Component Object Model, and Windows Remote Management.\n\nThis firewall component plays a vital role in maintaining the security posture of our network infrastructure and requires close monitoring to ensure it is functioning as intended.", "output": "asset Firewall {\n        & bypassFirewall @hidden\n            ->  router.internalNetwork.dataExfiltration,\n                router.internalNetwork.c2Connexion\n\n        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.\n            ->  router.computer.os.service.cloudInstanceMetadataAPI,\n                router.computer.os.bITSJobs,\n                router.computer.os.portKnocking\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            ->  router.computer.os.nonStandardPort,\n                router.computer.os.service.externalRemoteServices,\n                router.computer.os.remoteDesktopProtocol,\n                router.computer.os.distributedComponentObjectModel,\n                router.computer.os.windowsRemoteManagement\n    }"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "In the course of a security assessment, we encountered multiple instances of compromised computers, each with unique characteristics and potential attack vectors. For instance, the infectedComputer asset is found to have direct connections to the internal and external network's application layer, suggesting potential data transmission or encryption attempts.\n\nAdditionally, we noticed non-standard ports being used, file deletions, and attempts to execute PowerShell scripts, manipulate accounts, capture screens, and access valid accounts. Removable media devices connected to the compromised computers may also be infected, potentially leading to data exfiltration.\n\nFurthermore, we observed multiple types of computers, including Windows, Linux, and MacOS systems, each with their specific vulnerabilities. Some systems were unresponsive, while others had hardware additions installed.\n\nIn some cases, adversaries may attempt to exfiltrate data over a USB connected physical device, bypassing traditional network security measures. This exfiltration method requires specific attention due to its stealthy nature.\n\nPeripheral device discovery was also detected, indicating adversaries gathering information about attached devices and components connected to the computer system. This information could be used to enhance their awareness of the system and network environment or for further actions.\n\nLastly, we found evidence of attempts to collect audio data, which could potentially be used for various malicious purposes. It's essential to secure audio data and monitor for unauthorized collection.\n\nIn conclusion, the compromised computers present a significant risk due to their various attack vectors and potential data exfiltration methods. It's crucial to address these vulnerabilities promptly to mitigate the threat and protect sensitive information.", "output": "asset Computer {\n        | infectedComputer\n            ->  router.internalNetwork.applicationLayerConnexion,\n                router.internalNetwork.attemptDataEncryptedForImpact, // \n                router.externalNetwork.attemptDataEncryptedForImpact, // \n                os.nonStandardPort,\n                os.fileDeletion,\n                os.attemptPowerShell,\n                os.accountManipulation,\n                os.screenCapture,\n                os.validAccounts,\n                peripheralDevice.infectedMedia,\n                peripheralDevice.dataFromRemovableMedia\n\n        | infectedWindowsComputer\n                \n        | infectedLinuxComputer\n\n        | infectedMacOSComputer \n\n        | unresponsive\n\n        & hardwareAdditions \n\n        | attemptExfiltrationOverPhysicalMedium @hidden\n            ->  exfiltrationOverPhysicalMedium\n\n        & exfiltrationOverPhysicalMedium //(0.79224)*Exponential(7.69)]\n            ->  exfiltrationOverUSB,\n                peripheralDevice.dataExfiltration\n\n        | exfiltrationOverUSB\n            user info: \"Adversaries may attempt to exfiltrate data over a USB connected physical device.\"\n            ->  peripheralDevice.dataExfiltration\n\n        & collectAudio //(0.74)*Exponential(0.1)]\n            ->  os.dataCollected\n        \n        | peripheralDeviceDiscovery\n            developer info: \"Binary distribution result (endpoint)\"\n            user info: \"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\"\n\n        | collectVideo\n            ->  os.dataCollected\n\n        # disableOrRemoveFeatureOrProgram\n            ->  exfiltrationOverPhysicalMedium\n    }"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "In the course of our ongoing system review, we've identified a potential vulnerability related to hardware additions within our computer infrastructure. These hardware additions can range from peripherals, computers, to networking equipment, and they serve as potential entry points for adversaries.\n\nThe risk associated with these hardware additions lies in their ability to provide physical access, with a probability of approximately 11%. Once gained, adversaries could attempt to leverage this access to execute unauthorized code on the operating system or bypass security gatekeepers.\n\nMoreover, it's worth noting that the hardware additions themselves can be susceptible to attempts to exploit accessibility features of the operating system. This underscores the importance of maintaining strict control over any hardware additions to the system or network.\n\nAs part of our ongoing security measures, we recommend strengthening access controls for hardware additions, regularly auditing these components for potential threats, and enforcing strict policies for the introduction of new hardware to the system or network. Additionally, keeping the operating system updated and secure can help minimize the risk of adversaries exploiting accessibility features or bypassing security measures.", "output": "asset HardwareAddition extends Computer {\n        | physicalAccess //(0.11)*Exponential(8)]\n            ->  hardwareAdditions,\n                os.attemptAccessibilityFeatures\n            \n        & hardwareAdditions \n            user info: \"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access.\" \n            +>  os.executeCode,\n                os.attemptGatekeeperBypass\n    }"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "In the course of our system assessment, we've identified a crucial component, the PeripheralDevice. This device is equipped with multiple functionalities, including video and audio collection capabilities. The video collection feature is a prominent aspect, while the audio collection is somewhat intermittent, exhibiting an exponential pattern with a rate of 0.1.\n\nIn addition to data collection, this device is also susceptible to data exfiltration, and it can become infected with malicious media. Interestingly, it appears that this device is also designed to accept and process data from removable media, with a frequency that follows an exponential distribution, albeit with a higher rate (6.47) compared to the audio collection.\n\nFor further insights, please refer to the relevant documentation: dataFromRemovableMedia.md and automatedCollection.md. These documents provide a more detailed account of the distribution results for each of these features. Keep in mind that the presence of these functionalities could potentially introduce security risks, especially when it comes to data privacy and security.", "output": "asset PeripheralDevice {\n        | collectVideo\n\n        | collectAudio //(0.74)*Exponential(0.1)]\n\n        | dataExfiltration\n\n        | infectedMedia\n\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n    }"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "In our system, we have a webcam entity, which falls under the broader category of peripheral devices. This webcam is primarily responsible for collecting video footage, a function it delegates to the connected computer. The webcam's video collection process is a critical point in our data flow, as it serves as a visual input source for various applications running on the computer.\n\nThe webcam, identified by its unique hardware ID, is physically connected to the computer via a USB port. This connection establishes a data flow path from the webcam to the computer, allowing the video data captured by the webcam to be processed and utilized by the computer's software.\n\nThe webcam's video collection functionality is essential, as it enables a variety of applications, such as video conferencing, surveillance, and remote desktop software, to function properly. However, it also presents a potential security risk, as malicious actors might exploit vulnerabilities in the webcam's software to gain unauthorized access to the system or the network.\n\nIt's crucial for our security team to monitor the webcams for any unusual activity, such as unexpected video collection patterns, unauthorized access attempts, or unexpected data transfers. Additionally, ensuring that the webcams are up-to-date with the latest security patches and configurations is crucial for maintaining their security posture.", "output": "asset Webcam extends PeripheralDevice {\n        | collectVideo\n            +>  computer.collectVideo\n    }"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "In the course of our system evaluation, we've identified a category of assets that encompasses removable media devices, which inherit properties from the peripheral device class. These devices, such as USB drives, SD cards, or similar storage devices, are often used to transfer data between systems but can also pose security risks if not properly managed.\n\nThe asset in question, labeled RemovableMedia, has two distinct attributes:\n\n1. dataFromRemovableMedia: This attribute represents data obtained from the removable media. It's important to note that the probability of this data being sensitive is relatively high, with a risk factor estimated around 53.52%. For more details on the data sources and collection methods, refer to the dataFromRemovableMedia.md file and automatedCollection.md documentation.\n\n2. infectedMedia: This attribute signifies the presence of potentially malicious content on the removable media device. This could be a result of intentional tampering or unintentional exposure to malicious software.\n\n3. dataExfiltration: This attribute represents the potential for data to be exfiltrated from the system through the removable media device, should it be compromised or misused. This is a common security concern with such devices, as they can bypass many traditional security measures.\n\nIt's worth noting that the RemovableMedia asset is closely associated with the computer's operating system, as it can potentially collect sensitive data from the system (computer.os.sensitiveDataCollected). This underscores the importance of implementing robust security measures when dealing with removable media devices.", "output": "asset RemovableMedia extends PeripheralDevice {\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n            +>  computer.os.sensitiveDataCollected\n\n        | infectedMedia\n\n        | dataExfiltration\n    }"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "In our system's architecture, we have a peripheral device categorized as a microphone. This microphone, much like any other audio capturing device, is equipped to collect audio data. The microphone's collection process is modeled as an exponential behavior with a rate of 0.1, with a probability of approximately 74%.\n\nInterestingly, the microphone's collected audio data is also being transmitted to the connected computer, where its collectAudio function is being utilized. This association between the microphone and the computer highlights a critical data flow path that should be considered during threat modeling exercises.", "output": "asset Microphone extends PeripheralDevice {\n        | collectAudio //(0.74)*Exponential(0.1)]\n            +>  computer.collectAudio\n    }"}
{"instruction": "Write a Meta Attack Language snippet representing this association between entities.", "input": "In the course of a recent security assessment, we've identified several key components and relationships within our system architecture. Here's a rundown of the main entities and their connections:\n\n1. **Users** (user) are the individuals interacting with our systems. Each user typically connects to one or more **Computers** (computer), using them as a means to access various services.\n\n2. Each user has a unique **User Account** (userAccount) associated with their activities on the computer. The user logs into their account, and an admin account can manage these user accounts as needed.\n\n3. **Admin Accounts** (adminAccount) have elevated privileges, allowing them to manage user accounts, as well as access and manipulate the underlying **Operating Systems** (os) that the computers run.\n\n4. Each operating system on a computer manages one or more **Services** (service) that provide specific functionality.\n\n5. **Computers** (computer) operate on a specific operating system and communicate with other computers and devices, such as **Routers** (router), via their network interfaces.\n\n6. **Routers** act as intermediaries, connecting multiple networks – both internal (internalNetwork) and external (externalNetwork). To enhance network security, firewalls (firewall) are often installed on routers to protect them from potential threats.\n\n7. When users access the internet through their computers, they typically interact with various services using a **Browser** (browser).\n\n8. Computers may also serve as hosts for various **Peripheral Devices** (peripheralDevice), such as printers or scanners, which can be connected via USB, wireless, or other interfaces.", "output": "associations {\n    User [user] * <--Uses--> * [computer] Computer\n    User [user] 1 <--Logsin--> * [userAccount] UserAccount\n    AdminAccount [adminAccount] * <--Manages--> * [userAccount] UserAccount\n    UserAccount [userAccount] * <--Accesses--> 1 [os] OS\n    AdminAccount [adminAccount] * <--Accesses--> 1 [os] OS\n    OS [os] 1 <--Runs--> * [service] Service\n    Computer [computer] * <--Operates--> * [os] OS\n    Router [router] * <--Communicates--> * [computer] Computer\n    Firewall [firewall] 1 <--Protects--> 1 [router] Router\n    InternalNetwork [internalNetwork] * <--Connects--> * [router] Router\n    ExternalNetwork [externalNetwork] * <--Connects--> * [router] Router\n    Browser [browser] * <--Accesses--> * [service] Service\n    Computer [computer] * <--Serves--> * [peripheralDevice] PeripheralDevice\n}"}
