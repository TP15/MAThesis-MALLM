{"Output": "#id: \"org.mal_lang.VehiclelangEncrying\"\n#version: \"1.0.0\"\ncategory Communication {\n\n\tasset CoreEncryptedData extends Data\n \t\tuser info: \"Data is a concrete, syntactic representation of Information at rest.\"\n\t\tdeveloper info: \"Extended from coreLang.\"\n   {\n\n\t   & authorizedRead\n\t      user info: \"Access and authentication will allow reading of data.\"\n\t      -> readEncrypted\n\n\t   & authorizedWrite\n\t      user info: \"Access and authentication will allow writing of data.\"\n\t      -> writeEncrypted\n\n\t\t& readEncrypted\n\t\t\t->\tread\n\n\t\t& writeEncrypted\n\t\t\t-> write\n\n        E decryptionKeysExist\n      \t\tuser info: \"If any decryption keys exist, this defense step is compromised, but if not, this will prevent readEncrypted from being reached.\"\n      \t\tdeveloper info: \"Without this step, readEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n         \t<- decryptionKeys\n         \t-> readEncrypted\n\n\t   E encryptionKeysExist\n\t      user info: \"If any encryption keys exist, this defense step is compromised, but if not, this will prevent witeEncrypted from being reached.\"\n\t      developer info: \"Without this step, writeEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n          <- encryptionKeys\n\t\t  -> writeEncrypted\n\t\t}\n}\n\ncategory Security{\n\n\tasset CryptographicKey extends Data \n\t\tdeveloper info: \"Extended from coreLang.\"\n\t{\n\t\t| read\n\t\t -> decryptedData.readEncrypted,\n\t\t\tencryptedData.writeEncrypted\n\n\t}\n\n}\n\nassociations {\n\tCoreEncryptedData\t[decryptedData]\t\t\t\t*\t<-- Decryption\t\t\t\t\t\t-->\t*\t[decryptionKeys]\t\t\t\tCryptographicKey\n   \tCoreEncryptedData\t[encryptedData]\t\t\t\t*\t<-- Encryption\t\t\t\t\t\t-->\t*\t[encryptionKeys]\t\t\t\tCryptographicKey\n}", "Type": "language"}
{"Output": "category Communication {\n\n\tasset CoreEncryptedData extends Data\n \t\tuser info: \"Data is a concrete, syntactic representation of Information at rest.\"\n\t\tdeveloper info: \"Extended from coreLang.\"\n   {\n\n\t   & authorizedRead\n\t      user info: \"Access and authentication will allow reading of data.\"\n\t      -> readEncrypted\n\n\t   & authorizedWrite\n\t      user info: \"Access and authentication will allow writing of data.\"\n\t      -> writeEncrypted\n\n\t\t& readEncrypted\n\t\t\t->\tread\n\n\t\t& writeEncrypted\n\t\t\t-> write\n\n        E decryptionKeysExist\n      \t\tuser info: \"If any decryption keys exist, this defense step is compromised, but if not, this will prevent readEncrypted from being reached.\"\n      \t\tdeveloper info: \"Without this step, readEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n         \t<- decryptionKeys\n         \t-> readEncrypted\n\n\t   E encryptionKeysExist\n\t      user info: \"If any encryption keys exist, this defense step is compromised, but if not, this will prevent witeEncrypted from being reached.\"\n\t      developer info: \"Without this step, writeEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n          <- encryptionKeys\n\t\t  -> writeEncrypted\n\t\t}\n}", "Type": "category"}
{"Output": "category Security{\n\n\tasset CryptographicKey extends Data \n\t\tdeveloper info: \"Extended from coreLang.\"\n\t{\n\t\t| read\n\t\t -> decryptedData.readEncrypted,\n\t\t\tencryptedData.writeEncrypted\n\n\t}\n\n}", "Type": "category"}
{"Output": "asset CoreEncryptedData extends Data\n \t\tuser info: \"Data is a concrete, syntactic representation of Information at rest.\"\n\t\tdeveloper info: \"Extended from coreLang.\"\n   {\n\n\t   & authorizedRead\n\t      user info: \"Access and authentication will allow reading of data.\"\n\t      -> readEncrypted\n\n\t   & authorizedWrite\n\t      user info: \"Access and authentication will allow writing of data.\"\n\t      -> writeEncrypted\n\n\t\t& readEncrypted\n\t\t\t->\tread\n\n\t\t& writeEncrypted\n\t\t\t-> write\n\n        E decryptionKeysExist\n      \t\tuser info: \"If any decryption keys exist, this defense step is compromised, but if not, this will prevent readEncrypted from being reached.\"\n      \t\tdeveloper info: \"Without this step, readEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n         \t<- decryptionKeys\n         \t-> readEncrypted\n\n\t   E encryptionKeysExist\n\t      user info: \"If any encryption keys exist, this defense step is compromised, but if not, this will prevent witeEncrypted from being reached.\"\n\t      developer info: \"Without this step, writeEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n          <- encryptionKeys\n\t\t  -> writeEncrypted\n\t\t}", "Type": "asset"}
{"Output": "asset CryptographicKey extends Data \n\t\tdeveloper info: \"Extended from coreLang.\"\n\t{\n\t\t| read\n\t\t -> decryptedData.readEncrypted,\n\t\t\tencryptedData.writeEncrypted\n\n\t}", "Type": "asset"}
{"Output": "associations {\n\tCoreEncryptedData\t[decryptedData]\t\t\t\t*\t<-- Decryption\t\t\t\t\t\t-->\t*\t[decryptionKeys]\t\t\t\tCryptographicKey\n   \tCoreEncryptedData\t[encryptedData]\t\t\t\t*\t<-- Encryption\t\t\t\t\t\t-->\t*\t[encryptionKeys]\t\t\t\tCryptographicKey\n}", "Type": "association"}
