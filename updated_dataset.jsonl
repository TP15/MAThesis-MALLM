{"instruction": "Convert the following cyber-attack description into Meta Attack Language code.", "input": "", "output": "category IcsInterfaceResources{\n\n    asset DataHistorian extends IcsApplication \n        user info: \"A centralized database located on a computer installed in the control system DMZ supporting external corporate user data access for archival and analysis using statistical process control and other techniques.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Data_Historian\"\n      {\n      // Override control related attack steps (Impact) because they are not relevant to this asset\n      | manipulationOfControl @Override\n\n      | lossOfControl @Override\n      }\n\n}\n"}
{"instruction": "Generate a Meta Attack Language snippet that models the scenario described below.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninclude \"ComputeResources.mal\"\ninclude \"DataResources.mal\"\ninclude \"IAM.mal\"\ninclude \"User.mal\"\ninclude \"Networking.mal\"\ninclude \"Vulnerability.mal\"\n"}
{"instruction": "Given this cyber incident, write its equivalent representation in Meta Attack Language.", "input": "", "output": "// enterpriseLang\n// Authors: Wenjun Xiong (wenjx@kth.se), Emeline Legrand, Oscar Åberg\n// Probability distributions: Quentin Biharé, Love Wessman, Lina Evensjö\n\n#id: \"org.mal_lang.attacklang\"\n#version: \"1.0.0\"\n\ncategory Person {\n    asset User {\n        | attemptMaliciousLink @hidden\n            ->  maliciousLink    \n\n        & maliciousLink //(0.712)*Exponential(1)]\n            developer info: \"Sources for distribution result: https://arxiv.org/pdf/1606.00887; https://dl.acm.org/doi/fullHtml/10.1145/1290958.1290968\"\n            ->  computer.os.service.attemptExploitationForClientExecution,\n                attemptMaliciousFile, // links may lead users to download files that require execution via Malicious File\n                computer.os.executeCode\n\n        | attemptMaliciousFile @hidden\n            ->  maliciousFile\n\n        & maliciousFile //(0.93)*Exponential(1)]\n            developer info: \"Sources for distribution result: Based on attack step spearphishingLinkClicked and https://doi.org/10.1016/j.cose.2006.10.009\"\n            ->  computer.os.attemptDynamicDataExchange,\n                computer.os.executeCode\n\n        | attemptUserExecution @hidden\n            ->  userAccount.userExecution\n\n        | mediaInserted //(0.3)*Exponential(48)]\n            user info: \"People work in the targeted entreprise have physical access to the network and can thus easily use an infected USB device for the adversary to get initial compromise.\"\n            developer info: \"Sources for distribution result: https://www.supplychaindive.com/news/internal-actors-cyberattacks-manufacturing/572832/#:~:text=External%20actors%20account%20for%20the,2019%20Data%20Breach%20Investigations%20Report\"\n            ->  computer.os.replicationThroughRemovableMedia,\n                computer.peripheralDevice.dataExfiltration\n\n        # userTraining //(0.22)]\n            user info: \"https://attack.mitre.org/mitigations/M1017/\"\n            developer info: \"Sources for distribution result: https://www.tandfonline.com/doi/abs/10.1080/10919392.2019.1552745; https://doi.org/10.1145/1572532.1572536; https://ieeexplore.ieee.org/abstract/document/6585241\" \n            ->  maliciousFile,\n                maliciousLink,\n                userAccount.userExecution\n    }\n}\n\ncategory Software {\n    asset UserAccount {\n        | userRights\n            ->  os.abuseElevationControlMechanism,\n                os.accountAccessRemoval,\n                os.accountDiscovery,\n                os.applicationWindowDiscovery,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptLaunchAgent,\n                os.attemptLogonScripts,\n                os.attemptPlistModification,\n                os.attemptSetuidAndSetgid,\n                os.attemptShortcutModification,\n                os.attemptSSHAuthorizedKeys,\n                os.attemptTaintSharedContent,\n                os.bash_profileAndBashrc,\n                os.bashHistory,\n                os.bruteForce,\n                os.bypassUserAccessControl,\n                os.changeDefaultFileAssociation,\n                os.clearCommandHistory,\n                os.cmstp,\n                os.commandAndScriptingInterpreter,\n                os.compileAfterDelivery,\n                os.compiledHTMLFile,\n                os.componentObjectModelHijacking,\n                os.controlPanel,\n                os.cOR_PROFILER,\n                os.credentialsInFiles,\n                os.credentialsInRegistry,\n                os.credentialStuffing,\n                os.cron,\n                os.dataDestruction,\n                os.dataEncoding,\n                os.dataFromInformationRepositories,\n                os.dataManipulation,\n                os.defaultAccounts,\n                os.deobfuscateOrDecodeFilesOrInformation,\n                os.disableOrModifyTools,\n                os.diskWipe,\n                os.dLLSearchOrderHijacking,\n                os.domainAccounts,\n                os.domainDiscovery,\n                os.domainGroups,\n                os.domainTrustDiscovery,\n                os.dynamicDataExchange,\n                os.dynamicResolution,\n                os.elevatedExecutionWithPrompt,\n                os.emailCollection,\n                os.executableInstallerFilePermissionsWeakness,\n                os.executionGuardrails,\n                os.executionThroughModuleLoad,\n                os.fileAndDirectoryDiscovery,\n                os.fileAndDirectoryPermissionsModification,\n                os.fileDeletion,\n                os.forcedAuthentication,\n                os.gatekeeperBypass,\n                os.groupPolicyModification,\n                os.groupPolicyPreferences,\n                os.gUIInputCapture,\n                os.hiddenFilesAndDirectories,\n                os.hiddenFileSystem,\n                os.hiddenWindow,\n                os.hISTCONTROL,\n                os.indicatorRemovalOnHost,\n                os.indirectCommandExecution,\n                os.inhibitSystemRecovery,\n                os.installRootCertificate,\n                os.installUtil,\n                os.internalSpearphishing,\n                os.lateralToolTransfer,\n                os.launchctl,\n                os.lC_LOAD_DYLIB_Addition,\n                os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                os.localAccounts,\n                os.localGroups,\n                os.manInTheMiddle,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.mshta,\n                os.msiexec,\n                os.networkShareConnectionRemoval,\n                os.networkShareDiscovery,\n                os.odbcconf,\n                os.goldenTicket,\n                os.parentPIDSpoofing,\n                os.passwordCracking,\n                os.passwordGuessing,\n                os.passwordPolicyDiscovery,\n                os.passwordSpraying,\n                os.pathInterceptionBySearchOrderHijacking,\n                os.peripheralDeviceDiscovery,\n                os.portableExecutableInjection,\n                os.portKnocking,\n                os.powerShellUserProfile,\n                os.privateKeys,\n                os.processDiscovery,\n                os.processDoppelganging,\n                os.processHollowing,\n                os.pubPrn,\n                os.registryRunKeysOrStartupFolder,\n                os.regsvcsOrRegasm,\n                os.regsvr32,\n                os.remoteDesktopProtocol,\n                os.remoteFileCopy, \n                os.remoteSystemDiscovery,\n                os.reopenedApplications,\n                os.resourceHijacking,\n                os.rootkit,\n                os.rundll32,\n                os.runVirtualInstance,\n                os.screensaver,\n                os.securitySoftwareDiscovery,\n                os.servicesFilePermissionsWeakness,\n                os.servicesRegistryPermissionsWeakness,\n                os.serviceStop,\n                os.signedScriptProxyExecution,\n                os.silverTicket,\n                os.sIPAndTrustProviderHijacking,\n                os.softwareDiscovery,\n                os.source,\n                os.spaceAfterFileName,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemInformationDiscovery,\n                os.systemNetworkConfigurationDiscovery,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.templateInjection,\n                os.threadExecutionHijacking,\n                os.timestomp,\n                os.trap,\n                os.trustedDeveloperUtilities,\n                os.videoCapture,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.xslScriptProcessing,\n                os.service.attemptExploitationForCredentialAccess,\n                os.service.attemptExploitationForDefenseEvasion,\n                os.service.attemptExploitationForPrivilegeEscalation,\n                os.service.attemptExploitationOfRemoteServices,\n                os.service.attemptExternalRemoteServices,\n                os.service.implantContainerImage,\n                os.service.remoteAccessSoftware,\n                os.service.cloudAccounts,\n                os.service.cloudGroups,\n                os.service.cloudServiceDiscovery,\n                os.service.cloudServiceDashboard,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.modifyCloudComputeInfrastructure,\n                os.service.officeTemplateMacros,\n                os.service.officeTest,\n                os.service.outlookForms,\n                os.service.outlookHomePage,\n                os.service.outlookRules,\n                os.service.addIns,\n                os.service.stealApplicationAccessToken,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.browser.browserBookmarkDiscovery,\n                os.service.browser.driveByCompromise,\n                os.service.browser.installExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.computer.router.internalNetwork.transmittedDataManipulation,\n                os.computer.router.externalNetwork.bidirectionaCommunication,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.computer.router.externalNetwork.deadDropResolver,\n                os.computer.router.externalNetwork.oneWayCommunication,\n                os.computer.router.externalNetwork.transmittedDataManipulation\n\n        | userCredentials\n            ->  userRights,\n                os.validAccounts,\n                os.computer.router.internalNetwork.exchangeServerCollection,\n                os.service.remoteServices\n\n        & userExecution\n            developer info: \"Binary probability relation.\"\n            ->  user.maliciousFile,\n                user.maliciousLink\n\n        | userInformation\n\n        # userTraining //(0.22)]\n            user info: \"https://attack.mitre.org/mitigations/M1017/\"\n            developer info: \"Sources for distribution result: https://www.tandfonline.com/doi/abs/10.1080/10919392.2019.1552745; https://doi.org/10.1145/1572532.1572536; https://ieeexplore.ieee.org/abstract/document/6585241\"      \n            ->  os.cachedDomainCredentials,\n                os.confluence,\n                os.credentialsInFiles,\n                os.gUIInputCapture,\n                os.lSASecrets,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.nTDS,\n                os.plistModification,\n                os.reopenedApplications,\n                os.securityAccountManager,\n                os.sharepoint,\n                os.templateInjection,\n                os.twoFactorAuthenticationInterception, // remove smart cards when not in use\n                os.service.browser.browserExtensions,\n                os.service.browser.stealWebSessionCookie,\n                os.service.stealApplicationAccessToken,\n                os.service.spearphishingViaService,\n                os.service.useThirdpartySoftware\n\n        # userAccountManagement //(0.30)] \n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1018/\"     \n            ->  os.accessTokenManipulation,\n                os.at,\n                os.attemptStartupItems,\n                os.bITSJobs,\n                os.computer.router.externalNetwork.dataFromCloudStorageObject,\n                os.confluence,\n                os.cOR_PROFILER,\n                os.credentialStuffing,\n                os.cron,\n                os.disableOrModifySystemFirewall,\n                os.disableOrModifyTools,\n                os.disableWindowsEventLogging,\n                os.executableInstallerFilePermissionsWeakness,\n                os.indicatorBlocking,\n                os.launchAgent,\n                os.launchctl,\n                os.launchd,\n                os.launchDaemon,\n                os.manInTheBrowser,\n                os.passTheHash,\n                os.passTheTicket,\n                os.rc_common,\n                os.rDPHijacking,\n                os.remoteDesktopProtocol,\n                os.remoteScheduledTask,\n                os.scheduledTask,\n                os.servicesFilePermissionsWeakness,\n                os.serviceStop,\n                os.sharepoint,\n                os.shortcutModification,\n                os.systemdService,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsService,\n                os.winlogonHelperDLL,\n                os.service.remoteServices,\n                os.service.createSnapshot,\n                os.service.cloudServiceDashboard,\n                os.service.createCloudInstance,\n                os.service.deleteCloudInstance,\n                os.service.disableOrModifyCloudFirewall,\n                os.service.stealApplicationAccessToken,\n                os.service.useThirdpartySoftware\n    } \n\n    asset RemoteDesktopUser extends UserAccount {\n        | userCredentials\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            ->  os.remoteDesktopProtocol\n    }     \n\n    asset AdminAccount {\n        | adminRights\n            user info: \"Administrator is an actual account.\"\n            ->  userAccount.userRights,\n                createAccount, \n                os.abuseElevationControlMechanism,\n                os.accessibilityFeatures,\n                os.accountAccessRemoval,\n                os.appCertDLLs,\n                os.appInitDLLs,\n                os.applicationShimming,\n                os.at,\n                os.attemptAccessTokenManipulation,\n                os.attemptAutomatedCollection,\n                os.attemptBITSJobs,\n                os.attemptCredentialsInFiles,\n                os.attemptDataDestruction,\n                os.attemptDataEncryptedForImpact,\n                os.attemptExecutionThroughAPI,\n                os.attemptServiceRegistryPermissionsWeakness,\n                os.attemptServicesFilePermissionsWeakness,\n                os.attemptServiceStop,\n                os.attemptShortcutModification,\n                os.attemptSIDHistoryInjection,\n                os.attemptTimeProviders,\n                os.attemptWindowsAdminShares,\n                os.attemptWindowsManagementInstrumentationEventSubscription,\n                os.attemptWinlogonHelperDLL,             \n                os.authenticationPackage,\n                os.bootkit,   \n                os.clearWindowsEventLogs,\n                os.credentialAPIHooking,\n                os.credentialsFromPasswordStores,\n                os.dCShadow,\n                os.dCSync,\n                os.detailedRemoteSystemDiscovery,\n                os.disableWindowsEventLogging,\n                os.distributedComponentObjectModel,\n                os.domainControllerAuthentication,\n                os.exchangeEmailDelegatePermissions,\n                os.fileAndDirectoryDiscovery,\n                os.fileSystemLogicalOffsets,\n                os.firmwareCorruption, \n                os.groupPolicyModification,\n                os.imageFileExecutionOptionsInjection,\n                os.inhibitSystemRecovery,\n                os.lSASSDriver,\n                os.lSASSMemory,\n                os.manInTheBrowser,\n                os.masqueradeTaskOrService,\n                os.modifyRegistry,\n                os.netshHelperDLL,\n                os.networkServiceScan,\n                os.networkShareConnectionRemoval,\n                os.networkSniffing,\n                os.oSCredentialDumping,\n                os.parentPIDSpoofing,\n                os.passwordFilterDLL,\n                os.portMonitors,\n                os.powerShell,\n                os.powerShellAdminProfile,\n                os.processDiscovery,\n                os.queryRegistry,\n                os.registryRunKeysOrStartupFolder,\n                os.remoteScheduledTask,\n                os.resourceHijacking,\n                os.scheduledTask,\n                os.securitySupportProvider,\n                os.serviceExecution,\n                os.sQLStoredProcedures,\n                os.systemFirmware,\n                os.systemNetworkConnectionsDiscovery,\n                os.systemOwnerOrUserDiscovery,\n                os.systemServiceDiscovery,\n                os.systemShutdownOrReboot,\n                os.transportAgent,\n                os.twoFactorAuthenticationInterception,\n                os.windowsManagementInstrumentation,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.attemptUseThirdpartySoftware,\n                os.service.additionalAzureServicePrincipalCredentials,\n                os.service.exchangeEmailDelegatePermissions,\n                os.service.addOffice365GlobalAdministratorRole\n             \n        | adminCredentials\n            ->  adminRights,\n                os.validAccounts,\n                os.service.remoteServices\n\n        | attemptCreateAccount @hidden\n            ->  createAccount\n\n        & createAccount //(0.05665)*Exponential(1440)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://support.microsoft.com/en-us/help/4026923/windows-10-create-a-local-user-or-administrator-account, https://www.youtube.com/watch?v=Ym0JJ5NGdrA, https://www.youtube.com/watch?v=SRqxIb_ETEQ\"\n            ->  os.service.cloudAccount,\n                os.domainAccount,\n                os.localAccount\n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            ->  os.accessTokenManipulation,\n                os.domainAccount,\n                os.firmwareCorruption,\n                os.kernelModulesAndExtensions,\n                os.localAccount,\n                os.modifyRegistry,\n                os.passTheTicket,\n                os.powerShell,\n                os.remoteDesktopProtocol,\n                os.serviceExecution,\n                os.sudoAndSudoCaching,\n                os.systemdService,\n                os.systemFirmware,\n                os.windowsAdminShares,\n                os.windowsManagementInstrumentation,\n                os.windowsManagementInstrumentationEventSubscription,\n                os.windowsRemoteManagement,\n                os.service.applicationDeploymentSoftware,\n                os.service.exploitationOfRemoteServices,\n                os.service.cloudAccount,\n                os.service.useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators\n                os.service.exploitHighVulnerabilityPublicFacingApplication,\n                os.service.exploitMediumVulnerabilityPublicFacingApplication,\n                os.service.exploitLowVulnerabilityPublicFacingApplication\n    }\n\n    asset Service {\n        | attemptTrustedRelationship @hidden\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n            developer info: \"Sources for distribution result: accenture.com/_acnmedia/PDF-116/Accenture-Cybersecurity-Report-2020.pdf, https://enterprise.verizon.com/resources/reports/DBIR_2018_Report_execsummary.pdf\" \n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            developer info: \"Sources for distribution result: https://www.infoworld.com/article/2626167/third-party-code-putting-companies-at-risk.html, https://threatpost.com/third-party-applications-blame-87-percent-vulnerabilities-last-year-031513/77633/, https://www.helpnetsecurity.com/2018/11/20/third-party-risks/\"\n\n        & useThirdpartySoftware\n\n        | collectVideo @hidden\n\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n\n        | accessCloudBasedServiceResources\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n \n        | cloudServiceDiscovery\n            developer info: \"Binary probability distribution, TTC assumed instant (few seconds) : https://www.etasr.com/index.php/ETASR/article/view/1577\"\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n\n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            developer info: \"Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md\"\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n\n        & emailForwardingRule //(0.00061)]\n            developer info: \"Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md\"\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n \n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        & officeTemplateMacros\n            user info: \"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system.\"\n\n        & officeTest\n            user info: \"Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.\"\n\n        & outlookForms\n            user info: \"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system.\"\n\n        & outlookHomePage\n            user info: \"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.\"\n\n        & outlookRules\n            user info: \"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system.\"\n\n        | addIns\n            user info: \"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.\"\n\n        & stealApplicationAccessToken\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n\n        & applicationDeploymentSoftware\n            user info: \"Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators.\"\n            ->  os.executeCode\n\n        | applicationHighVulnerability //(24)]\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  exploitHighVulnerabilityPublicFacingApplication\n\n        | applicationMediumVulnerability //(2)]\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  exploitMediumVulnerabilityPublicFacingApplication\n\n        | applicationLowVulnerability //(1)]\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  exploitLowVulnerabilityPublicFacingApplication\n\n        & exploitHighVulnerabilityPublicFacingApplication //(0.5)*Exponential(2)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        & exploitMediumVulnerabilityPublicFacingApplication //(0.87)*Exponential(0.5)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        & exploitLowVulnerabilityPublicFacingApplication //(0.89)*Exponential(0.143)]\n            user info: \"The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior.\"\n            developer info: \"Sources for distribution results : https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf; https://www.ptsecurity.com/ww-en/analytics/web-vulnerabilities-2020/#:~:text=The%20average%20number%20of%20vulnerabilities,five%20vulnerabilities%20has%20high%20severity\"              \n            ->  attemptExploitationForDefenseEvasion, // leads to exploitation for defense evasion attack\n                os.systemAccess\n                \n        | blockUserAccess  \n\n        & implantContainerImage //(0.60)*Exponential(180)]\n            user info: \"Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored to include malicious code.\"\n            developer info: \"Sources for distribution result: https://www.eweek.com/security/five-security-defenses-every-containerized-application-needs, https://github.com/RhinoSecurityLabs/ccat, https://www.youtube.com/watch?v=12zEXfCxIrk&feature=youtu.be\"\n            ->  os.persistence\n\n        | serviceInformation \n\n        | remoteServices //(0.04346)]\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/\"\n            user info: \"An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections.\"\n            ->  os.vNC,\n                os.attemptRemoteDesktopProtocol,\n                os.attemptWindowsAdminShares,\n                os.attemptDistributedComponentObjectModel,\n                os.attemptWindowsRemoteManagement,\n                os.sSH\n\n        | remoteServiceSessionHijacking\n            user info: \"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment.\"\n            ->  os.sSHHijacking,\n                os.rDPHijacking\n\n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n\n        | informationRepositories\n            ->  os.dataCollected,\n                os.sensitiveDataCollected\n\n        | remoteAccessSoftware //(0.0789)*Exponential(106.67)]\n            developer info: \"https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.proofpoint.com/us/threat-insight/post/proofpoint-q3-2019-threat-report-emotets-return-rats-reign-supreme-and-more, https://www.youtube.com/watch?v=RzVtc9i3mzs, https://www.youtube.com/watch?v=om3OJWpZDGU\"\n            ->  os.computer.router.internalNetwork.c2Connexion\n\n        | attemptSpearphishingViaService @hidden\n            ->  spearphishingViaService\n\n        & spearphishingViaService\n            user info: \"Adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.\"\n            ->  spearphishingViaPersonalEmail,\n                spearphishingViaSocialMedia\n        \n        | spearphishingViaPersonalEmail //(0.712)*Exponential(1)]\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average; https://academic.oup.com/jcmc/article/20/1/83/4067561; https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-wp.pdf\"\n            ->  browser.attemptSpearphishingAttachment,\n                browser.attemptSpearphishingLink\n        \n        | spearphishingViaSocialMedia //(0.4475)*Exponential(0.286)]\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average; https://academic.oup.com/jcmc/article/20/1/83/4067561; https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-wp.pdf\"\n            ->  browser.attemptSpearphishingAttachment,\n                browser.attemptSpearphishingLink,\n                os.bruteForce // https://www.us-cert.gov/ncas/alerts/TA18-086A\n\n        | supplyChainCompromise //(0.70)*(Uniform(8,30)+TruncatedNormal(0.042,0.021))]\n            developer info: \"Sources for distribution result: https://savvyapps.com/blog/how-often-should-you-update-your-app#:~:text=Most%20successful%20apps%20release%201,updates%20with%20longer%20feature%20releases\"\n            user info: \"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                compromiseHardwareSupplyChain\n\n        & compromiseSoftwareDependenciesAndDevelopmentTools\n            user info: \"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        & compromiseSoftwareSupplyChain\n            user info: \"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        & compromiseHardwareSupplyChain\n            user info: \"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise.\"\n            ->  os.compromisedDataOrSystem\n\n        | attemptExploitationForClientExecution @hidden\n            ->  exploitationForClientExecution\n\n        & exploitationForClientExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution.\"\n            ->  os.computer.user.attemptUserExecution\n\n        | attemptExploitationForCredentialAccess @hidden\n            ->  exploitationForCredentialAccess\n\n        & exploitationForCredentialAccess\n            user info: \"Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.\"\n            ->  exploitationOfSQLInjection,\n                exploitationOfNTLMAuthentication         \n\n        | exploitationOfSQLInjection //(0.14)*Exponential(0.746)]   \n            developer info: \"Sources used for distribution result: https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf, https://www.akamai.com/us/en/multimedia/documents/state-of-the-internet/soti-security-web-attacks-and-gaming-abuse-report-2019.pdf, https://trends.builtwith.com/websitelist/Akamai/Historical, https://www.imperva.com/docs/HII_Web_Application_Attack_Report_Ed6.pdf, https://www.cc.gatech.edu/fac/Alex.Orso/papers/halfond.viegas.orso.ISSSE06.pdf\"\n            ->  os.executeCode,\n                attemptExploitationForPrivilegeEscalation\n                \n        | exploitationOfNTLMAuthentication //(0.23346)*TruncatedNormal(0.011,0.00214)]\n            developer info: \"Sources used for distribution result: https://www.csoonline.com/article/3333916/i-can-get-and-crack-your-password-hashes-from-email.html, https://netmarketshare.com/operating-system-market-share.aspx?, https://resources.infosecinstitute.com/beyond-password-length-complexity/, https://spycloud.com/how-long-would-it-take-to-crack-your-password/, https://spycloud.com/2020-annual-credential-exposure-report/\"\n            ->  os.executeCode,\n                attemptExploitationForPrivilegeEscalation\n\n        | attemptExploitationForDefenseEvasion @hidden\n            ->  exploitationForDefenseEvasion\n\n        & exploitationForDefenseEvasion\n            user info: \"Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery.\"\n            ->  os.bypassAntivirus,\n                os.bypassSystemAccessControls\n\n        | attemptExploitationForPrivilegeEscalation @hidden\n            ->  exploitationForPrivilegeEscalation\n\n        & exploitationForPrivilegeEscalation\n            developer info: \"Binary probability distribution.\"\n            user info: \"This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable.\"\n            ->  os.adminAccount.adminRights,\n                attemptUseThirdpartySoftware\n\n        | attemptExploitationOfRemoteServices @hidden\n            user info: \"An adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods.\"\n            ->  exploitationOfRemoteServices\n\n        & exploitationOfRemoteServices\n            ->  attemptExploitationForPrivilegeEscalation,\n                os.computer.infectedComputer\n                \n        | attemptExternalRemoteServices @hidden \n            ->  externalRemoteServices\n\n        & externalRemoteServices //(0.19)*Exponential(3)]\n            user info: \"Adversaries may use remote services to initially access and/or persist within a network.\"\n            developer info: \"Sources for distribution result: https://www.securitymetrics.com/blog/remote-access-attacks-how-protect-against-malware, https://cdn2.hubspot.net/hubfs/4595665/Acunetix_web_application_vulnerability_report_2019.pdf, https://securitybrief.com.au/story/15-000-companies-still-critically-vulnerable-from-citrix-security-flaws-report\"\n            ->  os.computer.router.internalNetwork.persistence,\n                os.computer.router.internalNetwork.remoteAccess,\n                os.attemptSystemFirmware,\n                remoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                attemptExploitationOfRemoteServices\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            ->  implantContainerImage\n\n        # applicationIsolationAndSandboxing\n            user info: \"https://attack.mitre.org/mitigations/M1048/\"\n            ->  exploitationForClientExecution,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication\n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            ->  implantContainerImage\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/techniques/T1064/\"\n            ->  exploitationOfRemoteServices,\n                externalRemoteServices\n\n        # encryptSensitiveInformation\n            user info: \"https://attack.mitre.org/mitigations/M1041/\"\n            ->  transmittedDataManipulation\n\n        # executionPrevention\n            user info: \"https://attack.mitre.org/mitigations/M1038/\"\n            ->  remoteAccessSoftware\n\n        # exploitProtection\n            user info: \"https://attack.mitre.org/mitigations/M1050/\"\n            ->  exploitationForClientExecution,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            ->  exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                externalRemoteServices\n\n        # threatIntelligenceProgram\n            user info: \"https://attack.mitre.org/mitigations/M1019/\"\n            ->  exploitationForCredentialAccess,\n                exploitationForPrivilegeEscalation,\n                exploitationForDefenseEvasion,\n                exploitationOfRemoteServices  \n\n        # passwordPolicies \n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n\n        # updateSoftware //(0.567125)]\n            developer info: \"Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html\"\n            user info: \"https://attack.mitre.org/mitigations/M1051/\"\n            ->  applicationDeploymentSoftware,\n                compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                exploitationForCredentialAccess,\n                exploitationForDefenseEvasion,\n                exploitationForPrivilegeEscalation,\n                exploitationOfRemoteServices,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                os.computer.router.internalNetwork.remoteAccess\n\n        # softwareConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1054/\"\n\n        # activeDirectoryConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1015/\"\n\n        # vulnerabilityScanning //(0.653)]\n            user info: \"https://attack.mitre.org/mitigations/M1016/\"\n            developer info: \"Sources for distribution result : https://static.tenable.com/marketing/research-reports/Research-Report-Ponemon-Institute-Measuring_and_Managing_the_Cyber_Risks_to_Business_Operations.pdf, https://www.scmagazineuk.com/one-fourth-global-organisations-faced-breaches-unpatched-vulnerabilities/article/1586349#:~:text=Vulnerability%20management%20starts%20with%20visibility,networks%20within%20minutes%20or%20hours., https://www.zdnet.com/article/zero-days-fileless-attacks-are-now-the-most-dangerous-threats-to-the-enterprise/, https://liu.diva-portal.org/smash/get/diva2:1348588/FULLTEXT01.pdf, https://pdfs.semanticscholar.org/775d/ed35d7940b94b5bc01d568d472e59fd24775.pdf, \"\n            ->  compromiseSoftwareDependenciesAndDevelopmentTools,\n                compromiseSoftwareSupplyChain,\n                exploitHighVulnerabilityPublicFacingApplication,\n                exploitMediumVulnerabilityPublicFacingApplication,\n                exploitLowVulnerabilityPublicFacingApplication,\n                exploitationOfRemoteServices\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            ->  applicationDeploymentSoftware,\n                remoteServices,\n                cloudAccount,\n                additionalAzureServicePrincipalCredentials\n    }\n\n    asset ThirdpartySoftware extends Service {  \n        | attemptTrustedRelationship @hidden\n            +>  trustedRelationship\n\n        & trustedRelationship //(0.40)*TruncatedNormal(0.042,0.021)]\n            user info: \"Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\" \n            developer info: \"Sources for distribution result: accenture.com/_acnmedia/PDF-116/Accenture-Cybersecurity-Report-2020.pdf, https://enterprise.verizon.com/resources/reports/DBIR_2018_Report_execsummary.pdf\" \n            +>  os.validAccounts // Valid Accounts used by the other party for access to internal network systems may be compromised\n\n        | attemptUseThirdpartySoftware @hidden //(0.70)]\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            developer info: \"Sources for distribution result: https://www.infoworld.com/article/2626167/third-party-code-putting-companies-at-risk.html, https://threatpost.com/third-party-applications-blame-87-percent-vulnerabilities-last-year-031513/77633/, https://www.helpnetsecurity.com/2018/11/20/third-party-risks/\"\n            +>  useThirdpartySoftware\n\n        & useThirdpartySoftware\n            +>  os.executeCode \n\n        # updateSoftware //(0.567125)]\n            developer info: \"Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html\"\n            user info: \"https://attack.mitre.org/mitigations/M1051/\"\n            +>  useThirdpartySoftware\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            +>  useThirdpartySoftware\n\n        # passwordPolicies \n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n            +>  useThirdpartySoftware\n\n        # activeDirectoryConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1015/\"\n            +>  useThirdpartySoftware\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            +>  trustedRelationship,\n                useThirdpartySoftware\n    }\n\n    asset VideoCallApplication extends Service { \n        | collectVideo @hidden\n            +>  os.computer.collectVideo\n    }\n\n    asset CloudService extends Service {\n        | applicationAccessToken\n            developer info: \"Binary probability distribution. Once stolen or gathered, token can be used instantly.\"\n            user info: \"Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\"\n            +>  accessCloudBasedServiceResources\n\n        | accessCloudBasedServiceResources\n\n        & stealApplicationAccessToken\n            user info: \"Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network.\" \n            +>  browser.spearphishingLink, //  send a link through Spearphishing Link to the target user to entice them to grant access to the application\n                applicationAccessToken\n\n        | persistence\n\n        | sensitiveDataCollected\n\n        | cloudServiceInformationCollected\n\n        | cloudAccount\n            user info: \"Adversaries may attempt to get a listing of cloud accounts.\"\n            +>  os.persistence\n\n        & cloudAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            +>  attemptTrustedRelationship,\n                remoteServices,\n                attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.firewall.bypassFirewall,\n                os.bypassHostIntrusionPrevention,\n                os.bypassApplicationControl,\n                os.bypassSystemAccessControls,\n                os.bypassAntivirus\n\n        & cloudGroups\n            user info: \"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\"\n\n        & cloudInstanceMetadataAPI\n            user info: \"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\"\n            +>  sensitiveDataCollected\n\n        | cloudServiceDiscovery\n            developer info: \"Binary probability distribution, TTC assumed instant (few seconds) : https://www.etasr.com/index.php/ETASR/article/view/1577\"\n            user info: \"An adversary may attempt to enumerate the cloud services running on a system after gaining access.\" \n            +>  cloudServiceInformationCollected\n\n        & cloudServiceDashboard //(1)]\n            developer info: \"Binary probability distribution (stolen credentials). TTC assumed arbitrarily based on findings from dataFromCloudStorageObject : Exploring a cloud service manually to find sensitive data would take some time\"\n            user info: \"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features.\"\n            +>  cloudServiceInformationCollected\n   \n        & disableOrModifyCloudFirewall\n            user info: \"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources.\"\n            +>  os.computer.router.internalNetwork.c2Connected // modifying or disabling a cloud firewall may enable adversary C2 communications\n\n        | emailAccount\n            user info: \"Adversaries may attempt to get a listing of email addresses and accounts.\"\n            +>  emailAddressCollected\n\n        | emailAddressCollected\n\n        & additionalAzureServicePrincipalCredentials\n            user info: \"Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts.\"         \n            +>  persistence\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  os.internalSpearphishing\n\n        & addOffice365GlobalAdministratorRole\n            user info: \"An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant.\"\n            +>  os.adminAccount.attemptCreateAccount\n\n        | modifyCloudComputeInfrastructure\n            user info: \"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses.\"\n            +>  createSnapshot,\n                createCloudInstance,\n                deleteCloudInstance,\n                revertCloudInstance\n\n        & createSnapshot\n            user info: \"An adversary may create a snapshot or data backup within a cloud account to evade defenses.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & createCloudInstance\n            user info: \"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses.\"\n            +>  os.dataFromLocalSystem,\n                os.remoteDataStaging,\n                deleteCloudInstance,\n                os.computer.router.firewall.bypassFirewall\n\n        & deleteCloudInstance\n            user info: \"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. An adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        | revertCloudInstance\n            user info: \"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence.\"\n            +>  os.computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                os.computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            developer info: \"Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md\"\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n            +>  os.attemptRemoteDesktopProtocol, // https://www.us-cert.gov/ncas/alerts/TA18-086A\n                sensitiveDataCollected\n\n        & emailForwardingRule //(0.00061)]\n            developer info: \"Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md\"\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n            +>  sensitiveDataCollected\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n            +>  blockUserAccess\n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n            +>  os.attemptServiceStop\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        & officeTemplateMacros\n            user info: \"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & officeTest\n            user info: \"Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookForms\n            user info: \"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookHomePage\n            user info: \"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        & outlookRules\n            user info: \"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        | addIns\n            user info: \"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.\"\n            +>  os.persistence\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/mitigations/M1042/\"\n            +>  officeTemplateMacros\n\n        # softwareConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1054/\"\n            +>  officeTest\n\n        # updateSoftware //(0.567125)]\n            developer info: \"Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html\"\n            user info: \"https://attack.mitre.org/mitigations/M1051/\"\n            +>  outlookForms,\n                outlookHomePage,\n                outlookRules\n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            +>  additionalAzureServicePrincipalCredentials,\n                cloudAccounts,\n                exchangeEmailDelegatePermissions,\n                addOffice365GlobalAdministratorRole\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            +>  remoteEmailCollection,\n                exchangeEmailDelegatePermissions,\n                addOffice365GlobalAdministratorRole\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            +>  cloudAccount,\n                additionalAzureServicePrincipalCredentials\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            +>  remoteEmailCollection,\n                createSnapshot,\n                createCloudInstance,\n                deleteCloudInstance,\n                disableOrModifyCloudFirewall,\n                stealApplicationAccessToken\n\n        # passwordPolicies\n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n            +>  cloudAccounts\n    }\n\n    asset Browser {\n        & driveByCompromise //(0.37)]\n            user info: \"A drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing.\" \n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/6657123\"\n            ->  malvertising,\n                crossSiteScripting,\n                service.os.computer.user.attemptUserExecution,\n                service.attemptExploitationForClientExecution,\n                service.os.attemptGatekeeperBypass\n\n\n        | malvertising //(9,0.167)]\n            developer info: \"Sources for distribution result: https://www.adstage.io/resources/q1-2020-ppc-benchmark-report/; https://www.youtube.com/watch?v=rTg9l4d8MU4; https://www.facebook.com/business/help/204798856225114?id=649869995454285\"\n            ->  service.stealApplicationAccessToken\n\n        | crossSiteScripting //(0.32)*Exponential(1)]\n            developer info: \"Sources for distribution result: https://books.google.fr/books?id=biGsBwAAQBAJ&pg=PA104&lpg=PA104&dq=forum+posts,+comments+compromise+browser+malware&source=bl&ots=rzJQ6XY73h&sig=ACfU3U2wC6Muu7MfakP6MHJLk7IXJ76C0A&hl=fr&sa=X&ved=2ahUKEwiomdS20dbpAhV65OAKHaD4Dz8Q6AEwAHoECAoQAQ#v=onepage&q=forum%20posts%2C%20comments%20compromise%20browser%20malware&f=false; http://www.ijiser.com/paper/2017/vol4issue8/Aug2017p101.1.pdf; https://www.acunetix.com/acunetix-web-application-vulnerability-report-2019/#xss\"\n            ->  service.stealApplicationAccessToken\n\n        & credentialsFromWebBrowsers //(0.625)]\n            user info: \"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\"\n            developer info: \"Sources for distribution result: https://link.springer.com/book/10.1007/978-3-319-94376-3, https://attack.mitre.org/techniques/T1503/, https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign\"\n            ->  service.os.userAccount.userCredentials\n \n        | phishing\n            user info: \"Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems.\"\n            ->  attemptSpearphishingAttachment,\n                attemptSpearphishingLink,\n                service.attemptSpearphishingViaService\n\n        | attemptSpearphishingLink @hidden      \n            ->  spearphishingLink\n\n        & spearphishingLink\n            user info: \"The links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution.\"\n            ->  service.os.computer.user.attemptMaliciousLink\n            \n        | attemptSpearphishingAttachment @hidden      \n            ->  spearphishingAttachment\n      \n        & spearphishingAttachment\n            user info: \"Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email.\" \n            ->  service.os.computer.user.attemptMaliciousFile,\n                service.os.attemptControlPanel // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns\n\n        | browserBookmarkDiscovery //(0.03065)*Exponential(4)]\n            user info: \"Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\"\n            developer info: \" Sources for distribution result: https://attack.mitre.org/software/S0274/, https://securelist.com/calisto-trojan-for-macos/86543/, https://en.wikipedia.org/wiki/System_Integrity_Protection, https://gs.statcounter.com/macos-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.statista.com/statistics/944559/worldwide-macos-version-market-share/, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.welivesecurity.com/wp-content/uploads/2019/08/ESET_Machete.pdf, https://attack.mitre.org/software/\"\n            ->  service.os.userAccount.userInformation,\n                service.os.computer.router.internalNetwork.internalNetworkResourcesInformation\n\n        | installExtensions\n            ->  browserExtensions\n\n        & browserExtensions //(0.85)]\n            user info: \"Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser, to include credentials, and be used as an installer for a RAT for persistence.\" \n            developer info: \"Source used for distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjQuta00ojqAhVGUZoKHT9YAygQFjAAegQIARAB&url=http%3A%2F%2Fmkto.cisco.com%2Frs%2F564-whv-323%2Fimages%2Fcisco-asr-2016.pdf&usg=AOvVaw1nLayTNlhdlV3tF_LfCxLf (Cisco 2016 Annual Security Report)\"\n            ->  service.os.userAccount.userInformation,\n                service.os.userAccount.userCredentials,\n                service.os.persistence\n\n        & stealWebSessionCookie\n            user info: \"An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials.\"\n            ->  attemptWebSessionCookie // after an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application\n\n        | attemptWebSessionCookie @hidden\n            ->  webSessionCookie\n\n        & webSessionCookie\n            user info: \"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.\"\n            ->  service.os.sensitiveDataCollected\n\n        # updateSoftware //(0.567125)]\n            developer info: \"Sources for distribution result: https://www.usenix.org/system/files/conference/soups2015/soups15-paper-ion.pdf, https://www.computerweekly.com/news/252462476/Most-businesses-vulnerable-to-supply-chain-cyber-attacks#:~:text=Seven%20in%2010%20businesses%20may,to%20research%20commissioned%20by%20Accenture, https://www.bitsight.com/press-releases/thousands-organizations-run-majority-of-computers-onoutdated-operating-systems, https://cdn2.hubspot.net/hubfs/486579/Avast_PC_Trends_Report_2019.pdf, https://netmarketshare.com/operating-system-market-share.aspx?, https://gs.statcounter.com/windows-version-market-share/desktop/worldwide/#monthly-201906-202006, https://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483, https://www.pcworld.com/article/2013737/out-of-date-vulnerable-browsers-put-users-at-risk.html\"\n            user info: \"https://attack.mitre.org/mitigations/M1051/\"\n            ->  driveByCompromise\n\n        # exploitProtection\n            user info: \"https://attack.mitre.org/mitigations/M1050/\"\n            ->  driveByCompromise\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            ->  browserExtensions\n\n        # passwordPolicies \n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n            ->  credentialsFromWebBrowsers\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            ->  stealWebSessionCookie\n                \n        # restrictWebBasedContent //(0.3)] // Block unknown or unused attachments by default that should not be transmitted over email.\n            developer info: \"Sources for distribution result: https://community.spiceworks.com/blog/3073-data-snapshot-how-web-filtering-affects-workplace-security-and-productivity, https://www.internetsociety.org/resources/doc/2017/internet-content-blocking/, https://www.phishingbox.com/resources/phishing-facts, https://www.darkreading.com/vulnerabilities---threats/social-media-platforms-double-as-major-malware-distribution-centers/d/d-id/1333973\"\n            user info: \"https://attack.mitre.org/mitigations/M1021/\"\n            ->  spearphishingAttachment, \n                spearphishingLink,\n                service.spearphishingViaService,\n                driveByCompromise,\n                service.os.commandAndScriptingInterpreter,\n                service.os.domainGenerationAlgorithms,\n                service.os.compiledHTMLFile,\n                service.os.userAccount.userExecution,\n                service.os.computer.user.maliciousLink,\n                service.os.computer.router.externalNetwork.bidirectionaCommunication,\n                service.os.computer.router.externalNetwork.deadDropResolver,\n                service.os.computer.router.externalNetwork.oneWayCommunication,\n                service.os.computer.router.externalNetwork.exfiltrationOverWebService\n    }\n\n    asset OS {\n        | attemptBITSJobs @hidden\n\n        | attemptAppCertDLLs @hidden\n\n        & appCertDLLs\n            developer info: \"Binaries probability distribution. Source for distribution results : Process Injection result and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n\n        & bypassUserAccessControl //(0.277)]\n            developer info: \"TTC assumed instant. Sources for probability distribution: https://attack.mitre.org/software/S0129/, https://www.forcepoint.com/sites/default/files/resources/files/forcepoint-security-labs-monsoon-analysis-report.pdf, https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6352, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://github.com/hfiref0x/UACME\"\n\n        | changeDefaultFileAssociation\n            user info: \"Adversaries may establish persistence by executing malicious content triggered by a file type association.\"\n\n        | attemptGatekeeperBypass @hidden\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            \n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            developer info: \"Sources for distribution results : https://blog.rootshell.be/2017/12/19/malware-delivered-via-compiled-html-help-file/\"\n            \n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            \n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            developer info: \"TTC assumed instant, see mitreattacklang/enterpriselang probabilities/controlPanelItems.md for details. Sources used for probability distribution result: https://attack.mitre.org/software/S0172/, https://threatvector.cylance.com/en_us/home/reaver-mapping-connections-between-disparate-chinese-apt-groups.html, https://nvd.nist.gov/vuln/detail/CVE-2017-11882#vulnConfigurationsArea, https://unit42.paloaltonetworks.com/unit42-new-malware-with-ties-to-sunorcal-discovered/, https://community.spiceworks.com/software/articles/2873-data-snapshot-the-state-of-productivity-suites-in-the-workplace\"\n            \n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/techniques/T1552/002/\"\n            \n        | deobfuscateOrDecodeFilesOrInformation\n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            developer info: \"TTC is extremely low (< 0.00001 seconds) and is excluded. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/\"\n            \n        & domainTrustDiscovery //(0.13)*Exponential(127.1)]\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/domain-trust-discovery/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n            \n        & dynamicDataExchange //(0.93)*Exponential(1)]\n            developer info: \"Sources for distribution results : https://www.fortinet.com/blog/threat-research/cybercriminals-exploiting-microsoft-s-vulnerable-dynamic-data-exchange-protocol\"\n            user info: \"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications.\"\n            \n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n            developer info: \"Sources used for distribution: https://lolbas-project.github.io/lolbas/Binaries/Mshta/, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/\"\n\n        & windowsRemoteManagement\n            developer info: \"Binary probability distribution. Use of Valid Acounts\"\n            user info: \"WinRM allows a user to interact with a remote system.\"\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n\n        & appInitDLLs //(0.79)*Exponential(127.1)]\n            developer info: \"Sources for distribution results: Work on processInjection and https://www.spiceworks.com/marketing/network-security/pdf-report/\"\n\n        & applicationShimming\n            developer info:\"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\"\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        | attemptBootkit @hidden\n\n        | attemptElevatedExecutionWithPrompt @hidden\n\n        | attemptLSASSDriver @hidden \n\n        | attemptLSASSMemory @hidden\n\n        | attemptPasswordFilterDLL @hidden\n\n        | attemptServiceExecution @hidden\n\n        | attemptServiceRegistryPermissionsWeakness @hidden\n\n        | attemptServicesFilePermissionsWeakness @hidden\n\n        | attemptSIDHistoryInjection @hidden\n            user info: \"Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\"\n\n        | attemptSIPAndTrustProviderHijacking @hidden\n\n        | attemptSQLStoredProcedures @hidden\n\n        | attemptStartupItems @hidden\n\n        | attemptSystemFirmware @hidden\n\n        | attemptTimeProviders @hidden\n\n        | attemptTransportAgent @hidden\n\n        | attemptWinlogonHelperDLL @hidden\n\n        | attemptWindowsRemoteManagement @hidden\n\n        & winlogonHelperDLL\n            user info: \"Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.\"\n\n        & authenticationPackage\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries can use Windows Authentication Packages for persistence for persistence.\"\n\n        & bootkit //(0.46)]\n            developer info: \"TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx\" \n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n            developer info: \"https://attack.mitre.org/groups/, https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf, https://eclypsium.com/2019/12/20/anatomy-of-a-firmware-attack/, https://www.youtube.com/watch?v=loBX_vEXxVA&feature=youtu.be\"       \n\n        | credentialAPIHooking          \n            developer info:\"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"  \n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        & emond //(2)]\n            developer info: \"Source for distribution result : https://www.xorrior.com/emond-persistence/\"\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n\n        | imageFileExecutionOptionsInjection\n            developer info: \"Binary probability distribution. Soucres for distribution results: process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n\n        | netshHelperDLL\n            user info: \"Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner.\"\n\n        & passwordFilterDLL\n            user info: \"Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains.\"\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        | portMonitors\n            user info: \"Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\"\n\n        | attemptPowerShell @hidden\n            user info: \"Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.\"\n\n        & powerShell //(0.55)]\n            user info: \"Administrator permissions are required to use PowerShell to connect to remote systems.\"    \n            developer info: \"The process takes a few seconds to complete, so the TTC has excluded. It would be //(28800)] if included. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/powershell/\"  \n\n        | attemptPowerShellAdminProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n        \n        & powerShellAdminProfile //(0.5)*Exponential(2)]\n            developer info: \"sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it\"\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n\n        & queryRegistry //(0.05226)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0075/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc742028(v=ws.11), https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf\"\n            user info: \"The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network.\"\n\n        & rc_common\n            developer info: \"Binary probability distribution. (Root rights) https://attack.mitre.org/techniques/T1037/004/\"\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n\n        & remoteScheduledTask\n\n        & scheduledTask //(0.33)*Exponential(54.3)]\n            user info: \"An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\"\n            developer info: \"Sources used for probability results: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490866(v=technet.10)?redirectedfrom=MSDN, https://redcanary.com/threat-detection-report/techniques/scheduled-task/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://blog.malwarebytes.com/cybercrime/2015/03/scheduled-tasks/, https://www.zdnet.com/article/microsoft-says-new-dexphot-malware-infected-more-than-80000-computers/\"\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump\"\n\n        & securitySupportProvider\n            user info: \"An adversary may modify these Registry keys to add new SSPs.\"\n\n        & serviceExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager.\"\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        & systemFirmware\n            user info: \"System firmware may be modified by an adversary to perform or assist in malicious activity.\"\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n\n        | attemptWindowsAdminShares @hidden\n\n        | attemptExecutionThroughAPI @hidden\n\n        | attemptAccessTokenManipulation @hidden\n\n        & accessTokenManipulation //(0.20715)]\n            user info: \"Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.\"\n            developer info: \"Sources for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://pentestlab.blog/2017/04/03/token-manipulation/\"\n\n        | attemptControlPanel @hidden\n\n        | attemptDistributedComponentObjectModel @hidden\n\n        | attemptLaunchAgent @hidden\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n\n        | attemptAccessibilityFeatures @hidden\n        \n        | attemptLogonScripts @hidden\n\n        | attemptPlistModification @hidden\n\n        | attemptRemoteDesktopProtocol @hidden\n\n        | attemptServiceStop @hidden //}\n\n        | attemptSetuidAndSetgid @hidden\n\n        | attemptShortcutModification @hidden\n\n        & shortcutModification //(0.03)]\n            developer info: \"Sources for distribution result: https://ics-cert.kaspersky.com/reports/2019/09/30/threat-landscape-for-industrial-automation-systems-h1-2019/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf, https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf\"\n            user info: \"Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\"\n\n        | attemptSSHAuthorizedKeys @hidden\n\n        | attemptTaintSharedContent @hidden\n            user info: \"This is a helper attack step that requires access to shared folders.\"\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution. With File permissions, the adversary may instantly perform this technique.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n\n        & bashHistory //(0.5)*Exponential(1)]\n            developer info: \"Sources for distribution results: https://www.darkreading.com/endpoint/average-employee-manages-nearly-200-passwords/d/d-id/1330304, http://blog.lastpass.com/2017/11/lastpass-reveals-8-truths-about-passwords-in-the-new-password-expose/ \"\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n\n        & bITSJobs //(0.264)]\n            user info: \"Adversaries may abuse BITS to download, execute, and even clean up after running malicious code.\"\n            developer info: \"TTC assumed instant. Sources used for probability distribution: https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://en.wikipedia.org/wiki/Windows_Desktop_Gadgets, https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html\" \n\n        & cachedDomainCredentials\n            user info: \"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\"\n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n\n        & distributedComponentObjectModel //(96)]\n            user info: \"Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM).\"\n\n        & elevatedExecutionWithPrompt\n            developer info: \"Binary probability distribution. Sources for distribution result: https://www.carbonblack.com/blog/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n            user info: \"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.\"\n\n        | emailCollection\n            developer info: \"Binary probability distribution. (Probabilities carried by children)\"\n            user info: \"Adversaries may target user email to collect sensitive information from a target.\"\n\n        & executableInstallerFilePermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer.\"\n\n        & executionThroughModuleLoad //(0.93)*Exponential(1)]\n            developer info: \"Sources for distribution results: Results on spearphishing and https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=bc9e2e2e-028c-4ba1-863f-72a4700dbdc2&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments, https://www.cybereason.com/blog/information-stealing-malware-targeting-brazil-full-research\"\n            user info: \"Adversaries can use this functionality as a way to execute arbitrary code on a system.\"\n\n        & forcedAuthentication\n            user info: \"Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication.\"\n \n        & goldenTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.\"\n\n        & groupPolicyModification\n            user info: \"Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more.\"\n\n        & groupPolicyPreferences\n            user info: \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP).\"\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n            developer info: \"Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download\"\n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n\n        | indirectCommandExecution\n            user info: \"Adversaries may abuse the Windows system features for Defense Evasion.\"\n\n        & installUtil\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility.\"\n\n        & launchctl\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.\"\n\n        & lC_LOAD_DYLIB_Addition\n            user info: \"Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time.\"\n\n        & lLMNR_NBT_NS_PoisoningAndSMBRelay\n            developer info: \"Binary probability distribution. Probability carried by MiTM technique.\"\n            user info: \"AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords.\"\n\n        & lSASecrets\n            user info: \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\"\n\n        & lSASSMemory\n            user info: \"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).\"\n\n        & manInTheBrowser\n            user info: \"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques.\"\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n\n        & modifyRegistry //(0.0661)]\n            user info: \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.usenix.org/legacyurl/view-current-malware-behaviors, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732643(v=ws.11)?redirectedfrom=MSDN\"\n\n        & msiexec\n            user info: \"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\"\n \n        | networkShareConnectionRemoval\n            user info: \"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation.\"\n\n        & networkShareDiscovery //(0.0129)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/\"\n\n        & nTDS\n            user info: \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights.\"\n\n        & odbcconf\n            user info: \"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads.\"\n\n        | parentPIDSpoofing\n            user info: \"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.\"\n\n        & pathInterceptionBySearchOrderHijacking\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs.\"\n\n        | peripheralDeviceDiscovery //(1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/646.html, https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://github.com/mal-lang/malcompiler/wiki/Supported-distribution-functions\" \n\n        & plistModification\n            user info: \"Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism.\"\n            developer info: \"Binary probability distribution.\"\n\n        & portableExecutableInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n\n        & powerShellUserProfile //(2)]\n            developer info: \"sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it\"\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n\n        & processDoppelganging\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection.\"\n\n        & processHollowing //(1440)]\n            developer info: \"Sources for distribution result: https://redcanary.com/threat-detection-report/techniques/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://adalogics.com/blog/the-state-of-advanced-code-injections, https://www.youtube.com/watch?v=G6AoZ5F4CH8, https://www.youtube.com/watch?v=k2pLF56gXXw&feature=youtu.be&t=106\"\n            user info: \"Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis.\"\n\n        & pubPrn\n            user info: \"Adversaries may use the trusted PubPrn script to proxy execution of malicious files.\"\n\n        & rDPHijacking\n            user info: \"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment.\"\n\n        | registryRunKeysOrStartupFolder //(0.17125)]\n            user info: \"Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\"\n            developer info: \"Sources used for distribution result: https://dsimg.ubm-us.net/envelope/395823/551993/Fileless%20Attack%20Survival%20Guide.pdf, https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB\"\n\n        & regsvcsOrRegasm\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting.\"\n\n        & regsvr32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions.\"\n\n        & remoteDesktopProtocol //(0.5561)*Exponential(480)]\n            user info: \"Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session.\"\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/blog/threat-research/2020/02/mtrends-2020-insights-from-the-front-lines.html, https://duo.com/decipher/attackers-combine-attacks-against-rdp-with-ransomware, https://www.securitymagazine.com/articles/90983-percent-of-organizations-exhibit-malicious-remote-desktop-protocol-rdp-behaviors, https://medium.com/enterprise-nxt/2020-ransomware-attacks-still-mostly-through-unsecured-rdp-b167fefcd490, https://www.youtube.com/watch?v=Olgso_oXQa8\"\n\n        & reopenedApplications\n            developer info: \"Binary probability distribution. Plist Modification: https://attack.mitre.org/techniques/T1547/007/\"\n            user info: \"An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine.\"\n\n        & rundll32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse rundll32.exe to proxy execution of malicious code.\"\n\n        & screensaver //(0.01605)*Exponential(96)]\n            user info: \"Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.\"\n            developer info: \"Sources for distribution result: https://malware.wikia.org/wiki/MyDoom, https://unit42.paloaltonetworks.com/mydoom-still-active-in-2019/, https://www.menlosecurity.com/blog/only-4-percent-of-users-click-on-phishing-emails.-yet-those-4-percent-never-learn, https://study.sagepub.com/chiricogsp, https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf\" \n\n        & securityAccountManager\n            user info: \"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.\" \n \n        & servicesFilePermissionsWeakness //(1)]\n            developer info: \"Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html\"\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by services.\"\n\n        & servicesRegistryPermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\"\n\n        & serviceStop //} //(0.0837)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://blog.talosintelligence.com/2018/02/olympic-destroyer.html, https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-changeserviceconfigw, https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html, https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/\"\n            user info: \"Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.\"\n\n        | signedScriptProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Scripts signed with trusted certificates can be used to proxy execution of malicious files.\"\n\n        & silverTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets.\"\n\n        & sIPAndTrustProviderHijacking\n            user info: \"Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system.\"\n\n        | source\n            developer info: \"Binary probability distribution.\"\n\n        | spaceAfterFileName //(1)]\n            developer info: \"Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n\n        & sSHHijacking //(0.51)]\n            developer info: \"Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf\" \n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n\n        & sudoAndSudoCaching //(288)]\n            developer info: \"Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html\"\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n\n        & systemdService\n            user info: \"Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.\"\n\n        | systemServiceDiscovery //(0.0122)]\n            user info: \"Adversaries may try to get information about registered services.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1007/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb491010(v=technet.10)?redirectedfrom=MSDN\"\n\n        & templateInjection\n            user info: \"Adversaries may abuse this technology to initially conceal malicious code to be executed.\"\n\n        & threadExecutionHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n\n        | trap //(0.1)]\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n\n        | trustedDeveloperUtilities\n            developer info: \"Binary probability distribution.\"\n            user info: \"An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.\"\n\n        | videoCapture //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption\"\n\n        & windowsAdminShares //(0.28)*Exponential(4114)]\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/windows-admin-shares/, https://www.contextis.com/us/blog/lateral-movement-a-deep-look-into-psexec\"\n\n        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]\n            user info: \"An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions.\"\n            developer info: \"TTC is upper bound of likely time needed. Sources used for probability distribution result: https://redcanary.com/threat-detection-report/techniques/windows-management-instrumentation/, https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf, https://www.microsoft.com/security/blog/2017/06/27/new-ransomware-old-techniques-petya-adds-worm-capabilities/, https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/\"\n\n        | attemptWindowsManagementInstrumentationEventSubscription @hidden\n\n        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]\n            developer info: \"We assume the dsitribution to be the same as for windowsManagementInstrumentation\"\n            user info: \"Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.\"\n\n        & xslScriptProcessing //(0.93)*Exponential(1)]\n            developer info: \"Sources used for probability distribution: https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/\"\n            user info: \"Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\"      \n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            developer info: \"Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A\" \n            ->  userAccount.userCredentials,\n                persistence,\n                service.additionalAzureServicePrincipalCredentials,\n                service.exchangeEmailDelegatePermissions,\n                service.addOffice365GlobalAdministratorRole\n\n        | archiveCollectedData\n            user info: \"An adversary may compress and/or encrypt data that is collected prior to exfiltration.\"\n            ->  archiveViaUtility,\n                archiveViaLibrary,\n                archiveViaCustomMethod\n\n        & archiveViaUtility\n            user info: \"An adversary may compress and/or encrypt data that is collected prior to exfiltration.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | archiveViaLibrary\n            user info: \"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | archiveViaCustomMethod\n            user info: \"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method.\"\n            ->  dataCompressed,\n                dataEncrypted\n\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n\n        | accountAccessRemoval //}\n            developer info: \"Binary probability distribution. Once they have access, adversaries may perform this technique.\"\n            user info: \"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or reboot boxes to set malicious changes into place.\"\n\n        | bootOrLogonAutostartExecution\n\n        | infectedOS\n            ->  clipboardData,\n                dataFromInformationRepositories,\n                computer.infectedComputer\n\n        & clipboardData //(1)]\n            developer info: \"Sources for distribution results: https://attack.mitre.org/techniques/T1115/ \"\n            ->  adminAccount.adminCredentials,\n                userAccount.userCredentials\n\n        | accountDiscovery //(0.01967)]\n            user info: \"get account names and information\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, Red Canary's ATT&CK technique percentages Top 50 Google Sheets Document, https://krisk.io/post/sok-attack-securecomm19.pdf, https://attack.mitre.org/techniques/T1087/\"\n            ->  service.cloudAccount,\n                service.emailAccount,\n                attemptDomainAccount,\n                attemptLocalAccount\n\n        | attemptDomainAccount @hidden\n            ->  domainAccount\n\n        & domainAccount\n            user info: \"Adversaries may attempt to get a listing of domain accounts.\"\n            ->  userAccount.userInformation,\n                persistence\n\n        | attemptLocalAccount @hidden\n            ->  localAccount\n\n        & localAccount\n            user info: \"Adversaries may attempt to get a listing of local system accounts.\"\n            ->  userAccount.userInformation,\n                persistence\n\n        & commandAndScriptingInterpreter //(0.24)]\n            developer info: \"Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/\"\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            ->  dataFromLocalSystem,\n                screenCapture,\n                visualBasic,\n                python,\n                javaScriptOrJScript\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            ->  service.browser.attemptSpearphishingAttachment,\n                executeCode\n\n        & python\n            user info: \"Adversaries may abuse Python commands and scripts for execution.\"\n            ->  executeCode\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            ->  executeCode,\n                service.browser.driveByCompromise,\n                obfuscatedFilesOrInformation\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            ->  service.browser.credentialsFromWebBrowsers\n\n        | dataManipulation //(0.65833)*Exponential(0.02)]\n            developer info: \"Sources for distribution results: https://threatpost.com/what-is-a-data-manipulation-attack-and-how-to-mitigate-against-them/141563/, https://www.lexology.com/library/detail.aspx?g=2cbd967d-0dcc-4adb-a16f-417b7479cec7, work on the Data Encryption mitigation\"\n            user info: \"Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity.\"\n            ->  storedDataManipulation,\n                service.transmittedDataManipulation,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation,\n                computer.router.internalNetwork.attemptTransmittedDataManipulation,\n                runtimeDataManipulation\n\n        | dataFromLocalSystem\n            developer info: \"Binary probability distribution. Distribution carried by Automated Collection.\"\n            user info: \"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\"\n            ->  attemptAutomatedCollection\n\n        | defacement\n            user info: \"Adversaries may modify visual content available internally or externally to an enterprise network.\"\n            ->  computer.router.internalNetwork.internalDefacement,\n                computer.router.externalNetwork.externalDefacement\n\n        & domainDiscovery\n            user info: \"get domain names and information\"\n\n        & domainGenerationAlgorithms \n            user info: \"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains.\" \n            ->  fallbackChannels, // leads to Fallback Channels attack\n                computer.router.internalNetwork.communicate,\n                computer.router.internalNetwork.generateDomainNames\n\n        | compromisedDataOrSystem // with probability\n            ->  attemptPrivateKeys,\n                systemNetworkConnectionsDiscovery,\n                service.browser.installExtensions,\n                computer.peripheralDevice.infectedMedia,\n                service.attemptTrustedRelationship\n\n        | attemptBinaryPadding @hidden\n            ->  binaryPadding\n\n        & binaryPadding\n            developer info: \"Binary probability distribution. Distribution carried by obfuscatedFilesOrInformation\"\n            ->  bypassSignatureBasedDetection,\n                bypassAntivirus\n\n        & applicationWindowDiscovery\n            developer info: \"Binary probability distribution. https://attack.mitre.org/techniques/T1010/ no mitigation, some malware can do this\"\n            user info: \"get a listing of opened application windows\"\n\n        & processDiscovery //(0.17)*Exponential(346)]\n            user info: \"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\"\n            developer info: \"Sources used for distribution result: https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB, https://www.researchgate.net/publication/332380784_How_many_words_do_we_read_per_minute_A_review_and_meta-analysis_of_reading_rate, https://attack.mitre.org/techniques/T1057/\"\n            ->  processInjection\n\n        | collectHashInformation\n            ->  attemptPasswordCracking // leads to Brute Force: Password Cracking attack  \n\n        & compileAfterDelivery    \n            developer info: \"Binary probability distribution. Probability carried by obfuscatedFilesOrInformation\" \n            user info: \"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Spearphishing Attachment.\"\n            ->  service.browser.phishing, // source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing.\n                bypassStaticFileAnalysis,\n                bypassBinaryAnalysis,\n                bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassSignatureBasedDetection\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            developer info: \"Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz\" \n\n        | attemptEncryptedChannel @hidden\n            ->  encryptedChannel\n\n        & encryptedChannel //(0.60)*Exponential(5400)]\n            developer info: \"Sources for distribution results : https://www.jscape.com/blog/bid/84422/symmetric-vs-asymmetric-encryption#:~:text=Symmetric%20key%20encryption%20doesn't,to%20speed%2C%20symmetric%20trumps%20asymmetric.&text=For%20as%20long%20as%20you,to%20decrypt%20your%20encrypted%20file., https://www.cse.wustl.edu/~jain/cse567-06/ftp/encryption_perf/, https://arxiv.org/ftp/arxiv/papers/1312/1312.3183.pdf, https://www.cisco.com/c/dam/en/us/solutions/collateral/enterprise-networks/enterprise-network-security/nb-09-encrytd-traf-anlytcs-wp-cte-en.pdf\"\n            user info: \"Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic.\"\n            ->  computer.router.internalNetwork.c2Connected  \n\n        | dataEncoding //(0.0614)]\n            developer info: \"TTC instant/not applicable. Sources used for probability distribution result: https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/powershell-threats-grow-further-and-operate-plain-sight, https://docs.broadcom.com/docs/increased-use-of-powershell-in-attacks-16-en\"\n            ->  standardEncoding,\n                nonStandardEncoding\n\n        & standardEncoding\n            user info: \"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect.\" \n            ->  computer.router.internalNetwork.communicate\n\n        & nonStandardEncoding            \n            user info: \"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect.\"\n            ->  computer.router.internalNetwork.communicate\n\n        | dynamicResolution\n            user info: \"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations.\"\n            ->  fallbackChannels,\n                fastFluxDNS,\n                domainGenerationAlgorithms,\n                dNSCalculation\n\n        | fastFluxDNS\n            user info: \"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.\"\n            ->  fallbackChannels\n\n        | dNSCalculation\n            user info: \"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address.\"\n            ->  bypassEgressFiltering\n\n        | executeCode \n            ->  computer.infectedComputer,\n                computer.router.internalNetwork.remoteAccess\n\n        | attemptEndpointDenialOfService @hidden //}\n            ->  endpointDenialOfService\n\n        & endpointDenialOfService //}\n            user info: \"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users.\"\n            ->  applicationExhaustionFlood,\n                oSExhaustionFlood,\n                serviceExhaustionFlood,\n                applicationOrSystemExploitation,\n                service.applicationExhaustionFlood,\n                service.serviceExhaustionFlood,\n                service.applicationOrSystemExploitation\n\n        | applicationExhaustionFlood //}\n            user info: \"Adversaries may target resource intensive features of web applications to cause a denial of service (DoS).\" \n            ->  service.blockUserAccess\n\n        | oSExhaustionFlood //}\n            user info: \"Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system.\" \n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n\n        | applicationOrSystemExploitation //}\n            user info: \"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.\"\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n\n        | executionGuardrails\n            user info: \"Adversaries may use guardrails and environmental keying to help protect their TTPs and evade detection.\"\n            ->  environmentalKeying\n\n        & environmentalKeying\n            user info: \"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment.\"\n            ->  payloadDelivery\n      \n        | payloadDelivery\n\n        & exfiltrationOverOtherNetworkMedium //(259.5)]\n            developer info: \"Sources for distribution results: https://fr.wikipedia.org/wiki/D%C3%A9bits_et_port%C3%A9es, https://www.atlasandboots.com/remote-work/countries-with-the-fastest-internet-in-the-world/#:~:text=The%20global%20average%20broadband%20internet,Mbps%20(megabits%20per%20second).\"\n            user info: \"Adversaries could choose to do exfiltration over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.\"     \n            ->  exfiltrationOverBluetooth,\n                computer.router.internalNetwork.dataExfiltration\n        \n        & exfiltrationOverBluetooth //(51.86)]\n            developer info: \"Sources for distribution results: https://fr.wikipedia.org/wiki/D%C3%A9bits_et_port%C3%A9es, https://www.atlasandboots.com/remote-work/countries-with-the-fastest-internet-in-the-world/#:~:text=The%20global%20average%20broadband%20internet,Mbps%20(megabits%20per%20second).\"\n            user info: \"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | fallbackChannels\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\" \n            ->  computer.router.internalNetwork.communicate  \n\n        & firmwareCorruption //} //(0.8)*Exponential(2880)]\n            user info: \"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot.\" \n            developer info: \"TTC assumed instant, one source states 30s. Sources used for probability distribution result: https://www.wired.com/2015/03/researchers-uncover-way-hack-bios-undermine-secure-operating-systems/, https://www.gillware.com/hard-drive-data-recovery/data-recovery-101-firmware/\"\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            ->  hiddenFilesAndDirectories,\n                hiddenFileSystem,\n                runVirtualInstance\n\n        & hiddenFileSystem\n            user info: \"Adversaries may use a hidden file system to conceal malicious activity from users and security tools.\" \n\n        & runVirtualInstance\n            user info: \"Adversaries may carry out malicious operations using a virtual instance to avoid detection.\"\n            ->  bypassHostIntrusionPrevention\n\n        | hiddenFilesAndDirectories //(0.0106)]\n            user info: \"To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a 'hidden' file. Adversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1158/\"\n            ->  bypassHostForensicAnalysis,\n                persistence\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n\n        | indicatorRemovalFromTools\n            developer info: \"Binary probability distribution\"\n            user info: \"An adversary may be able to modify the tool by removing the indicator that is no longer detected by the target's defensive systems.\"\n            ->  bypassHostIntrusionPrevention,\n                bypassLogAnalysis,\n                bypassAntivirus\n\n        | indicatorRemovalOnHost //(0.04)]\n            developer info: \"Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets\"\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            ->  fileDeletion,\n                timestomp \n\n        | timestomp //(0.0396)]\n            user info: \"Timestomp is done on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\"\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://github.com/jackson5sec/timestomp\" \n            ->  bypassHostForensicAnalysis,\n                masquerading // hide malware and tools\n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            developer info: \"Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf\"\n            ->  keylogging,\n                webPortalCapture\n               \n        | keylogging\n            user info: \"Adversaries may log user keystrokes to intercept credentials as the user types them.\"\n            ->  userAccount.userCredentials \n\n        & lateralToolTransfer\n            user info: \"Adversaries may transfer tools or other files between systems in a compromised environment.\"\n\n        & webPortalCapture\n            user info: \"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service.\"\n            ->  service.attemptExternalRemoteServices, // maintain network access\n                validAccounts\n\n        | internalSpearphishing //(0.85)*Exponential(1)]\n            developer info: \"Sources for distribution results: https://er.educause.edu/articles/2005/1/fostering-email-security-awareness-the-west-point-carronade and other work on spearphishing.\" \n            user info: \"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment.\" \n            ->  computer.user.attemptMaliciousFile,\n                service.applicationAccessToken,\n                service.attemptExploitationForClientExecution,\n                attemptDynamicDataExchange,\n                inputCapture\n\n        | attemptDynamicDataExchange\n\n        & manInTheMiddle //(0.35)*Exponential(1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/94.html, https://www.csoonline.com/article/3340117/what-is-a-man-in-the-middle-attack-how-mitm-attacks-work-and-how-to-prevent-them.html#:~:text=Though%20not%20as%20common%20as,are%20difficult%20to%20come%20by.\"\n            user info: \"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\"\n            ->  networkSniffing,\n                computer.router.internalNetwork.attemptTransmittedDataManipulation,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            developer info: \"TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker\"\n            ->  matchLegitimateNameOrLocation,\n                rightToLeftOverride,\n                renameSystemUtilities\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        | rightToLeftOverride\n            user info: \"Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. A common use of this technique is with Spearphishing Attachment/Malicious File since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character.\"\n            ->  service.browser.attemptSpearphishingAttachment, // employ various forms of Masquerading on the file to increase the likelihood that a user will open it\n                computer.user.attemptMaliciousFile // employ various forms of Masquerading on the file to increase the likelihood that a user will open it\n\n        & renameSystemUtilities\n            user info: \"Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities.\"\n            ->  bypassFileMonitoring\n\n        & matchLegitimateNameOrLocation\n            user info: \"Adversaries may match or approximate the name or location of legitimate files when naming/placing their files.\"\n            ->  bypassFileOrPathWhitelisting\n\n        | proxy //(0.825)]\n            developer info: \"Sources used for probability distribution: https://jpcertcc.github.io/ToolAnalysisResultSheet/details/Htran.htm#ExecCondition, https://gs.statcounter.com/os-market-share/desktop/worldwide/#monthly-201905-202005, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/threat-detection-report/techniques/powershell/, https://www.scribd.com/document/406643981/Threat-Detection-Report, https://s3.eu-west-1.amazonaws.com/ncsc-content/files/Joint%20report%20on%20publicly%20available%20hacking%20tools%20%28NCSC%29.pdf)\"\n            user info: \"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure.\"\n            ->  internalProxy,\n                externalProxy,\n                attemptMultiHopProxy,\n                domainFronting\n\n        & internalProxy\n            user info: \"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        & externalProxy\n            user info: \"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | attemptMultiHopProxy @hidden\n            ->  multiHopProxy\n\n        & multiHopProxy //(0.0124)*Exponential(1440)]\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0281/, https://objective-see.com/blog/blog_0x25.html, https://www.cable.co.uk/broadband/speed/worldwide-speed-league/, https://www.secureworks.com/research/wcry-ransomware-analysis\"\n            user info: \"To disguise the source of malicious traffic, adversaries may chain together multiple proxies.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        & domainFronting\n            user info: \"Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.\"\n            ->  computer.router.internalNetwork.obfuscateNetworkTraffic,\n                computer.router.externalNetwork.obfuscateNetworkTraffic          \n\n        | attemptMultiStageChannels @hidden\n            ->  multiStageChannels\n\n        & multiStageChannels\n            user info: \"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions.\"\n            ->  computer.router.internalNetwork.c2Connected,\n                fallbackChannels\n\n        | networkDenialOfService //} //(0.4863)*Exponential(6.6)]\n            user info: \"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users.\"\n            developer info: \"Sources used for probability distribution: https://www.netscout.com/news/press-release/complexity-ddos-attacks, https://securelist.com/ddos-attacks-in-q4-2018/89565/, European Application and Network Security Report 2016-17, https://www.globaldots.com/ddos-distributed-denial-of-service-explained\"\n            ->  directNetworkFlood,\n                reflectionAmplification\n\n        & directNetworkFlood //} \n            user info: \"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target.\"\n            ->  applicationExhaustionFlood,\n                service.serviceExhaustionFlood\n\n        & reflectionAmplification //}\n            user info: \"Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target.\"\n            ->  applicationExhaustionFlood,\n                service.serviceExhaustionFlood\n \n        & networkSniffing //(0.0044)*Exponential(144)]\n            user info: \"An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.vice.com/en_us/article/jpgmxp/how-to-go-from-0-to-sniffing-packets-in-10-minutes\"\n            ->  userAccount.userCredentials\n\n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            developer info: \"TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/\"\n            ->  attemptBinaryPadding,\n                steganography,\n                compileAfterDelivery,\n                indicatorRemovalFromTools   \n\n        | steganography\n            developer info: \"Binary probability dsitribution.\"\n            user info: \"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult.\"\n            ->  computer.router.internalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptPrivateKeys @hidden\n            ->  privateKeys\n\n        & privateKeys //(0.51)]\n            developer info: \"Sources for distribution results: \"\n            user info: \"Adversaries may gather private keys from compromised systems for use in authenticating to Remote Services like SSH or for use in decrypting other collected files such as email. Private keys should require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line.\"\n            ->  service.remoteServices,\n                privateKeysWithPassphrase\n\n        | privateKeysWithPassphrase\n            developer info: \"Binary probability distribution. Probability carried by privateKeys and TTC by bruteForce/inputCapture\"\n             ->  service.remoteServices\n\n        | resourceHijacking //} //(0.046)*Exponential(48)]\n            developer info: \"https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.ptsecurity.com/ww-en/analytics/cybersecurity-threatscape-2019-q1/, https://content.fireeye.com/apt-41/rpt-apt41, https://github.com/xmrig/xmrig, https://steemit.com/utopian-io/@afterglow/tutorial-how-to-install-configure-and-use-xmrig-cryptocurrency-miner-for-monero-on-your-computer\"\n            user info: \"Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.\"\n            ->  computer.unresponsive  \n\n        & communicationThroughRemovableMedia\n\n        | remoteSystemDiscovery\n            developer info: \"Binary probability distribution. https://capec.mitre.org/data/definitions/292.html \"\n            user info: \"Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.\"\n\n        & detailedRemoteSystemDiscovery\n            developer info: \"Binary probability distribution. https://capec.mitre.org/data/definitions/292.html \"\n            user info: \"Adversaries with admin rights may get better details of the hosts enumerated\"\n               \n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            ->  attemptDisableOrModifyTools,\n                disableOrModifySystemFirewall,\n                attemptIndicatorBlocking,\n                service.disableOrModifyCloudFirewall\n\n        | attemptDisableOrModifyTools @hidden\n            ->  disableOrModifyTools\n\n        & disableOrModifyTools //(0.23)*Exponential(111.55)]\n            developer info: \"Sources for probability distribution: https://redcanary.com/threat-detection-report/techniques/disabling-security-tools/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n            user info: \"Adversaries may disable security tools to avoid possible detection of their tools and activities.\"\n            ->  bypassAntivirus,\n                bypassFileMonitoring,\n                bypassHostIntrusionPrevention,\n                bypassLogAnalysis,\n                bypassSignatureBasedDetection\n\n        & disableOrModifySystemFirewall\n            user info: \"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage.\"\n            ->  computer.router.firewall.bypassFirewall,\n                computer.router.internalNetwork.c2Connected // modifying or disabling a system firewall may enable adversary C2 communications\n\n        | attemptIndicatorBlocking @hidden\n            ->  indicatorBlocking\n\n        & indicatorBlocking\n            user info: \"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.\"\n            ->  bypassAntivirus,\n                bypassHostIntrusionPrevention\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            ->  computer.router.internalNetwork.webShell\n\n        | softwareDiscovery //(0.83387)]\n            user info: \"Adversaries may attempt to get a listing of non-security related software that is installed on the system.\"\n            developer info: \"TTC assumed instant. Sources used for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://www.recordedfuture.com/mitre-attack-tactics/, https://attack.mitre.org/techniques/T1063/\"\n            ->  securitySoftwareDiscovery,\n                service.attemptExploitationForPrivilegeEscalation\n\n        & securitySoftwareDiscovery\n            user info: \"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools.\"\n            developer info: \"Binary probability distribution.\"\n            ->  service.attemptExploitationForDefenseEvasion // leads to exploitation for defense evasion attack\n\n        | systemAccess\n\n        & systemInformationDiscovery //(0.7133)]\n            user info: \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\"\n            developer info: \"TTC assumed instant. sources used for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://attack.mitre.org/techniques/T1082/\"\n            ->  processInjection,\n                systemChecks,\n                systemNetworkConfigurationDiscovery,\n                systemNetworkConnectionsDiscovery\n\n        | systemNetworkConnectionsDiscovery //(24)]\n            developer info: \"Sources for distribution results: https://alvinalexander.com/blog/post/linux-unix/linux-lsof-command/, https://attack.mitre.org/techniques/T1049/\"\n            user info: \"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\"\n\n        | systemOwnerOrUserDiscovery\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system.\"\n            ->  userAccount.userInformation\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n\n        | systemShutdownOrReboot //}\n            user info: \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems.\"\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n\n        | attemptProtocolTunneling @hidden\n            ->  protocolTunneling\n\n        & protocolTunneling\n            user info: \"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems.\"\n            ->  dynamicResolution, // DNS over HTTPS\n                proxy, // conceal C2 communications and infrastructure\n                computer.router.internalNetwork.attemptProtocolImpersonation // conceal C2 communications and infrastructure\n\n        | rootkit //(0.01255)]\n            user info: \"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.\"\n            developer info: \"Sources used for distribution: https://www.csoonline.com/article/3222066/how-to-detect-and-remove-a-rootkit-in-windows-10.html, https://investors.fireeye.com/static-files/56c2c6ec-3cdc-4fd2-967e-29205d2e982e, https://intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/\"\n            ->  modifyAPICalls, \n                bypassAntivirus,\n                bypassFileMonitoring,\n                bypassProcessWhitelisting,\n                bypassSignatureBasedDetection, \n                bypassHostIntrusionPrevention,\n                bypassSystemAccessControls,\n                bypassFileOrPathWhitelisting\n\n        & runtimeDataManipulation //}\n            developer info: \"Binary probability distribution.\"\n            user info: \"By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n\n        | attemptApplicationLayerProtocol @hidden\n            ->  applicationLayerProtocol    \n\n        & applicationLayerProtocol //(0.20)]\n            user info: \"Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.\"\n            developer info: \"Sources used for distribution result: https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB\"\n            ->  webProtocols,\n                fileTransferProtocols,\n                mailProtocols,\n                dNS\n\n        | attemptNonApplicationLayerProtocol @hidden\n            ->  nonApplicationLayerProtocol\n\n        & nonApplicationLayerProtocol\n            user info: \"Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | webProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | fileTransferProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | mailProtocols\n            user info: \"Adversaries may communicate using application layer protocols associated with electronic map delivery to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        & dNS\n            user info: \"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic.\"\n            ->  computer.router.internalNetwork.c2Connexion\n\n        | systemNetworkConfigurationDiscovery //(144)]\n            developer info: \"Sources for distribution results: https://attack.mitre.org/techniques/T1016/\"\n            user info: \"Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems.\"\n\n        & twoFactorAuthenticationInterception\n            user info: \"Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources.\"\n            ->  proxy\n\n        | modifyAPICalls                \n\n        | bypassAntivirus\n\n        | bypassAutorunsAnalysis\n\n        | bypassApplicationControl\n\n        | bypassApplicationWhitelisting\n\n        | bypassBinaryAnalysis\n\n        | bypassDefensiveNetworkServiceScanning\n\n        | bypassDigitalCertificateValidation   \n\n        | bypassEgressFiltering\n\n        | bypassFileMonitoring\n\n        | bypassFileOrPathWhitelisting\n\n        | bypassFileSystemAccessControls\n\n        | bypassHeuristicDetection\n\n        | bypassHostForensicAnalysis\n        \n        | bypassHostIntrusionPrevention\n\n        | bypassProcessWhitelisting\n\n        | bypassSystemAccessControls\n\n        | bypassLogAnalysis        \n        \n        | bypassSignatureBasedDetection\n\n        | bypassStaticFileAnalysis\n\n        | bypassUserModeSignatureValidation\n        \n        | passwordPolicyDiscovery\n            developer info: \"Binary probability distribution.\"\n            ->  bruteForceWithPasswordPolicy\n\n        & bruteForceWithPasswordPolicy //(0.83)*Exponential(0.3)]\n            developer info: \"Sources for distribution result: Filip Wilén and Andreas Westman. 'IoT-lang: Threat modeling for Internet of Things'. Unpublished paper. https://press.avast.com/83-of-americans-are-using-weak-passwords\"\n            ->  userAccount.userCredentials // the probability distribution should be so that it has higher chance of success than the bruteforce attack\n\n        | bruteForce //(0.42)*Exponential(0.3)]\n            user info: \"Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained.\"\n            developer info: \"Sources for distribution result: Filip Wilén and Andreas Westman. 'IoT-lang: Threat modeling for Internet of Things'. Unpublished paper.\"\n            ->  passwordGuessing,\n                attemptPasswordCracking,\n                passwordSpraying,\n                credentialStuffing,\n                attemptPrivateKeys\n\n        & passTheHash //(0.16)*Exponential(480)]\n            user info: \"This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\"\n            developer info: \"Sources used for distribution result: https://www.securityweek.com/pass-hash-remains-poorly-defended-threat-vector, https://www.youtube.com/watch?v=6em5TUASfHM, https://www.youtube.com/watch?v=bTYR_xYSDIk\"\n\n        & passTheTicket\n            developer info: \"Binary probability distribution\"\n            user info: \"Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password.\"\n\n        & passwordGuessing\n            user info: \"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.\"\n            ->  userAccount.userCredentials // https://us-cert.cisa.gov/ncas/alerts/TA18-086A\n\n        | attemptPasswordCracking @hidden\n            ->  passwordCracking\n\n        & passwordCracking\n            user info: \"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained.\"\n            ->  userAccount.userCredentials\n\n        & passwordSpraying\n            user info: \"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials.\"\n            ->  userAccount.userCredentials        \n\n        & credentialStuffing\n            user info: \"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap.\"\n            ->  userAccount.userCredentials\n\n        | permissionGroupsDiscovery //(0.0526)]\n            developer info: \"Sources for probability result: Red Canary ATT&CK technique percentages (Top 50), https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1069/\"\n            user info: \"Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\"\n            ->  localGroups,\n                domainGroups,\n                service.cloudGroups\n\n        & localGroups\n            user info: \"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.\" \n\n        & domainGroups\n            user info: \"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.\"\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n\n        | attemptAntivirusCheck @hidden\n            ->  antivirusCheck    \n\n        & antivirusCheck\n            ->  executeCode,\n                service.attemptExploitationForClientExecution\n\n        | persistence\n\n        | sSHCredentialInterception\n\n        & storedDataManipulation //}\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.\"    \n\n        & nonStandardPort //(0.1198)]\n            developer info: \"Sources used for distribution result: https://www.speedguide.net/ports_common.php\"\n            user info: \"Adversaries may communicate using a protocol and port paring that are typically not associated.\"\n            ->  computer.router.internalNetwork.c2Connected\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            ->  installRootCertificate\n\n        & installRootCertificate\n            user info: \"Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system.\"\n            ->  bypassDigitalCertificateValidation  \n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            ->  credentialsInFiles,\n                privateKeys,\n                service.cloudInstanceMetadataAPI\n\n        | attemptCredentialsInFiles @hidden\n            ->  credentialsInFiles\n\n        & credentialsInFiles //(0.0179)*Exponential(282)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://blog.talosintelligence.com/2018/07/smoking-guns-smoke-loader-learned-new.html#more, https://www.statista.com/statistics/751847/worldwide-seagate-western-digital-average-hard-drive-capacity/, https://www.hardware-revolution.com/how-much-storage-capacity-do-i-need-for-my-computer-2020/\"\n            ->  userAccount.userCredentials,\n                service.browser.browserBookmarkDiscovery // associated with logins cached by a browser provides additional targets \n\n        | validAccounts\n            developer info: \"Binary probability relation.\"\n            user info: \"Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access.\"\n            ->  defaultAccounts,\n                attemptDomainAccounts,\n                attemptLocalAccounts,\n                service.cloudAccounts\n\n        & defaultAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | attemptDomainAccounts @hidden\n            ->  domainAccounts\n\n        & domainAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | attemptLocalAccounts @hidden\n            ->  localAccounts\n\n        & localAccounts\n            user info: \"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.\"\n            ->  service.remoteServices,\n                service.attemptExternalRemoteServices, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.firewall.bypassFirewall,\n                bypassHostIntrusionPrevention,\n                bypassApplicationControl,\n                bypassSystemAccessControls,\n                bypassAntivirus\n\n        | virtualizationOrSandboxEvasion //(0.18)]\n            user info: \"Adversaries may check for the presence of a virtual machine environment (VME) or sandbox to avoid potential detection of tools and activities.\"\n            developer info: \"Sources for distribution result: http://www.sharetech-me.com/wp-content/uploads/2015/06/21347932_GA-internet-security-threat-report-volume-20-2015-social_v2.pdf, https://docs.broadcom.com/docs/threats-to-virtual-environments-14-en\"\n            ->  systemChecks,\n                userActivityBasedChecks,\n                timeBasedEvasion\n\n        | systemChecks\n            user info: \"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments.\"\n            ->  bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        | userActivityBasedChecks\n            user info: \"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments.\"\n            ->  bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        | timeBasedEvasion\n            user info: \"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments.\"\n            ->  scheduledTaskOrJob,\n                attemptMultiStageChannels,\n                bypassAntivirus,\n                bypassHostForensicAnalysis,    \n                bypassSignatureBasedDetection,  \n                bypassStaticFileAnalysis\n\n        & vNC\n            user info: \"Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC).\"\n\n        | fileDeletion //(0.1238)]\n            user info: \"Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process\"\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete\"\n            ->  bypassHostForensicAnalysis\n\n        | fileAndDirectoryDiscovery //(0.3197)]\n            developer info: \"Sources for distribution result: https://www.sans.org/cyber-security-summit/archives/file/summit_archive_1536351477.pdf, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, \"\n            user info: \"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.\"\n            ->  attemptAutomatedCollection\n\n        | diskWipe //}\n            user info: \"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.\"\n            ->  diskContentWipe,\n                diskStructureWipe\n\n        & diskContentWipe //} //(0.5433)*Exponential(126.437)]\n            user info: \"Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources.\"\n            developer info: \"Sources used for probability distribution: https://www.helpnetsecurity.com/2020/04/03/back-up-data/, https://threatpost.com/secrets-of-the-wiper-inside-the-worlds-most-destructive-malware/131836/, https://www.statista.com/statistics/795748/worldwide-seagate-average-hard-disk-drive-capacity/, https://hdd.userbenchmark.com/\"\n       \n        & diskStructureWipe //}\n            user info: \"Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources.\"\n\n        & remoteFileCopy //(0.29)]\n            user info: \"Files may be copied from one system to another to stage adversary tools or other files over the course of an operation.\"\n            developer info: \"TTC is very low (10-20 seconds) and is excluded. Sources used for probability result: https://redcanary.com/threat-detection-report/techniques/remote-file-copy/. For estimates on TTC please see remoteFileCopy.md in the Dropbox/MAL work/enterpriselang probability findings/folder.\"\n            ->  computer.user.attemptUserExecution, // leads to file execution attacks\n                attemptAutomatedCollection // combined with Remote File Copy attack\n        \n        | sensitiveDataCollected\n            ->  dataCompressed,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                dataSizedTransfer,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                automatedExfiltration,\n                dataEncrypted, \n                dataStaged    \n\n        | dataCollected\n            ->  dataCompressed,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                dataEncrypted,\n                dataStaged,\n                automatedExfiltration,\n                dataSizedTransfer\n\n        | dataEncrypted //(0.567)*Exponential(3.25)]\n            user info: \"Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender.\"\n            developer info: \"Sources for TTC too many to list, please see 'enterpriselang probabilities/dataEncrypted.md'. Other sources: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf \"\n            ->  computer.attemptExfiltrationOverPhysicalMedium,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                automatedExfiltration\n\n        | dataSizedTransfer\n            user info: \"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | dataStaged //(0.01025)]\n            developer info: \"Sources for distribution result: Red Canary top 50 att&ck techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/\"\n            user info: \"Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted.\"\n            ->  localDataStaging,\n                remoteDataStaging\n\n        | localDataStaging\n            user info: \"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration.\"\n            ->  archiveCollectedData, // Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data\n                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                dataCompressed,\n                dataEncrypted\n\n        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]\n            user info: \"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes.\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/7546509, https://threatpost.com/never-trust-a-found-usb-drive-black-hat-demo-shows-why/119653/\"\n\n        | remoteDataStaging\n            user info: \"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration.\"\n            ->  archiveCollectedData,\n                computer.attemptExfiltrationOverPhysicalMedium, // leads to exfiltration attacks\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                attemptExfiltrationOverAternativeProtocol,\n                scheduledExfiltration,\n                dataCompressed,\n                dataEncrypted\n     \n        | attemptDataDestruction @hidden\n            ->  dataDestruction\n                    \n        & dataDestruction //}\n            developer info: \"Binary probability distribution.\"\n            ->  inhibitSystemRecovery // disable or delete system recovery features to augment the effects\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            developer info: \"Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/\"\n            ->  validAccounts,\n                oSCredentialDumping,\n                inhibitSystemRecovery\n\n        & dataCompressed //(0.75)]\n            developer info: \"TTC assumed instant. For more info see enterpriselang probabilities/dataCompressed.md. Sources used for distribution: https://cloud.google.com/security/data-loss-prevention/preventing-data-exfiltration, https://targetedthreats.net/media/4-Glossary.pdf, https://www.wiley.com/en-se/The+Art+of+Memory+Forensics%3A+Detecting+Malware+and+Threats+in+Windows%2C+Linux%2C+and+Mac+Memory-p-9781118824993 pg. 560\"\n            ->  dataEncrypted,\n                automatedExfiltration,\n                computer.attemptExfiltrationOverPhysicalMedium,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel,\n                scheduledExfiltration\n\n        & inhibitSystemRecovery //}\n            user info: \"Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.\"    \n            ->  systemShutdownOrReboot\n\n        | screenCapture\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.\" \n            ->  dataCollected\n\n        | scheduledExfiltration //(0.92)*Exponential(0.384)]\n            developer info: \"Sources for distribution results: https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf\"\n            ->  computer.router.internalNetwork.dataExfiltration         \n    \n        | attemptExfiltrationOverAternativeProtocol @hidden\n            ->  exfiltrationOverAternativeProtocol\n\n        & exfiltrationOverAternativeProtocol //(0.79224)*Exponential(1878)]\n            developer info: \"Sources for distribution results: https://repo.zenk-security.com/Techniques%20d.attaques%20%20.%20%20Failles/Exfiltration%20Techniques%20-%20An%20examination%20And%20Emulation.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf\"\n            user info: \"https://attack.mitre.org/techniques/T1048/\"\n            ->  exfiltrationOverAsymmetricEncryptedNonC2Protocol,\n                exfiltrationOverSymmetricEncryptedNonC2Protocol,\n                exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol\n\n        | exfiltrationOverAsymmetricEncryptedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | exfiltrationOverSymmetricEncryptedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.\"\n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | exfiltrationOverUnencryptedOrObfuscatedNonC2Protocol\n            developer info: \"Binary probability distribution. Probability carried by exfiltrationOverAternativeProtocol \"\n            user info: \"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\"  \n            ->  computer.router.internalNetwork.dataExfiltration\n\n        | dataFromInformationRepositories //(9.952)]\n            developer info: \"Sources for distribution results: See automatedCollection.md and dataFromInformationRepositories.md\"\n            user info: \"Adversaries may leverage information repositories to mine valuable information.\"\n            ->  confluence,\n                sharepoint\n\n        & confluence //(0.74)]\n            developer info: \"Sources for distribution results: https://www.quora.com/Whats-the-number-of-companies-actively-using-SharePoint-worldwide#:~:text=Microsoft%20is%20adding%20approximately%2020%2C000,on%20it%20for%20document%20management. and automatedCollection.md results\"\n            user info: \"Adversaries may leverage Confluence repositories to mine valuable information.\"\n            ->  service.informationRepositories\n   \n        & sharepoint //(0.71)]\n            developer info: \"Sources for distribution results: https://www.atlassian.com/customers and automatedCollection.md results\"\n            user info: \"Adversaries may leverage the SharePoint repository as a source to mine valuable information.\"\n            ->  service.informationRepositories\n\n        & windowsService\n            user info: \"Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry.\"\n\n        | attemptAutomatedCollection @hidden\n            ->  automatedCollection\n\n        & automatedCollection //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results available in the ../entrepriselang_probabilities/automatedCollection.md file\"\n            user info: \"Once established within a system or network, an adversary may use automated techniques for collecting internal data.\"\n            ->  dataCollected, \n                sensitiveDataCollected\n\n        | automatedExfiltration\n            developer info: \"Binary probability distribution.\"\n            ->  attemptExfiltrationOverAternativeProtocol,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel\n\n        & networkServiceScan //(72)]\n            developer info: \"Sources for distribution results: https://www.acunetix.com/blog/docs/how-long-does-a-scan-take-to-complete/#:~:text=The%20duration%20of%20a%20scan,between%202%20and%204%20hours.\"\n            user info: \"Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.\"\n            ->  service.attemptExploitationOfRemoteServices\n\n        # antivirus //(0.53)]\n            user info: \"https://attack.mitre.org/mitigations/M1049/\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average\"\n            ->  antivirusCheck,\n                commandAndScriptingInterpreter,\n                visualBasic,\n                python,\n                service.browser.spearphishingAttachment,\n                service.browser.spearphishingLink,\n                service.spearphishingViaService   \n\n        # restrictFileAndDirectoryPermissions \n            user info: \"https://attack.mitre.org/mitigations/M1022/\"\n            ->  credentialsInFiles,\n                disableOrModifyTools,\n                disableOrModifySystemFirewall,\n                indicatorRemovalOnHost,\n                matchLegitimateNameOrLocation,\n                privateKeys,\n                renameSystemUtilities,\n                runtimeDataManipulation,\n                storedDataManipulation,\n                visualBasic,\n                javaScriptOrJScript,\n                computer.router.externalNetwork.dataFromCloudStorageObject,\n                computer.router.internalNetwork.taintSharedContent\n\n        # restrictRegistryPermissions\n            user info: \"https://attack.mitre.org/mitigations/M1024/\"\n            ->  disableOrModifyTools,\n                disableOrModifySystemFirewall\n\n        # accountUsePolicies // Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.\n            user info: \"https://attack.mitre.org/mitigations/M1036/\" \n            developer info: \"Binary probability relation.\"\n            ->  passwordGuessing,\n                passwordSpraying,\n                credentialStuffing\n\n        # behaviorPreventionOnEndpoint\n            user info: \"https://attack.mitre.org/mitigations/M1040/\"\n\n        # bootIntegrity \n            user info: \"https://attack.mitre.org/mitigations/M1046/\"\n            ->  firmwareCorruption,\n                service.compromiseHardwareSupplyChain\n \n        # dataBackup //(0.4567)]\n            user info: \"https://attack.mitre.org/mitigations/M1053/\"\n            developer info: \"Source for distribution results: https://www.helpnetsecurity.com/2020/04/03/back-up-data/\"\n            ->  dataDestruction,\n                dataEncryptedForImpact,\n                inhibitSystemRecovery,\n                diskContentWipe,\n                diskStructureWipe,\n                computer.router.internalNetwork.internalDefacement,\n                computer.router.externalNetwork.externalDefacement\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            user info: \"https://attack.mitre.org/mitigations/M1032/\" \n            ->  credentialStuffing,\n                localAccount,\n                domainAccount,\n                domainAccounts,\n                passwordGuessing,\n                passwordCracking,\n                passwordSpraying,\n                networkSniffing\n\n        # passwordPolicies \n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n            ->  passwordGuessing,\n                passwordCracking,\n                passwordSpraying,\n                credentialStuffing,\n                credentialsInFiles,\n                defaultAccounts,\n                localAccounts,\n                privateKeys\n\n        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.\n            user info: \"https://attack.mitre.org/mitigations/M1048/\"\n            ->  service.browser.driveByCompromise\n\n        # doNotMitigate // Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised.\n            user info: \"https://attack.mitre.org/mitigations/M1055/\"\n            ->  environmentalKeying                \n\n        # disableOrRemoveFeatureOrProgram \n            user info: \"https://attack.mitre.org/techniques/T1064/\"\n            ->  javaScriptOrJScript,\n                visualBasic,\n                communicationThroughRemovableMedia,\n                commandAndScriptingInterpreter,\n                exfiltrationOverBluetooth,\n                manInTheMiddle,\n                runVirtualInstance,\n                vNC\n\n        # activeDirectoryConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1015/\"\n            ->  credentialsInFiles\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            ->  archiveViaUtility,\n                confluence,\n                sharepoint,\n                credentialsInFiles,\n                computer.router.externalNetwork.dataFromCloudStorageObject,\n                privateKeys,\n                python,\n                vNC\n\n        # applicationDeveloperGuidance\n            user info: \"https://attack.mitre.org/mitigations/M1013/\"\n\n        # codeSigning //(0.28)]\n            user info: \"https://attack.mitre.org/mitigations/M1045/\" \n            ->  commandAndScriptingInterpreter,\n                matchLegitimateNameOrLocation,\n                service.applicationDeploymentSoftware,\n                service.implantContainerImage\n\n        # limitHardwareInstallation\n            user info: \"https://attack.mitre.org/mitigations/M1034/\"\n            developer info: \"Binary probability relation.\"\n            ->  computer.hardwareAdditions,\n                computer.exfiltrationOverPhysicalMedium     \n\n        # operatingSystemConfiguration \n            user info: \"https://attack.mitre.org/mitigations/M1028/\"\n            ->  communicationThroughRemovableMedia,\n                domainDiscovery,\n                exfiltrationOverOtherNetworkMedium,\n                inhibitSystemRecovery,\n                installRootCertificate,\n                localAccount,\n                domainAccount\n\n        # softwareConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1054/\"\n            ->  installRootCertificate,\n                service.browser.stealWebSessionCookie,\n                service.browser.webSessionCookie    \n\n        # executionPrevention // Block execution of code on a system through application whitelisting, blacklisting, and/or script blocking.            \n            user info: \"https://attack.mitre.org/mitigations/M1038/\"\n            ->  applicationWindowDiscovery,\n                commandAndScriptingInterpreter,\n                binaryPadding,\n                service.browser.browserExtensions,\n                computer.collectAudio,\n                dataCompressed,\n                detailedRemoteSystemDiscovery,\n                domainDiscovery,\n                javaScriptOrJScript,\n                matchLegitimateNameOrLocation,\n                python,\n                runVirtualInstance, \n                systemInformationDiscovery,\n                visualBasic,\n                userAccount.userExecution,\n                userAccount.user.maliciousFile\n             \n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            ->  commandAndScriptingInterpreter,\n                domainAccounts,\n                localAccounts,\n                webPortalCapture\n\n        # encryptSensitiveInformation \n            user info: \"https://attack.mitre.org/mitigations/M1041/\"\n            ->  indicatorRemovalOnHost,\n                networkSniffing,\n                privateKeys,\n                storedDataManipulation,\n                computer.router.externalNetwork.dataFromCloudStorageObject  \n\n        # remoteDataStorage \n            user info: \"https://attack.mitre.org/mitigations/M1029/\"\n            ->  automatedCollection,\n                indicatorRemovalOnHost,\n                storedDataManipulation,\n                service.useThirdpartySoftware              \n\n        # limitSoftwareInstallation\n            user info: \"https://attack.mitre.org/mitigations/M1033/\"\n            ->  python,\n                vNC,\n                service.browser.browserExtensions\n\n        # updateSoftware //(0.567125)]\n            user info: \"https://attack.mitre.org/mitigations/M1051/\"\n            ->  firmwareCorruption\n\n        # userAccountControl\n            user info: \"https://attack.mitre.org/mitigations/M1052/\"\n            ->  service.trustedRelationship\n\n        # exploitProtection\n            user info: \"https://attack.mitre.org/mitigations/M1050/\"\n    }\n    \n    asset Windows extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptBypassUserAccessControl\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            developer info: \"Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A\" \n            +>  exchangeEmailDelegatePermissions\n\n        & at\n            user info: \"Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  attemptScheduledTask, // at can be used to schedule a task on a system\n                executeCode\n\n        | attemptAppCertDLLs @hidden\n            +>  appCertDLLs \n            \n        & appCertDLLs\n            developer info: \"Binaries probability distribution. Source for distribution results : Process Injection result and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\"\n            +>  processInjection\n\n        | attemptAppInitDLLs @hidden\n            ->  appInitDLLs\n            \n        & appInitDLLs //(0.79)*Exponential(127.1)]\n            developer info: \"Sources for distribution results: Work on processInjection and https://www.spiceworks.com/marketing/network-security/pdf-report/\"\n            +>  persistence\n\n        | attemptAccessibilityFeatures @hidden\n            +>  accessibilityFeatures\n\n        & accessibilityFeatures\n            user info: \"This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system.\"\n            developer info: \"Binary probability distribution.\"\n            +>  persistence\n\n        | attemptBITSJobs @hidden\n            +>  bITSJobs\n\n        & bITSJobs //(0.264)]\n            user info: \"Adversaries may abuse BITS to download, execute, and even clean up after running malicious code.\"\n            developer info: \"TTC assumed instant. Sources used for probability distribution: https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://en.wikipedia.org/wiki/Windows_Desktop_Gadgets, https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html\" \n            +>  executeCode,\n                persistence,\n                attemptExfiltrationOverAternativeProtocol // BITS upload functionalities can be used to perform Exfiltration Over Alternative Protocol\n\n        | bootOrLogonAutostartExecution\n            +>  registryRunKeysOrStartupFolder,\n                authenticationPackage,\n                attemptTimeProviders,\n                attemptWinlogonHelperDLL,\n                attemptLSASSDriver,\n                attemptShortcutModification,\n                securitySupportProvider,\n                portMonitors\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                networkLogonScripts\n\n        | networkLogonScripts\n            user info: \"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence.\"\n            ->  computer.router.internalNetwork.persistence\n\n        & clearWindowsEventLogs\n            user info: \"Adversaries may clear Windows Event Logs to hide the activity of an intrusion.\"\n            +>  attemptPowerShell, // these logs may be cleared through PowerShell\n                bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassLogAnalysis\n\n        & cmstp\n            user info: \"Adversaries may abuse CMSTP to proxy execution of malicious code.\"\n            developer info: \"Binary probability distribution.\"\n            +>  attemptBypassUserAccessControl, // leads to Bypass User Account Control attack\n                codeProxyExecution,\n                bypassAntivirus\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n            developer info: \"Sources for distribution results:https://www.venafi.com/blog/study-how-well-are-you-protecting-code-signing-certificates#:~:text=The%20study%20found%20that%20although,process%20for%20code%20signing%20certificates,https://duo.com/decipher/attackers-are-signing-malware-with-valid-certificates,https://cqureacademy.com/blog/windows-internals/code-signing\"\n            ->  attemptBypassUserAccessControl\n\n        | collectHashInformation\n            +>  attemptPassTheHash, // leads to Pass the Hash attack\n                networkSniffing // leads to Network Sniffing attack\n\n        & commandAndScriptingInterpreter //(0.24)]\n            developer info: \"Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/\"\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  windowsCommandShell,\n                attemptPowerShell\n\n        | attemptComponentObjectModel @hidden\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  componentObjectModel\n\n        & componentObjectModel //(96)]\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM.\"\n            ->  executeCode\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptWindowsService\n\n        | attemptDistributedComponentObjectModel @hidden\n            +>  distributedComponentObjectModel\n\n        & distributedComponentObjectModel //(96)]\n            user info: \"Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM).\"\n            +>  computer.router.internalNetwork.remoteCOMExecution\n\n        | attemptControlPanel @hidden\n            +>  controlPanel\n\n        & controlPanel //(0.00006)]\n            user info: \"Adversaries may abuse control.exe to proxy execution of malicious payloads.\"\n            developer info: \"TTC assumed instant, see mitreattacklang/enterpriselang probabilities/controlPanelItems.md for details. Sources used for probability distribution result: https://attack.mitre.org/software/S0172/, https://threatvector.cylance.com/en_us/home/reaver-mapping-connections-between-disparate-chinese-apt-groups.html, https://nvd.nist.gov/vuln/detail/CVE-2017-11882#vulnConfigurationsArea, https://unit42.paloaltonetworks.com/unit42-new-malware-with-ties-to-sunorcal-discovered/, https://community.spiceworks.com/software/articles/2873-data-snapshot-the-state-of-productivity-suites-in-the-workplace\"\n            +>  executeCode,\n                bypassApplicationControl,\n                service.browser.phishing // malicious Control Panel items can be delivered via Phishing campaigns\n\n        | componentObjectModelHijacking\n            user info: \"Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead.\"\n            +>  processInjection,\n                persistence            \n\n        | componentFirmware //(0.0000934)*Exponential(360)]\n            user info: \"Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS.\"\n            developer info: \"https://attack.mitre.org/groups/, https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf, https://eclypsium.com/2019/12/20/anatomy-of-a-firmware-attack/, https://www.youtube.com/watch?v=loBX_vEXxVA&feature=youtu.be\"       \n            +>  bypassFileMonitoring,\n                bypassHostIntrusionPrevention, \n                bypassAntivirus         \n\n        & compiledHTMLFile //(0.93)*Exponential(1)]\n            user info: \"Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution.\"\n            developer info: \"Sources for distribution results : https://blog.rootshell.be/2017/12/19/malware-delivered-via-compiled-html-help-file/\"\n            +>  computer.user.attemptUserExecution, // leads to User Execution attack\n                bypassApplicationWhitelisting,\n                bypassDigitalCertificateValidation   \n\n        | attemptCOR_PROFILER @hidden\n            ->  cOR_PROFILER\n\n        & cOR_PROFILER\n            user info: \"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\"\n            +>  persistence,\n                attemptBypassUserAccessControl, // to elevate privileges \n                attemptComponentObjectModel,\n                impareDefenses\n\n        | credentialAPIHooking\n            developer info:\"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"  \n            user info: \"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials.\"\n            +>  userAccount.userCredentials\n\n        & credentialsInRegistry //(0.02055)*Exponential(2618)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/techniques/T1552/002/\"\n            +>  userAccount.userCredentials\n\n        | dCShadow\n            developer info: \"Binary probability distribution.\"\n            user info: \"This technique may bypass system logging and security monitors such as security information and event management (SIEM) products.\"\n            +>  attemptSIDHistoryInjection,\n                bypassLogAnalysis\n\n        & dCSync\n            user info: \"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.\"\n            +>  attemptGoldenTicket, // hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket\n                attemptSilverTicket,\n                accountManipulation // hashes can then be used to change an account's password\n\n        & dynamicLinkLibraryInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & portableExecutableInjection\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadExecutionHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.\" \n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        & asynchronousProcedureCall\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        & threadLocalStorage\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | deobfuscateOrDecodeFilesOrInformation \n            +>  bypassAntivirus,\n                bypassHostIntrusionPrevention,\n                bypassSignatureBasedDetection,\n                computer.router.externalNetwork.bypassNetworkIntrusionDetection,\n                computer.router.internalNetwork.bypassNetworkIntrusionDetection     \n\n        & disableWindowsEventLogging\n            user info: \"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits.\"\n            +>  bypassLogAnalysis\n\n        | attemptDLLSearchOrderHijacking @hidden\n            ->  dLLSearchOrderHijacking \n\n        & dLLSearchOrderHijacking //(0.16)]\n            user info: \"Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence.\"\n            developer info: \"TTC is extremely low (< 0.00001 seconds) and is excluded. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/\"\n            +>  bypassProcessWhitelisting,\n                attemptBypassUserAccessControl,\n                userAccount.userRights,\n                attemptLSASSDriver,\n                service.attemptExploitationForPrivilegeEscalation                   \n               \n        | dLLSideLoading //(0.0755)]\n            developer info: \"Sources used for probability result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf\"\n            ->  bypassProcessWhitelisting,\n                bypassAntivirus,\n                attemptLSASSDriver\n\n        & domainControllerAuthentication\n            user info: \"Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts.\"\n\n        | attemptLSASSDriver @hidden \n            +>  lSASSDriver\n\n        & lSASSDriver //(0.5)*Exponential(0.1)]\n            user info: \"Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.\"\n            +>  executeCode,\n                persistence\n\n        & cachedDomainCredentials\n            user info: \"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\"\n            +>  collectHashInformation,\n                attemptDomainAccounts\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  changeDefaultFileAssociation,\n                screensaver,\n                attemptWindowsManagementInstrumentationEventSubscription,\n                netshHelperDLL,\n                attemptAccessibilityFeatures,\n                attemptAppCertDLLs,\n                attemptAppInitDLLs,\n                attemptApplicationShimming,\n                imageFileExecutionOptionsInjection,\n                powerShellUserProfile,\n                powerShellAdminProfile,             \n                componentObjectModelHijacking\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  ntfsFileAttributes,\n                attemptHiddenWindow\n\n        & lSASecrets\n            user info: \"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.\"\n            +>  userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  attemptCOR_PROFILER,\n                attemptDLLSearchOrderHijacking,\n                dLLSideLoading,\n                executableInstallerFilePermissionsWeakness,\n                pathInterception,\n                attemptServicesFilePermissionsWeakness,\n                servicesRegistryPermissionsWeakness\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  disableWindowsEventLogging\n\n        | indicatorRemovalOnHost //(0.04)]\n            developer info: \"Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets\"\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearWindowsEventLogs,\n                networkShareConnectionRemoval \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            developer info: \"Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf\"\n            +>  credentialAPIHooking,\n                attemptGUIInputCapture\n\n        & lateralToolTransfer\n            user info: \"Adversaries may transfer tools or other files between systems in a compromised environment.\"\n            +>  attemptWindowsAdminShares, // copy files laterally between internal victim systems using inherent file sharing protocols\n                attemptRemoteDesktopProtocol\n\n        & manInTheMiddle //(0.35)*Exponential(1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/94.html, https://www.csoonline.com/article/3340117/what-is-a-man-in-the-middle-attack-how-mitm-attacks-work-and-how-to-prevent-them.html#:~:text=Though%20not%20as%20common%20as,are%20difficult%20to%20come%20by.\"\n            user info: \"Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\"\n            +>  attemptLLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            developer info: \"TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker\"\n            +>  invalidCodeSignature,\n                masqueradeTaskOrService\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  domainControllerAuthentication,\n                attemptPasswordFilterDLL\n\n        & mshta //(0.3329)*Exponential(491)]\n            user info: \"Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting.\"\n            developer info: \"Sources used for distribution: https://lolbas-project.github.io/lolbas/Binaries/Mshta/, https://netmarketshare.com/operating-system-market-share.aspx?, https://redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/\"\n            +>  fileProxyExecution,\n                bypassDigitalCertificateValidation,\n                bypassApplicationControl\n\n        & msiexec\n            user info: \"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution     \n\n        & odbcconf\n            user info: \"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads.\"\n            +>  codeProxyExecution\n\n        & exchangeEmailDelegatePermissions\n            user info: \"Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account.\"\n            +>  internalSpearphishing\n     \n        | executeCode \n            +>  componentFirmware,\n                service.attemptExploitationForPrivilegeEscalation,\n                computer.infectedWindowsComputer         \n\n        | attemptExecutionThroughAPI @hidden\n            +>  executionThroughAPI       \n\n        & executionThroughAPI //(0.56)]\n            user info: \"Adversary tools may directly use the Windows application programming interface (API) to execute binaries.\" \n            developer info: \"TTC assumed instant. Sources for probability distribution: https://krisk.io/post/sok-attack-securecomm19.pdf, https://www.recordedfuture.com/mitre-attack-tactics/, https://attack.mitre.org/techniques/T1106/\"\n            ->  executeCode,\n                processInjection\n\n        & executionThroughModuleLoad //(0.93)*Exponential(1)]\n            developer info: \"Sources for distribution results: Results on spearphishing and https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=bc9e2e2e-028c-4ba1-863f-72a4700dbdc2&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments, https://www.cybereason.com/blog/information-stealing-malware-targeting-brazil-full-research\"\n            user info: \"Adversaries can use this functionality as a way to execute arbitrary code on a system.\"\n            +>  executeCode    \n        \n        & extraWindowMemoryInjection\n            developer info:\"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n            +>  windowsFileAndDirectoryPermissionsModification\n\n        & windowsFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptAccessibilityFeatures, // leads to Accessibility Features attack\n                bootOrLogonInitializationScripts, //leads to Logon Scripts attack\n                hijackExecutionFlow\n\n        | fileSystemLogicalOffsets\n            user info: \"Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools.\"\n            +>  bypassFileMonitoring,\n                bypassFileSystemAccessControls\n\n        | attemptFileSystemPermissionsWeakness @hidden\n            ->  fileSystemPermissionsWeakness\n\n        & fileSystemPermissionsWeakness //(1)]\n            developer info: \"Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html\"\n            user info: \"Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level.\"\n            ->  executeCode,\n                persistence,\n                attemptDLLSearchOrderHijacking,\n                attemptBypassUserAccessControl\n\n        & forcedAuthentication\n            user info: \"Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication.\"\n            +>  templateInjection,\n                bruteForce\n\n        & groupPolicyModification\n            user info: \"Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more.\"\n            +>  attemptScheduledTask, // leads to Scheduled Task attack\n                attemptDisableOrModifyTools, // leads to Disabling Security Tools attack\n                remoteFileCopy, // leads to Remote File Copy attack\n                attemptServiceExecution, // leads to Service Execution attack\n                adminAccount.attemptCreateAccount,\n                bypassSystemAccessControls,\n                bypassFileSystemAccessControls\n\n        & groupPolicyPreferences\n            user info: \"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP).\"\n            +>  userAccount.userCredentials\n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  bypassUserAccessControl,\n                userAccount.userCredentials,\n                privateKeysWithPassphrase\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n            developer info: \"Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download\"\n\n        | imageFileExecutionOptionsInjection\n            developer info: \"Binary probability distribution. Soucres for distribution results: process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer.\"\n            +>  bypassAutorunsAnalysis,\n                processInjection\n\n        | indirectCommandExecution\n            user info: \"Adversaries may abuse the Windows system features for Defense Evasion.\"\n            +>  executeCode,\n                bypassStaticFileAnalysis,\n                bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting\n\n        & installUtil\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility.\"\n            +>  codeProxyExecution  \n\n        | interProcessCommunication\n            user info: \"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution.\"\n            ->  attemptComponentObjectModel,\n                attemptDynamicDataExchange\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        | serviceExhaustionFlood //}\n            user info: \"Adversaries may target the different network services provided by systems to conduct a DoS.\"\n            +>  attemptServiceStop\n\n        | stealOrForgeKerberosTickets\n            developer info: \"Binary probability dsitribution. Distribution carried by oSCredentialDumping\"\n            user info: \"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket.\"\n            ->  goldenTicket,\n                silverTicket,\n                kerberoasting\n\n        | attemptGoldenTicket @hidden\n            ->  goldenTicket\n\n        & goldenTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.\"\n            +>  attemptPassTheTicket,\n                dCShadow\n\n        | attemptSilverTicket @hidden\n            ->  silverTicket\n\n        & silverTicket\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets.\"\n            +>  attemptPassTheTicket\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            +>  attemptHiddenWindow\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            +>  attemptHiddenWindow\n\n        & kerberoasting\n            developer info: \"Binary probability dsitribution. carried by oSCredentialDumping\"\n            user info: \"Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).\"\n            ->  attemptSilverTicket,\n                bruteForce,\n                persistence,\n                service.attemptExploitationForPrivilegeEscalation,\n                validAccounts\n\n        | attemptLLMNR_NBT_NS_PoisoningAndSMBRelay @hidden\n            ->  lLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        & lLMNR_NBT_NS_PoisoningAndSMBRelay\n            developer info: \"Binary probability distribution. Probability carried by MiTM technique.\"\n            user info: \"AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords.\"\n            +>  networkSniffing,\n                bruteForce\n\n        | attemptLSASSMemory @hidden\n            +>  lSASSMemory\n\n        & lSASSMemory\n            user info: \"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).\"\n            +>  useAlternateAuthenticationMaterial // harvest credential materials for Lateral Movement\n\n        | useAlternateAuthenticationMaterial\n            user info: \"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\"\n            ->  passTheHash,\n                passTheTicket,\n                service.browser.webSessionCookie,\n                service.applicationAccessToken\n\n        & manInTheBrowser\n            user info: \"Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques.\"\n            +>  service.browser.driveByCompromise\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n            +>  bypassHostIntrusionPrevention\n\n        & modifyRegistry //(0.0661)]\n            user info: \"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.usenix.org/legacyurl/view-current-malware-behaviors, https://krisk.io/post/sok-attack-securecomm19.pdf, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732643(v=ws.11)?redirectedfrom=MSDN\"\n            +>  persistence,\n                securitySupportProvider,\n                bypassHostForensicAnalysis\n\n        | netshHelperDLL\n            user info: \"Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner.\"\n            +>  persistence\n\n        | networkShareConnectionRemoval\n            user info: \"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation.\"\n            +>  bypassHostForensicAnalysis\n\n        & nTDS\n            user info: \"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights.\"\n            +>  collectHashInformation\n\n        | attemptWindowsService @hidden\n            ->  windowsService\n\n        & windowsService\n            user info: \"Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry.\"\n            +>  service.attemptExploitationForPrivilegeEscalation, // an adversary may also use a service to escalate privileges from administrator to SYSTEM\n                masquerading, // benign software with Masquerading\n                persistence\n\n        & ntfsFileAttributes //(0.00702)]\n            developer info: \"Sources for distribution result: Red Canary ATT&CK technique percentages (private google sheets document), https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://cdn2.hubspot.net/hubfs/3354902/Cybereason%20Labs%20Analysis%20Operation%20Cobalt%20Kitty.pdf, https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/\"\n            user info: \"Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files, to evade some defenses, such as static indicator scanning tools and anti-virus.\"\n            ->  bypassSignatureBasedDetection,\n                bypassHostForensicAnalysis,\n                bypassAntivirus\n\n        | officeApplicationStartup\n            user info: \"There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started.\"\n            ->  service.officeTemplateMacros,\n                service.officeTest,\n                service.outlookForms,\n                service.outlookHomePage,\n                service.outlookRules,\n                service.addIns\n\n        | attemptPasswordFilterDLL @hidden\n            +>  passwordFilterDLL    \n\n        & passwordFilterDLL\n            user info: \"Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains.\"\n            +>  adminAccount.adminCredentials\n\n        | attemptPassTheHash @hidden\n            ->  passTheHash\n\n        & passTheHash //(0.16)*Exponential(480)]\n            user info: \"This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\"\n            developer info: \"Sources used for distribution result: https://www.securityweek.com/pass-hash-remains-poorly-defended-threat-vector, https://www.youtube.com/watch?v=6em5TUASfHM, https://www.youtube.com/watch?v=bTYR_xYSDIk\"\n            +>  computer.router.internalNetwork.remoteSystemsConnection, // PtH may be used to perform actions on local or remote systems\n                bypassSystemAccessControls\n\n        | attemptPassTheTicket @hidden\n            ->  passTheTicket\n\n        & passTheTicket\n            developer info: \"Binary probability distribution\"\n            user info: \"Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password.\"\n            +>  computer.router.internalNetwork.remoteAccess // gain remote access \n\n        | parentPIDSpoofing\n            user info: \"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.\"\n            +>  bypassHostForensicAnalysis,\n                bypassHeuristicDetection,\n                service.browser.attemptSpearphishingAttachment,\n                service.attemptExploitationForPrivilegeEscalation,\n                commandAndScriptingInterpreter\n\n        & executableInstallerFilePermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer.\"\n            +>  attemptDLLSearchOrderHijacking,\n                attemptBypassUserAccessControl\n\n        & pathInterception //(0.0352)]\n            user info: \"Adversaries may take advantage of performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking.\"\n            developer info: \"Sources used for distribution result: https://content.fireeye.com/m-trends/rpt-m-trends-2020, http://www.hexacorn.com/blog/2016/03/26/beyond-good-ol-run-key-part-37/\"\n            ->  pathInterceptionByPATHEnvironmentVariable,\n                pathInterceptionBySearchOrderHijacking,\n                pathInterceptionByUnquotedPath\n\n        | pathInterceptionByPATHEnvironmentVariable\n            user info: \"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries.\"\n\n        & pathInterceptionBySearchOrderHijacking\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs.\"\n            +>  attemptDLLSearchOrderHijacking        \n\n        | pathInterceptionByUnquotedPath\n            user info: \"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.\"\n            ->  executeCode,\n                persistence\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n            +>  attemptSystemFirmware,\n                componentFirmware,\n                bootkit\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  attemptScheduledTask,\n                at\n\n        & securityAccountManager\n            user info: \"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.\" \n            +>  collectHashInformation,\n                attemptLocalAccounts\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            +>  attemptSQLStoredProcedures,\n                attemptTransportAgent\n\n        | attemptServicesFilePermissionsWeakness @hidden\n            +>  servicesFilePermissionsWeakness\n\n        & servicesFilePermissionsWeakness //(1)]\n            developer info: \"Sources for distribution result: https://www.csoonline.com/article/3390663/check-your-access-control-permissions-before-hackers-do.html, https://www.varonis.com/blog/data-breach-statistics/,https://capec.mitre.org/data/definitions/17.html\"\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the binaries used by services.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & servicesRegistryPermissionsWeakness\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptSQLStoredProcedures @hidden\n            +>  sQLStoredProcedures\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse Microsoft transport agents to establish persistent access to systems.\"\n            +>  persistence\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            +>  codeSigningCertificate,\n                sIPAndTrustProviderHijacking\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n            +>  serviceExecution\n\n        | attemptTransportAgent @hidden\n            +>  transportAgent\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        | attemptPowerShell @hidden\n            user info: \"Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.\"\n            +>  powerShell,\n                windowsRemoteManagement, // call with the winrm\n                computer.user.attemptUserExecution,\n                commandAndScriptingInterpreter\n\n        & powerShell //(0.55)]\n            user info: \"Administrator permissions are required to use PowerShell to connect to remote systems.\"    \n            developer info: \"The process takes a few seconds to complete, so the TTC has excluded. It would be //(28800)] if included. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/powershell/\"  \n            +>  computer.router.internalNetwork.remoteSystemsConnection,\n                computer.router.externalNetwork.attemptTransmittedDataManipulation,\n                attemptIndicatorBlocking, // tampering settings that control the collection and flow of event telemetry\n                attemptGUIInputCapture, // collect credentials\n                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment\n                systemChecks,\n                persistence,\n                attemptHiddenWindow // make windows hidden\n\n        | attemptPowerShellUserProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n            ->  powerShellUserProfile\n\n        & powerShellUserProfile //(2)]\n            developer info: \"sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it\"\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n            +>  persistence\n\n        | attemptPowerShellAdminProfile @hidden\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"\n            +>  powerShellAdminProfile\n        \n        & powerShellAdminProfile //(0.5)*Exponential(2)]\n            developer info: \"sources for distribution results : https://www.quora.com/ITs-how-often-do-you-use-PowerShell-And-what-do-you-think-about-it\"\n            user info: \"Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles.\"   \n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & processDoppelganging\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection.\"\n            +>  bypassAntivirus,\n                bypassApplicationControl    \n\n        & processHollowing //(1440)]\n            developer info: \"Sources for distribution result: https://redcanary.com/threat-detection-report/techniques/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://adalogics.com/blog/the-state-of-advanced-code-injections, https://www.youtube.com/watch?v=G6AoZ5F4CH8, https://www.youtube.com/watch?v=k2pLF56gXXw&feature=youtu.be&t=106\"\n            user info: \"Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis.\"\n            +>  bypassAntivirus,\n                bypassApplicationControl\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n            +>  dynamicLinkLibraryInjection,\n                portableExecutableInjection,\n                threadExecutionHijacking,\n                asynchronousProcedureCall,\n                threadLocalStorage,\n                extraWindowMemoryInjection,\n                processHollowing,\n                processDoppelganging\n\n        | codeProxyExecution\n            ->  bypassApplicationControl,\n                bypassDigitalCertificateValidation\n\n        | fileProxyExecution\n            ->  bypassApplicationControl,\n                bypassDigitalCertificateValidation\n\n        & rDPHijacking\n            user info: \"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment.\"\n            +>  userAccount.userCredentials,\n                remoteSystemDiscovery\n\n        | rDPSessionHijacking\n            user info: \"Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session.\"\n\n        | registryRunKeysOrStartupFolder //(0.17125)]\n            user info: \"Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.\"\n            developer info: \"Sources used for distribution result: https://dsimg.ubm-us.net/envelope/395823/551993/Fileless%20Attack%20Survival%20Guide.pdf, https://content.carbonblack.com/c/vmwcb-threat-report-?x=f_lWMB\"\n            +>  masquerading, // leads to Masquerading attack\n                service.remoteAccessSoftware,\n                persistence\n\n        & regsvcsOrRegasm\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting.\"\n            +>  codeProxyExecution, \n                attemptComponentObjectModel // register .NET Component Object Model (COM) assemblies\n\n        & regsvr32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions.\"\n            +>  bypassAntivirus,\n                codeProxyExecution,\n                componentObjectModelHijacking // establish Persistence via Component Object Model Hijacking\n\n        | attemptRemoteDesktopProtocol @hidden\n            +>  remoteDesktopProtocol\n\n        & remoteDesktopProtocol //(0.5561)*Exponential(480)]\n            user info: \"Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session.\"\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/blog/threat-research/2020/02/mtrends-2020-insights-from-the-front-lines.html, https://duo.com/decipher/attackers-combine-attacks-against-rdp-with-ransomware, https://www.securitymagazine.com/articles/90983-percent-of-organizations-exhibit-malicious-remote-desktop-protocol-rdp-behaviors, https://medium.com/enterprise-nxt/2020-ransomware-attacks-still-mostly-through-unsecured-rdp-b167fefcd490, https://www.youtube.com/watch?v=Olgso_oXQa8\"\n            +>  attemptAccessibilityFeatures,\n                remoteSystemDiscovery,\n                rDPSessionHijacking,\n                computer.router.internalNetwork.attemptExfiltrationOverC2Channel\n\n        & replicationThroughRemovableMedia //(0.45)*Exponential(3.429)]\n            user info: \"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes.\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/7546509, https://threatpost.com/never-trust-a-found-usb-drive-black-hat-demo-shows-why/119653/\"\n            +>  communicationThroughRemovableMedia,\n                computer.peripheralDevice.infectedMedia\n\n        | rootkit //(0.01255)]\n            user info: \"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.\"\n            developer info: \"Sources used for distribution: https://www.csoonline.com/article/3222066/how-to-detect-and-remove-a-rootkit-in-windows-10.html, https://investors.fireeye.com/static-files/56c2c6ec-3cdc-4fd2-967e-29205d2e982e, https://intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/\"\n            +>  credentialAPIHooking, // leads to hooking attack\n                attemptSystemFirmware // leads to system firmware attack\n\n        & rundll32\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse rundll32.exe to proxy execution of malicious code.\"\n            +>  bypassAntivirus,\n                parentPIDSpoofing, // spoof the PPID of PowerShell/Rundll32 to be explorer.exe rather than an Office document delivered as part of Spearphishing Attachment\n                codeProxyExecution,\n                attemptControlPanel // rundll32.exe can also be used to execute Control Panel Item files\n\n        & screensaver //(0.01605)*Exponential(96)]\n            user info: \"Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.\"\n            developer info: \"Sources for distribution result: https://malware.wikia.org/wiki/MyDoom, https://unit42.paloaltonetworks.com/mydoom-still-active-in-2019/, https://www.menlosecurity.com/blog/only-4-percent-of-users-click-on-phishing-emails.-yet-those-4-percent-never-learn, https://study.sagepub.com/chiricogsp, https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf\" \n            +>  persistence\n\n        | searchOrderHijacking\n            user info: \"Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path.\"\n            ->  attemptDLLSearchOrderHijacking // Search order hijacking is a common practice for DLL Search Order Hijacking   \n\n        & securitySupportProvider\n            user info: \"An adversary may modify these Registry keys to add new SSPs.\"\n            +>  persistence\n\n        | attemptServiceExecution @hidden\n            +>  serviceExecution\n\n        & serviceExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager.\"\n            +>  attemptWindowsService // Adversaries may also directly start services through Service Execution\n\n        | attemptServiceRegistryPermissionsWeakness @hidden\n            +>  serviceRegistryPermissionsWeakness\n\n        & serviceRegistryPermissionsWeakness\n            user info: \"When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptShortcutModification @hidden\n            +>  shortcutModification\n\n        & shortcutModification //(0.03)]\n            developer info: \"Sources for distribution result: https://ics-cert.kaspersky.com/reports/2019/09/30/threat-landscape-for-industrial-automation-systems-h1-2019/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting/, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf, https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf\"\n            user info: \"Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.\"\n            +>  executeCode,\n                persistence,\n                masquerading // create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program\n\n        | attemptSIDHistoryInjection @hidden\n            user info: \"Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management.\"\n            +>  sIDHistoryInjection\n\n        & sIDHistoryInjection\n            developer info: \"Binary probability dsitribution. Distribution carried by parents\"\n            user info: \"This is a helper attack step. Adversaries may utilize DCShadow to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence.\"           \n            ->  persistence,\n                service.remoteServices, // leads to Remote Services attack\n                attemptWindowsAdminShares, // leads to Windows Admin Shares attack    \n                windowsRemoteManagement // leads to Windows Remote Management attack          \n\n        | signedBinaryProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application whitelisting and signature validation on systems.\"\n            ->  compiledHTMLFile,\n                attemptControlPanel,\n                cmstp,\n                installUtil,\n                mshta,\n                msiexec,\n                odbcconf,\n                regsvcsOrRegasm,\n                regsvr32,\n                rundll32        \n\n        | signedScriptProxyExecution\n            developer info: \"Binary probability distribution.\"\n            user info: \"Scripts signed with trusted certificates can be used to proxy execution of malicious files.\"\n            +>  pubPrn\n\n        & pubPrn\n            user info: \"Adversaries may use the trusted PubPrn script to proxy execution of malicious files.\"\n            +>  fileProxyExecution\n\n        | attemptSIPAndTrustProviderHijacking @hidden\n            +>  sIPAndTrustProviderHijacking\n\n        & sIPAndTrustProviderHijacking\n            user info: \"Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system.\"\n            +>  bypassApplicationControl,\n                bypassAutorunsAnalysis,\n                bypassDigitalCertificateValidation,\n                bypassUserModeSignatureValidation \n\n        | attemptSoftwarePacking @hidden\n            ->  softwarePacking\n\n        & softwarePacking //(0.56784)]\n            user info: \"Packing an executable changes the file signature in an attempt to avoid signature-based detection.\"\n            developer info: \"Sources for distribution result: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download, https://attack.mitre.org/techniques/T1045/, http://www.matcode.com/mpress.htm, https://upx.github.io/, https://d3gpjj9d20n0p3.cloudfront.net/fortiguard/research/DetectingMalwareThreats.pdf, https://www.researchgate.net/publication/301902892_Entropy_analysis_to_classify_unknown_packing_algorithms_for_malware_detection, https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://www.lastline.com/labsblog/malware-packing/, www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf\"\n            ->  indicatorRemovalFromTools,\n                bypassSignatureBasedDetection,\n                bypassAntivirus,\n                bypassHeuristicDetection\n\n        | systemServiceDiscovery //(0.0122)]\n            user info: \"Adversaries may try to get information about registered services.\"\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/techniques/T1007/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb491010(v=technet.10)?redirectedfrom=MSDN\"\n            +>  service.serviceInformation \n\n        | attemptTaintSharedContent @hidden\n            user info: \"This is a helper attack step that requires access to shared folders.\"\n            +>  computer.router.internalNetwork.taintSharedContent   \n\n        & templateInjection\n            user info: \"Adversaries may abuse this technology to initially conceal malicious code to be executed.\"\n            +>  bypassStaticFileAnalysis, \n                forcedAuthentication, // leads to Forced Authentication attack\n                service.browser.spearphishingAttachment, // can be delivered via Spearphishing Attachment\n                attemptTaintSharedContent // can be delivered via Taint Shared Content\n\n        | attemptTimeProviders @hidden\n            +>  timeProviders\n\n        & timeProviders\n            user info: \"Adversaries may abuse Windows Time service to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider.\"\n            ->  persistence\n\n        | trustedDeveloperUtilities\n            developer info: \"Binary probability distribution.\"\n            user info: \"An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions.\"\n            +>  mSBuild\n\n        & mSBuild\n            user info: \"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility.\"\n            ->  codeProxyExecution\n\n        | unquotedPaths\n            user info: \"An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable.\"\n            ->  executeCode   \n\n        | attemptServiceStop @hidden //}\n            +>  serviceStop\n\n        & serviceStop //} //(0.0837)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://blog.talosintelligence.com/2018/02/olympic-destroyer.html, https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-changeserviceconfigw, https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html, https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/\"\n            user info: \"Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.\"\n            +>  attemptDataDestruction,\n                attemptDataEncryptedForImpact\n\n        | attemptScheduledTask @hidden\n            ->  scheduledTask  \n\n        & scheduledTask //(0.33)*Exponential(54.3)]\n            user info: \"An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\"\n            developer info: \"Sources used for probability results: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490866(v=technet.10)?redirectedfrom=MSDN, https://redcanary.com/threat-detection-report/techniques/scheduled-task/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/, https://www.esentire.com/assets/resourcefiles/eSentire-2019-Annual-Threat-Intelligence-Report-2019-Perspectives-and-2020-Predictions.pdf, https://blog.malwarebytes.com/cybercrime/2015/03/scheduled-tasks/, https://www.zdnet.com/article/microsoft-says-new-dexphot-malware-infected-more-than-80000-computers/\"\n            +>  executeCode,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence,\n                remoteScheduledTask\n\n        & remoteScheduledTask\n            +>  computer.router.internalNetwork.remoteExecution\n\n        | attemptSystemTimeDiscovery @hidden\n            ->  systemTimeDiscovery\n\n        & systemTimeDiscovery //(0.19744)]\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/\"\n            user info: \"The information could be useful for performing other techniques, such as executing a file with a Scheduled Task, or to discover locality information based on time zone to assist in victim targeting.\"\n            ->  attemptScheduledTask\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  credentialsInRegistry,\n                groupPolicyPreferences\n\n        | attemptWindowsAdminShares @hidden\n            ->  windowsAdminShares\n\n        & windowsAdminShares //(0.28)*Exponential(4114)]\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/windows-admin-shares/, https://www.contextis.com/us/blog/lateral-movement-a-deep-look-into-psexec\"\n            +>  networkShareConnectionRemoval, // leads to Network Share Connection Removal attack\n                windowsManagementInstrumentation // leads to Windows Management Instrumentation attack\n\n        & windowsCommandShell\n            developer info: \"Adversaries may abuse the Windows command shell for execution.\"\n            ->  executeCode\n\n        | windowsManagementInstrumentation //(0.26)*Exponential(43.49)]\n            user info: \"An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions.\"\n            developer info: \"TTC is upper bound of likely time needed. Sources used for probability distribution result: https://redcanary.com/threat-detection-report/techniques/windows-management-instrumentation/, https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf, https://www.microsoft.com/security/blog/2017/06/27/new-ransomware-old-techniques-petya-adds-worm-capabilities/, https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/\"\n            +>  systemInformationDiscovery, // extract information about the operating system\n                systemChecks,\n                executeCode,\n                inhibitSystemRecovery,\n                attemptIndicatorBlocking // tampering settings that control the collection and flow of event telemetry\n\n        | attemptWindowsManagementInstrumentationEventSubscription @hidden\n            +>  windowsManagementInstrumentationEventSubscription\n\n        & windowsManagementInstrumentationEventSubscription //(0.26)*Exponential(43.49)]\n            developer info: \"We assume the dsitribution to be the same as for windowsManagementInstrumentation\"\n            user info: \"Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.\"\n            +>  persistence\n\n        | attemptWindowsRemoteManagement @hidden\n            +>  windowsRemoteManagement\n\n        & windowsRemoteManagement\n            developer info: \"Binary probability distribution. Use of Valid Acounts\"\n            user info: \"WinRM allows a user to interact with a remote system.\"\n            +>  computer.router.internalNetwork.remoteExecution,\n                service.externalRemoteServices // Windows Remote Management can also be used externally  \n\n        | attemptWinlogonHelperDLL @hidden\n            +>  winlogonHelperDLL\n\n        & winlogonHelperDLL\n            user info: \"Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.\"\n            +>  persistence\n\n        & remoteFileCopy //(0.29)]\n            user info: \"Files may be copied from one system to another to stage adversary tools or other files over the course of an operation.\"\n            developer info: \"TTC is very low (10-20 seconds) and is excluded. Sources used for probability result: https://redcanary.com/threat-detection-report/techniques/remote-file-copy/. For estimates on TTC please see remoteFileCopy.md in the Dropbox/MAL work/enterpriselang probability findings/folder.\"\n            +>  attemptWindowsAdminShares, // Adversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.\n                attemptRemoteDesktopProtocol\n\n        | attemptRegistryKeysEnabled @hidden\n            ->  registryKeysEnabled\n\n        & registryKeysEnabled\n            ->  attemptDynamicDataExchange\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            developer info: \"Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/\"\n            +>  attemptWindowsAdminShares\n\n        | attemptDynamicDataExchange @hidden\n            +>  dynamicDataExchange \n\n        & dynamicDataExchange //(0.93)*Exponential(1)]\n            developer info: \"Sources for distribution results : https://www.fortinet.com/blog/threat-research/cybercriminals-exploiting-microsoft-s-vulnerable-dynamic-data-exchange-protocol\"\n            user info: \"Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications.\"\n            +>  commandAndScriptingInterpreter,\n                executeCode\n\n        | captureAPICalls\n            user info: \"Some API calls include parameters that reveal user authentication credentials for Credential Access.\"\n            ->  userAccount.userCredentials\n\n        | attemptLogonScripts\n            ->  logonScripts\n\n        & logonScripts //(288)]\n            user info: \"An adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread.\"\n            developer info: \"Sources for probability distribution: http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/, \"\n            ->  attemptAccessTokenManipulation,\n                adminAccount.adminRights   \n\n        | attemptSystemFirmware @hidden\n            +>  systemFirmware\n        \n        & systemFirmware\n            user info: \"System firmware may be modified by an adversary to perform or assist in malicious activity.\"\n            +>  systemShutdownOrReboot,\n                attemptDataDestruction\n\n        | systemShutdownOrReboot //}\n            user info: \"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems.\"  \n\n        & queryRegistry //(0.05226)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://attack.mitre.org/software/S0075/, https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc742028(v=ws.11), https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf\"\n            user info: \"The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network.\"\n            +>  commandAndScriptingInterpreter,\n                systemChecks,\n                systemInformationDiscovery\n\n        & networkShareDiscovery //(0.0129)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://attack.mitre.org/software/S0039/\"\n            +>  computer.router.internalNetwork.networkShareDiscovery\n\n        | attemptAccessTokenManipulation @hidden\n            +>  accessTokenManipulation\n\n        & accessTokenManipulation //(0.20715)]\n            user info: \"Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.\"\n            developer info: \"Sources for probability distribution result: https://krisk.io/post/sok-attack-securecomm19.pdf, https://pentestlab.blog/2017/04/03/token-manipulation/\"\n            +>  tokenImpersonationOrTheft,\n                createProcessWithAToken,\n                makeAndImpersonateToken,\n                parentPIDSpoofing,\n                attemptSIDHistoryInjection\n\n        | tokenImpersonationOrTheft\n            user info: \"Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n        \n        | createProcessWithAToken\n            user info: \"Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | makeAndImpersonateToken\n            user info: \"Adversaries may make and impersonate tokens to escalate privileges and bypass access controls.\"\n            ->  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptBypassUserAccessControl @hidden\n            ->  bypassUserAccessControl\n\n        & bypassUserAccessControl //(0.277)]\n            developer info: \"TTC assumed instant. Sources for probability distribution: https://attack.mitre.org/software/S0129/, https://www.forcepoint.com/sites/default/files/resources/files/forcepoint-security-labs-monsoon-analysis-report.pdf, https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6352, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx, https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://github.com/hfiref0x/UACME\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n   \n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            developer info: \"TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/\"\n            +>  attemptSoftwarePacking\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            developer info: \"Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz\" \n            +>  attemptLSASSMemory,\n                securityAccountManager,\n                nTDS,\n                lSASecrets,\n                cachedDomainCredentials,\n                dCSync,\n                stealOrForgeKerberosTickets\n\n        | peripheralDeviceDiscovery //(1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/646.html, https://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf, https://github.com/mal-lang/malcompiler/wiki/Supported-distribution-functions\" \n            +>  computer.peripheralDeviceDiscovery\n\n        | portMonitors\n            user info: \"Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.\"\n            +>  executeCode,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | emailCollection\n            developer info: \"Binary probability distribution. (Probabilities carried by children)\"\n            user info: \"Adversaries may target user email to collect sensitive information from a target.\"\n            +>  localEmailCollection,\n                remoteEmailCollection,\n                emailForwardingRule,\n                service.remoteEmailCollection,\n                service.emailForwardingRule\n       \n        & localEmailCollection //(0.892)*Exponential(95.58)]\n            developer info: \"Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md\"\n            user info: \"Adversaries may target user email on local systems to collect sensitive information.\"\n            ->  sensitiveDataCollected\n\n        & remoteEmailCollection //(0.892)*Exponential(35.19)]\n            developer info: \"Sources for distribution results: https://www.lifewire.com/what-is-the-average-size-of-an-email-message-1171208#:~:text=Email%20size%20is%20determined%20by%20much%20more%20than%20just%20the%20message&text=The%20average%20size%20of%20an,text%20or%20about%2037.5%20pages., https://www.litmus.com/blog/the-2017-email-client-market-share-infographic/, more in emailCollection.md\"\n            user info: \"Adversaries may target an Exchange server or Office 365 to collect sensitive information.\"\n            ->  attemptRemoteDesktopProtocol, // https://www.us-cert.gov/ncas/alerts/TA18-086A\n                sensitiveDataCollected\n\n        & emailForwardingRule //(0.00061)]\n            developer info: \"Sources for distribution results: https://www.textrequest.com/blog/how-many-emails-do-people-get-every-day/, more in emailCollection.md\"\n            user info: \"Adversaries may setup email forwarding rules to collect sensitive information.\"\n            ->  sensitiveDataCollected\n\n        | attemptApplicationShimming @hidden\n            ->  applicationShimming\n            \n        & applicationShimming\n            developer info:\"Binary probability distribution. Sources for distribution results : Process Injection findings and https://www.elastic.co/fr/blog/ten-process-injection-techniques-technical-survey-common-and-trending-process\"\n            user info: \"Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\"\n            +>  persistence, // use application shim databases for persistence\n                processInjection,\n                credentialAPIHooking, // the shim database uses Hooking to redirect the code as necessary in order to communicate with the OS\n                attemptBypassUserAccessControl // certain shims can be used to Bypass User Account Control (UAC)\n\n        & authenticationPackage\n            developer info: \"Binary probability distribution\"\n            user info: \"Adversaries can use Windows Authentication Packages for persistence for persistence.\"\n            +>  persistence   \n\n        | changeDefaultFileAssociation\n            user info: \"Adversaries may establish persistence by executing malicious content triggered by a file type association.\"\n            +>  persistence\n\n        | trustedDomainInfo // leads to SID-History Injection, Pass the Ticket, and Kerberoasting attacks\n            user info: \"The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting.\"\n\n        & domainTrustDiscovery //(0.13)*Exponential(127.1)]\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/domain-trust-discovery/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n            +>  trustedDomainInfo\n\n        | attemptBootkit @hidden\n            +>  bootkit\n\n        & bootkit //(0.46)]\n            developer info: \"TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx\" \n            +>  persistence\n            \n        | videoCapture //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption\"\n            +>  computer.collectVideo            \n\n        & xslScriptProcessing //(0.93)*Exponential(1)]\n            developer info: \"Sources used for probability distribution: https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/\"\n            user info: \"Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\"\n            +>  executeCode,\n                windowsManagementInstrumentation, // leads to Windows Management Instrumentation attack\n                bypassAntivirus,\n                bypassApplicationWhitelisting,\n                bypassDigitalCertificateValidation\n\n        # activeDirectoryConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1015/\"\n            +>  cachedDomainCredentials,\n                dCSync,\n                goldenTicket,\n                groupPolicyPreferences,\n                passTheTicket,\n                sIDHistoryInjection\n\n        # antivirus //(0.53)]\n            user info: \"https://attack.mitre.org/mitigations/M1049/\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average\"\n            +>  powerShell,\n                softwarePacking,\n                templateInjection\n\n        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.\n            user info: \"https://attack.mitre.org/mitigations/M1048/\"\n            +>  distributedComponentObjectModel,\n                componentObjectModel,\n                dynamicDataExchange\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            +>  at,\n                credentialsInRegistry,\n                domainTrustDiscovery,\n                bypassUserAccessControl,\n                dLLSearchOrderHijacking,\n                dLLSideLoading,\n                emailForwardingRule,\n                executableInstallerFilePermissionsWeakness,\n                groupPolicyPreferences,\n                pathInterception,\n                remoteDesktopProtocol,\n                rDPHijacking,\n                servicesFilePermissionsWeakness,\n                scheduledTask,\n                sQLStoredProcedures,\n                transportAgent,\n                windowsService\n\n        # behaviorPreventionOnEndpoint\n            user info : \"https://attack.mitre.org/mitigations/M1040/\"\n            +>  dynamicDataExchange,\n                dynamicLinkLibraryInjection,\n                extraWindowMemoryInjection,\n                portableExecutableInjection,\n                threadExecutionHijacking,\n                asynchronousProcedureCall,\n                threadLocalStorage,\n                processHollowing,\n                processDoppelganging\n        \n        # codeSigning //(0.28)]\n            user info: \"https://attack.mitre.org/mitigations/M1045/\"  \n            +>  invalidCodeSignature,\n                powerShell,\n                powerShellUserProfile,\n                powerShellAdminProfile,\n                sQLStoredProcedures,\n                transportAgent\n\n        # credentialAccessProtection\n            user info: \"https://attack.mitre.org/mitigations/M1043/\"\n            ->  lSASSDriver,\n                lSASSMemory\n\n        # executionPrevention\n            user info: \"https://attack.mitre.org/mitigations/M1038/\"\n            +>  accessibilityFeatures,\n                appCertDLLs,\n                appInitDLLs,\n                cmstp,\n                controlPanel,\n                compiledHTMLFile,\n                cOR_PROFILER,\n                dLLSearchOrderHijacking,\n                executionThroughAPI,\n                executionThroughModuleLoad,\n                installUtil,\n                mshta,\n                networkShareDiscovery,\n                odbcconf,\n                pathInterception,\n                pubPrn,\n                queryRegistry,\n                regsvcsOrRegasm,\n                screensaver,\n                sIPAndTrustProviderHijacking,\n                systemTimeDiscovery,\n                windowsCommandShell,\n                winlogonHelperDLL,\n                xslScriptProcessing,\n                computer.router.internalNetwork.taintSharedContent\n\n        # exploitProtection\n            user info: \"https://attack.mitre.org/mitigations/M1050/\"\n            +>  regsvr32,\n                rundll32,\n                computer.router.internalNetwork.taintSharedContent\n\n        # limitHardwareInstallation\n            user info: \"https://attack.mitre.org/mitigations/M1034/\"\n            developer info: \"Binary probability relation.\"\n            +>  replicationThroughRemovableMedia\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            user info: \"https://attack.mitre.org/mitigations/M1032/\" \n            +>  domainControllerAuthentication\n\n        # operatingSystemConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1028/\" \n            +>  at,\n                passwordFilterDLL,\n                bITSJobs,\n                cachedDomainCredentials,\n                lSASSMemory,\n                rDPHijacking,\n                remoteDesktopProtocol,\n                scheduledTask,\n                securityAccountManager\n\n        # passwordPolicies \n            user info: \"https://attack.mitre.org/mitigations/M1027/\" \n            +>  cachedDomainCredentials,\n                credentialsInRegistry,\n                dCSync,\n                kerberoasting,\n                lSASSMemory,\n                lSASecrets,\n                nTDS,\n                passTheHash,\n                passTheTicket,\n                securityAccountManager,\n                silverTicket,\n                windowsAdminShares               \n\n        # privilegedProcessIntegrity  \n            user info: \"https://attack.mitre.org/mitigations/M1025/\"\n            ->  authenticationPackage,\n                domainControllerAuthentication,\n                lSASSDriver,\n                lSASSMemory,\n                securitySupportProvider \n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            +>  at,\n                bootkit,\n                bypassUserAccessControl,\n                cachedDomainCredentials,\n                componentObjectModel,\n                credentialsInRegistry,\n                dCSync,\n                distributedComponentObjectModel,\n                domainControllerAuthentication,\n                goldenTicket,\n                kerberoasting,\n                lSASSMemory,\n                lSASecrets,\n                msiexec,\n                nTDS,\n                passTheHash,\n                rDPHijacking,\n                scheduledTask,\n                securityAccountManager,\n                silverTicket,\n                sQLStoredProcedures,\n                transportAgent,\n                windowsFileAndDirectoryPermissionsModification\n\n        # restrictFileAndDirectoryPermissions\n            user info: \"https://attack.mitre.org/mitigations/M1022/\"\n            +>  clearWindowsEventLogs,\n                controlPanel,\n                cOR_PROFILER,\n                dLLSideLoading,\n                bootOrLogonInitializationScripts,\n                logonScripts,\n                modifyRegistry,\n                ntfsFileAttributes,\n                pathInterception,\n                powerShellUserProfile,\n                powerShellAdminProfile,\n                sIPAndTrustProviderHijacking,\n                serviceStop,\n                serviceExecution,\n                servicesRegistryPermissionsWeakness,\n                timeProviders,\n                disableWindowsEventLogging,\n                windowsFileAndDirectoryPermissionsModification\n\n        # restrictRegistryPermissions // Restrict the ability to modify certain hives or keys in the Windows Registry.\n            user info: \"https://attack.mitre.org/mitigations/M1024/\"\n            +>  sIPAndTrustProviderHijacking,\n                serviceStop,\n                serviceRegistryPermissionsWeakness,\n                timeProviders\n\n        # restrictLibraryLoading\n            user info: \"https://attack.mitre.org/mitigations/M1044/\"\n            ->  dLLSearchOrderHijacking,\n                lSASSDriver       \n\n        # remoteDataStorage \n            user info: \"https://attack.mitre.org/mitigations/M1029/\"\n            +>  clearWindowsEventLogs\n\n        # softwareConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1054/\"\n            +>  powerShellUserProfile,\n                powerShellAdminProfile,\n                dynamicDataExchange\n\n        # bootIntegrity \n            user info: \"https://attack.mitre.org/mitigations/M1046/\"\n            +>  bootkit,\n                systemFirmware      \n\n        # encryptSensitiveInformation\n            user info: \"https://attack.mitre.org/mitigations/M1041/\"\n            +>  kerberoasting,\n                localEmailCollection,\n                nTDS,\n                remoteEmailCollection,\n                silverTicket,\n                emailForwardingRule,\n                clearWindowsEventLogs\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/mitigations/M1042/\"\n            +>  cmstp,\n                distributedComponentObjectModel,\n                installUtil,\n                lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                mshta,\n                odbcconf,\n                powerShell,\n                rDPHijacking,\n                registryKeysEnabled,\n                regsvcsOrRegasm,\n                remoteDesktopProtocol,\n                replicationThroughRemovableMedia,\n                screensaver,\n                templateInjection,\n                mSBuild,\n                windowsRemoteManagement,\n                dynamicDataExchange\n\n        # updateSoftware //(0.567125)]\n            user info: \"https://attack.mitre.org/mitigations/M1051/\" \n            +>  appInitDLLs,\n                applicationShimming,\n                bypassUserAccessControl,\n                dLLSideLoading,\n                groupPolicyPreferences,\n                passTheHash,\n                systemFirmware\n        \n        # userAccountControl\n            user info: \"https://attack.mitre.org/mitigations/M1052/\"\n            +>  applicationShimming, \n                bypassUserAccessControl,\n                executableInstallerFilePermissionsWeakness,\n                servicesFilePermissionsWeakness,\n                passTheHash\n    }\n\n    asset Linux extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            developer info: \"Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A\" \n            +>  attemptSSHAuthorizedKeys\n\n        & at\n            user info: \"Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode\n\n        | attemptBootkit @hidden\n            +>  bootkit\n\n        & bootkit //(0.46)]\n            developer info: \"TTC assumed instant, see Dropbox/enterpriselang probability findings/bootkit.md for more info. sources used for distribution result: https://www.eset.com/afr/about/newsroom/press-releases-afr/research/dissection-of-sednit-espionage-group-1/, https://gs.statcounter.com/os-version-market-share/windows/desktop/worldwide, https://netmarketshare.com/operating-system-market-share.aspx?, https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html, https://www.hanselman.com/blog/HowManyPCsInTheWorldHaveTheNETFrameworkInstalled.aspx\"\n            +>  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        & clearLinuxSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            developer info: \"Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/\"\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptSystemdService\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & _etc_passwdAND_etc_shadow\n            user info: \"Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking.\"\n            +>  collectHashInformation\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptBash_profileAndBashrc,\n                trap\n\n        | spaceAfterFileName //(1)]\n            developer info: \"Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"\n            +>  computer.user.attemptUserExecution\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution. With File permissions, the adversary may instantly perform this technique.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            +>  persistence\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            developer info: \"Sources for distribution results: https://www.darkreading.com/endpoint/average-employee-manages-nearly-200-passwords/d/d-id/1330304, http://blog.lastpass.com/2017/11/lastpass-reveals-8-truths-about-passwords-in-the-new-password-expose/ \"\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                userAccount.userCredentials\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  lD_PRELOAD\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n            +>  linuxFileAndDirectoryPermissionsModification\n\n        & linuxFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | indicatorRemovalOnHost //(0.04)]\n            developer info: \"Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets\"\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearLinuxSystemLogs,\n                attemptClearCommandHistory \n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit        \n\n        & lD_PRELOAD\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                attemptProcMemory // populate a target process with more available gadgets\n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            developer info: \"TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker\"\n            +>  masqueradeTaskOrService,\n                spaceAfterFileName,\n                spaceAfterFileName\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | masqueradeTaskOrService\n            user info: \"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign.\"\n            +>  bypassHostIntrusionPrevention\n\n        | oSCredentialDumping //(0.08785)]\n            user info: \"Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.\"\n            developer info: \"Sources for distribution result: https://www.picussecurity.com/picus-10-critical-mitre-attck-techniques, https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/post/sok-attack-securecomm19.pdf, https://redcanary.com/threat-detection-report/techniques/credential-dumping/, https://github.com/gentilkiwi/mimikatz\" \n            +>  procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & procFilesystem\n            user info: \"Adversaries may gather credentials from information stored in the Proc filesystem or /proc.\"\n            +>  collectHashInformation\n\n        & ptraceSystemCalls\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | preOSBoot\n            user info: \"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system.\"\n            +>  bootkit\n\n        | attemptProcMemory @hidden\n            ->  procMemory\n\n        & procMemory\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | processInjection //(0.35)*Exponential(127.1)] \n            user info: \"Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation.\"\n            developer info: \"Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/process-injection/, https://labs.sentinelone.com/trickbot-update-brief-analysis-of-a-recent-trickbot-payload/, https://www.wilbursecurity.com/2020/03/trickbot-to-ryuk-in-two-hours/, https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tale-of-the-two-payloads-trickbot-and-nitol/\"\n            +>  ptraceSystemCalls,\n                attemptProcMemory,\n                vDSOHijacking\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  at,\n                cron\n\n        | serverSoftwareComponent\n            user info: \"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems.\"\n            +>  attemptSQLStoredProcedures,\n                attemptTransportAgent\n\n        | attemptSetuidAndSetgid @hidden\n            +>  setuidAndSetgid      \n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence  \n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump\"\n            +>  userAccount.userCredentials\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            developer info: \"Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf\" \n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | attemptSQLStoredProcedures @hidden\n            +>  sQLStoredProcedures\n\n        & sQLStoredProcedures\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        & sudoAndSudoCaching //(288)]\n            developer info: \"Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html\"\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | attemptSystemdService @hidden\n            ->  systemdService\n\n        & systemdService\n            user info: \"Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.\"\n            +>  persistence\n\n        | attemptTransportAgent @hidden\n            +>  transportAgent\n\n        & transportAgent\n            user info: \"Adversaries may abuse SQL stored procedures to establish persistent access to systems.\"\n            +>  persistence\n\n        | trap //(0.1)]\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            +>  executeCode,\n                persistence\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        & vDSOHijacking\n            developer info: \"Binary probability distribution. Probability carried by Process Injection main technique\"\n            user info: \"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges.\"\n            ->  bypassAntivirus,\n                bypassApplicationControl\n\n        | executeCode \n            +>  computer.infectedLinuxComputer \n\n        # antivirus //(0.53)]\n            user info: \"https://attack.mitre.org/mitigations/M1049/\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average\"\n            +>  kernelModulesAndExtensions\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            +>  at,\n                cron,\n                sQLStoredProcedures,\n                transportAgent\n\n        # behaviorPreventionOnEndpoint\n            user info : \"https://attack.mitre.org/mitigations/M1040/\"\n            +>  ptraceSystemCalls,\n                procMemory,\n                vDSOHijacking\n\n        # bootIntegrity \n            user info: \"https://attack.mitre.org/mitigations/M1046/\"\n            +>  bootkit\n\n        # codeSigning //(0.28)]\n            user info: \"https://attack.mitre.org/mitigations/M1045/\"  \n            +>  sQLStoredProcedures,\n                transportAgent\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/mitigations/M1042/\"\n            +>  sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # encryptSensitiveInformation\n            user info: \"https://attack.mitre.org/mitigations/M1041/\"\n            +>  clearLinuxSystemLogs\n\n        # executionPrevention\n            +>  kernelModulesAndExtensions,\n                unixShell,\n                lD_PRELOAD\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            user info: \"https://attack.mitre.org/mitigations/M1039/\"\n            ->  clearCommandHistory,\n                hISTCONTROL              \n\n        # limitSoftwareInstallation\n            user info: \"https://attack.mitre.org/mitigations/M1033/\"\n            +>  systemdService\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            user info: \"https://attack.mitre.org/mitigations/M1032/\"\n            +>  pluggableAuthenticationModules,\n                sSH\n            \n        # operatingSystemConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1028/\" \n            +>  bashHistory,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            user info: \"https://attack.mitre.org/mitigations/M1027/\"\n            +>  sSHHijacking,\n                procFilesystem,\n                _etc_passwdAND_etc_shadow\n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            +>  bootkit,\n                _etc_passwdAND_etc_shadow,\n                sSHHijacking,\n                sQLStoredProcedures,\n                sudoAndSudoCaching,\n                pluggableAuthenticationModules,\n                procFilesystem,\n                ptraceSystemCalls,\n                transportAgent,\n                linuxFileAndDirectoryPermissionsModification\n\n        # restrictFileAndDirectoryPermissions\n            user info: \"https://attack.mitre.org/mitigations/M1022/\"\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearLinuxSystemLogs,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                sudoAndSudoCaching,\n                systemdService,\n                procMemory,\n                linuxFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            user info: \"https://attack.mitre.org/mitigations/M1029/\"\n            +>  clearLinuxSystemLogs\n    }\n\n    asset MacOS extends OS {\n        | abuseElevationControlMechanism\n            user info: \"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.\"\n            +>  attemptSetuidAndSetgid,\n                sudoAndSudoCaching,\n                attemptElevatedExecutionWithPrompt\n\n        | accountManipulation //(0.101)]\n            user info: \"Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment.\" \n            developer info: \"Sources used for probability distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://attack.mitre.org/techniques/T1098/, https://www.us-cert.gov/ncas/alerts/TA18-074A\" \n            +>  attemptSSHAuthorizedKeys\n\n        | attemptBashHistory @hidden\n            ->  bashHistory\n\n        & bashHistory //(0.5)*Exponential(1)]\n            user info: \"Adversaries may search the bash command history on compromised systems for insecurely stored credentials.\"\n            +>  indicatorRemovalOnHost,\n                adminAccount.adminCredentials,\n                userAccount.userCredentials\n\n        | attemptBash_profileAndBashrc @hidden\n            ->  bash_profileAndBashrc\n\n        & bash_profileAndBashrc\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.\"\n            ->  persistence\n\n        | bootOrLogonAutostartExecution\n            +>  kernelModulesAndExtensions,\n                reopenedApplications,\n                attemptPlistModification\n\n        | attemptBootOrLogonInitializationScripts @hidden\n            ->  bootOrLogonInitializationScripts\n\n        & bootOrLogonInitializationScripts\n            user info: \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.\"\n            ->  attemptLogonScripts,\n                rc_common,\n                attemptStartupItems\n\n        & clearMacSystemLogs\n            user info: \"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs.\"\n\n        | codeSigningCertificate //(0.72)*Exponential(96)]\n            user info: \"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools.\"\n            developer info: \"Sources for distribution results:https://www.venafi.com/blog/study-how-well-are-you-protecting-code-signing-certificates#:~:text=The%20study%20found%20that%20although,process%20for%20code%20signing%20certificates,https://duo.com/decipher/attackers-are-signing-malware-with-valid-certificates,https://cqureacademy.com/blog/windows-internals/code-signing\"\n\n        & commandAndScriptingInterpreter //(0.24)]\n            developer info: \"Sources for distribution results: https://www.itjungle.com/2020/06/22/security-gaining-attention-on-ibm-i-but-more-progress-needed/\"\n            user info: \"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries.\"\n            +>  unixShell,\n                appleScript\n\n        | eventTriggeredExecution\n            user info: \"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.\"\n            +>  attemptEmond,\n                attemptBash_profileAndBashrc,\n                trap,\n                lC_LOAD_DYLIB_Addition\n\n        & visualBasic\n            user info: \"Adversaries may abuse Visual Basic (VB) for execution.\"\n            +>  attemptHiddenWindow\n\n        & javaScriptOrJScript\n            user info: \"Adversaries may abuse JavaScript / JScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads.\"\n            +>  attemptHiddenWindow\n\n        | attemptClearCommandHistory @hidden\n            ->  clearCommandHistory       \n\n        & clearCommandHistory\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs.\" \n            +>  bypassLogAnalysis, \n                bypassHostForensicAnalysis\n\n        | createOrModifySystemProcess\n            user info: \"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon\n\n        | credentialsFromPasswordStores\n            user info: \"Adversaries may search for common password storage locations to obtain user credentials.\"\n            +>  attemptKeychain,\n                securitydMemory\n\n        & cron\n            user info: \"Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  persistence\n\n        & dylibHijacking //(0.16)] \n            user info: \"Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.\"\n            developer info: \"Based on the results for dLLSearchOrderHijacking.  Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/dll-search-order-hijacking/. Sources for TTC (not used): http://blog.nsfocus.net/dridex-banking-malware-sample-technical-analysis-solution/, https://threatresearch.ext.hp.com/dridex-threat-analysis-july-2019-variant/\"\n            ->  service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack\n\n        | attemptElevatedExecutionWithPrompt @hidden\n            +>  elevatedExecutionWithPrompt\n\n        & elevatedExecutionWithPrompt\n            developer info: \"Binary probability distribution. Sources for distribution result: https://www.carbonblack.com/blog/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n            user info: \"Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.\"\n            +>  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptEmond @hidden\n            ->  emond\n\n        & emond //(2)]\n            developer info: \"Source for distribution result : https://www.xorrior.com/emond-persistence/\"\n            user info: \"Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers.\"\n            +>  persistence,\n                service.attemptExploitationForPrivilegeEscalation\n\n        | fileAndDirectoryPermissionsModification //(0.2174)]\n            user info: \"File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0402, https://securelist.com/threats-to-macos-users/93116/, https://www.carbonblack.com/2019/02/12/tau-threat-intelligence-notification-new-macos-malware-variant-of-shlayer-osx-discovered/\"\n            +>  macFileAndDirectoryPermissionsModification\n\n        & macFileAndDirectoryPermissionsModification\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.\"\n            ->  attemptBash_profileAndBashrc,\n                hijackExecutionFlow\n\n        | executeCode \n            +>  computer.infectedMacOSComputer\n\n        | attemptGatekeeperBypass @hidden\n            +> gatekeeperBypass\n\n        & gatekeeperBypass\n            developer info: \"Binary probability distribution.\"\n            user info: \"Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check.\"\n            +>  bypassApplicationControl,\n                bypassAntivirus \n\n        | attemptGUIInputCapture @hidden\n            ->  gUIInputCapture\n\n        & gUIInputCapture\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt.\"\n            +>  userAccount.userCredentials\n\n        | hideArtifacts\n            user info: \"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection.\"\n            +>  attemptHiddenWindow,\n                hiddenUsers\n\n        | hijackExecutionFlow\n            user info: \"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs.\"\n            +>  dylibHijacking\n\n        | indicatorRemovalOnHost //(0.04)]\n            developer info: \"Sources used for distribution result: Red Canary top 50 ATT&CK techniques (private google sheets document), https://krisk.io/publication/mitre-attack-securecomm19/, https://www.crowdstrike.com/resources/reports/observations-from-the-front-lines-of-threat-hunting-2019/, https://content.fireeye.com/m-trends/rpt-m-trends-2020, https://www.welivesecurity.com/wp-content/uploads/2017/02/Read-The-Manual.pdf, https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets\"\n            user info: \"Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.\" \n            +>  clearMacSystemLogs,\n                attemptClearCommandHistory  \n\n        | inputCapture //(0.071)]\n            user info: \"Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception.\"\n            developer info: \"Sources used for distribution result: https://www.statista.com/statistics/271037/distribution-of-most-common-malware-file-types/, https://www.rsaconference.com/industry-topics/blog/do-malware-authors-dream-of-original-code, http://keyllama.com/KeyLlamaUSB.pdf\"\n            +>  attemptGUIInputCapture\n\n        & hiddenUsers\n            user info: \"By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily.\"\n            +>  adminAccount.attemptCreateAccount\n\n        | attemptHiddenWindow @hidden\n            ->  hiddenWindow\n\n        & hiddenWindow //(0.22)]\n            user info: \"A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.\"\n            developer info: \"Sources for probability distribution: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download\"\n\n        & hISTCONTROL\n            user info: \"Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.\"     \n            +>  bypassLogAnalysis,\n                bypassHostForensicAnalysis\n\n        | impareDefenses\n            user info: \"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.\"\n            +>  hISTCONTROL\n\n        | infectedOS\n            +>  attemptBashHistory\n\n        & invalidCodeSignature\n            user info: \"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool.\"\n\n        & kernelModulesAndExtensions\n            user info: \"Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses.\"\n            +>  rootkit  \n\n        | attemptLaunchAgent @hidden\n            +>  launchAgent\n\n        & launchAgent\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories.\"     \n            +>  persistence\n\n        & launchctl\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.\"\n            +>  attemptLaunchAgent,\n                attemptLaunchDaemon \n\n        & launchd\n            user info: \"Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code.\"\n            +>  executeCode,\n                persistence   \n\n        | attemptLaunchDaemon @hidden\n            ->  launchDaemon\n\n        & launchDaemon\n            developer info: \"Binary probability distribution.\"\n            user info: \"Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation.\"\n            +>  persistence,\n                attemptLaunchAgent,\n                service.attemptExploitationForPrivilegeEscalation   \n\n        & lC_LOAD_DYLIB_Addition\n            user info: \"Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time.\"\n            +>  persistence\n\n        | attemptLogonScripts @hidden\n            +>  logonScripts\n\n        & logonScripts\n            ->  adminAccount.adminRights  \n\n        | masquerading //(0.34)*Exponential(1)]\n            user info: \"Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation.\"\n            developer info: \"TTC is time until attack is over, which is time until masquerading file is discovered. Sources used for probability distribution: https://redcanary.com/threat-detection-report/techniques/masquerading/, https://www.tripwire.com/state-of-security/security-data-protection/security-controls/file-integrity-monitoring/, https://www.cm-alliance.com/cybersecurity-blog/understanding-how-file-integrity-monitoring-works, https://en.wikipedia.org/wiki/System_File_Checker\"\n            +>  invalidCodeSignature,        \n                attemptElevatedExecutionWithPrompt // combine with elevatedExecutionWithPrompt to trick the user into granting escalated privileges to malicious code\n\n        | modifyAuthenticationProcess\n            user info: \"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.\"\n            +>  pluggableAuthenticationModules\n\n        | obfuscatedFilesOrInformation //(0.7395)]\n            user info: \"Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis.\"     \n            developer info: \"TTC assumed instant. Sources for distribution result: https://www.recordedfuture.com/mitre-attack-tactics/, https://krisk.io/post/sok-attack-securecomm19.pdf, https://nakedsecurity.sophos.com/2010/07/27/large-piece-malware/\"\n            +>  attemptSoftwarePacking\n\n        | attemptPlistModification @hidden\n            +>  plistModification\n\n        & plistModification\n            user info: \"Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism.\"\n            developer info: \"Binary probability distribution.\"\n            +>  bypassApplicationWhitelisting,\n                bypassProcessWhitelisting,\n                bypassFileOrPathWhitelisting,\n                executeCode,\n                reopenedApplications,\n                service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        & pluggableAuthenticationModules\n            user info: \"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts.\"\n\n        & portKnocking\n            user info: \"This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\"\n            +>  bypassDefensiveNetworkServiceScanning\n\n        & rc_common\n            developer info: \"Binary probability distribution. (Root rights) https://attack.mitre.org/techniques/T1037/004/\"\n            user info: \"Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user.\"\n            +>  persistence\n\n        & reopenedApplications\n            developer info: \"Binary probability distribution. Plist Modification: https://attack.mitre.org/techniques/T1547/007/\"\n            user info: \"An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine.\"\n            +>  persistence\n\n        | scheduledTaskOrJob\n            developer info: \"Binary probability distribution.\"\n            user info: \"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.\"\n            +>  cron,\n                launchd\n\n        & securitydMemory //(0.0158)]\n            user info: \"If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.\"\n            developer info: \"Sources used for distribution result: https://attack.mitre.org/software/S0276/, https://macos.checkpoint.com/, https://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain, https://github.com/juuso/keychaindump\"\n            +>  userAccount.userCredentials\n\n        | attemptSetuidAndSetgid @hidden\n            ->  setuidAndSetgid\n\n        & setuidAndSetgid\n            user info: \"An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context.\"\n            ->  service.attemptExploitationForPrivilegeEscalation,\n                persistence\n\n        | attemptSoftwarePacking @hidden\n            ->  softwarePacking\n\n        & softwarePacking //(0.56784)]\n            user info: \"Packing an executable changes the file signature in an attempt to avoid signature-based detection.\"\n            developer info: \"Sources for distribution result: https://www.carbonblack.com/resources/threat-research/cybersecurity-outlook-report/#download, https://attack.mitre.org/techniques/T1045/, http://www.matcode.com/mpress.htm, https://upx.github.io/, https://d3gpjj9d20n0p3.cloudfront.net/fortiguard/research/DetectingMalwareThreats.pdf, https://www.researchgate.net/publication/301902892_Entropy_analysis_to_classify_unknown_packing_algorithms_for_malware_detection, https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://www.lastline.com/labsblog/malware-packing/, www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf\"\n            ->  indicatorRemovalFromTools,\n                bypassSignatureBasedDetection,\n                bypassAntivirus,\n                bypassHeuristicDetection \n\n        | source\n            developer info: \"Binary probability distribution.\"\n            +>  executeCode\n\n        | systemServices\n            user info: \"Adversaries may abuse system services or daemons to execute commands or programs.\"\n            +>  launchctl\n\n        & sSH\n            user info: \"Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\"\n            +>  computer.router.internalNetwork.c2Connected\n\n        | attemptSSHAuthorizedKeys @hidden\n            +>  sSHAuthorizedKeys\n\n        & sSHAuthorizedKeys\n            user info: \"Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host.\"\n            ->  persistence\n\n        & sSHHijacking //(0.51)]\n            developer info: \"Sources for distribution results: http://book.itep.ru/depository/security/vulnerability/AST-0125626_Ponemon_2014_SSH_Security_Vulnerability_Report.pdf\" \n            user info: \"In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system.\"\n            +>  sSHCredentialInterception\n\n        | subvertTrustControls\n            user info: \"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs.\"\n            +>  codeSigningCertificate,  \n                gatekeeperBypass\n\n        | attemptSudoAndSudoCaching @hidden\n            ->  sudoAndSudoCaching\n            \n        & sudoAndSudoCaching //(288)]\n            developer info: \"Sources for distribution results: https://www.sudo.ws/man/1.8.15/sudoers.man.html\"\n            user info: \"Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password.\"\n            +>  service.attemptExploitationForPrivilegeEscalation\n\n        | trap //(0.1)]\n            developer info: \"Arbitrary distribution. See trap.md file.\"\n            user info: \"Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism.\"\n            +>  executeCode,\n                persistence\n\n        | videoCapture //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: http://www.storiprotection.fr/EagleEye.pdf, http://zugara.com/webcam-penetration-rates-adoption\"\n            +>  computer.collectVideo     \n\n        | spaceAfterFileName //(1)]\n            developer info: \"Binary probability distribution. Based on the abuse of system features. Sources: https://attack.mitre.org/techniques/T1151/, https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/\"\n            +>  computer.user.attemptUserExecution\n\n        & networkShareDiscovery //(0.0129)]\n            developer info: \"Sources for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/\"\n            +>  computer.router.internalNetwork.networkShareDiscovery\n\n        & unixShell\n            developer info: \"Adversaries may abuse Unix shell commands and scripts for execution.\"\n            ->  executeCode\n\n        | unsecuredCredentials\n            user info: \"Aversaries may search compromised systems to find and obtain insecurely stored credentials.\"\n            +>  bashHistory\n\n        | windowsManagementInstrumentation\n            ->  commandAndScriptingInterpreter\n\n        | attemptKeychain @hidden\n            ->  keychain\n\n        & keychain\n            user info: \"If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.\"\n            +>  userAccount.userCredentials\n\n        & appleScript\n            developer info: \"Binary probability distribution.\"\n            ->  executeCode,\n                attemptGUIInputCapture // collect credentials\n                \n        | attemptStartupItems @hidden\n            +>  startupItems\n\n        & startupItems\n            user info: \"An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.\"\n            ->  persistence,\n                service.attemptExploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack \n\n        # antivirus //(0.53)]\n            user info: \"https://attack.mitre.org/mitigations/M1049/\"\n            developer info: \"Sources for distribution result: https://ieeexplore.ieee.org/abstract/document/5665797; https://www.sans.org/reading-room/whitepapers/analyst/endpoint-protection-response-survey-38460; https://www.businesswire.com/news/home/20100804005348/en/Cyveillance-Testing-Finds-AV-Vendors-Detect-Average\"\n            +>  kernelModulesAndExtensions,\n                softwarePacking\n\n        # audit \n            user info: \"https://attack.mitre.org/mitigations/M1047/\"\n            +>  lC_LOAD_DYLIB_Addition,\n                cron,\n                launchd\n\n        # codeSigning //(0.28)]\n            user info: \"https://attack.mitre.org/mitigations/M1045/\"  \n            +>  appleScript,\n                invalidCodeSignature,\n                lC_LOAD_DYLIB_Addition\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/mitigations/M1042/\"\n            +>  emond,\n                reopenedApplications,\n                sSH,\n                sSHAuthorizedKeys,\n                sSHHijacking\n\n        # executionPrevention\n            +>  appleScript,\n                elevatedExecutionWithPrompt,\n                gatekeeperBypass,\n                hiddenWindow,\n                kernelModulesAndExtensions,\n                lC_LOAD_DYLIB_Addition,\n                networkShareDiscovery,\n                unixShell\n\n        # encryptSensitiveInformation\n            user info: \"https://attack.mitre.org/mitigations/M1041/\"\n            +>  clearMacSystemLogs\n\n        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.\n            user info: \"https://attack.mitre.org/mitigations/M1039/\"\n            ->  clearCommandHistory,\n                hISTCONTROL   \n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            user info: \"https://attack.mitre.org/mitigations/M1032/\"\n            +>  pluggableAuthenticationModules,\n                sSH\n\n        # operatingSystemConfiguration\n            user info: \"https://attack.mitre.org/mitigations/M1028/\" \n            +>  bashHistory,\n                hiddenUsers,\n                hISTCONTROL,\n                setuidAndSetgid,\n                sudoAndSudoCaching\n\n        # passwordPolicies // Set and enforce secure password policies for accounts \n            user info: \"https://attack.mitre.org/mitigations/M1027/\"\n            +>  keychain,\n                sSHHijacking\n\n        # privilegedAccountManagement //(0.30)]\n            developer info: \"Sources for distribution results : https://lp.alpha-gen.co.uk/2018-global-state-of-pam/\"\n            user info: \"https://attack.mitre.org/mitigations/M1026/\"\n            +>  sSHHijacking,\n                macFileAndDirectoryPermissionsModification,\n                pluggableAuthenticationModules\n\n        # restrictFileAndDirectoryPermissions\n            user info: \"https://attack.mitre.org/mitigations/M1022/\"\n            +>  bash_profileAndBashrc,\n                clearCommandHistory,\n                clearMacSystemLogs,\n                dylibHijacking,\n                logonScripts,\n                plistModification,\n                sSHAuthorizedKeys,\n                sSHHijacking,\n                startupItems,\n                sudoAndSudoCaching,\n                macFileAndDirectoryPermissionsModification\n\n        # remoteDataStorage \n            user info: \"https://attack.mitre.org/mitigations/M1029/\"\n            +>  clearMacSystemLogs\n    }    \n}\n\ncategory Network {\n    asset Router {\n        \n    }\n\n    asset InternalNetwork {\n        | obfuscateNetworkTraffic\n\n        & applicationLayerConnexion\n            ->  c2Connexion,\n                bypassNetworkIntrusionDetection,\n                router.externalNetwork.bypassNetworkIntrusionDetection\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            developer info: \"Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/\"\n\n        & dataExfiltration\n            ->  router.externalNetwork.dataExfiltration\n\n        & internalDefacement //} //(0.31)*Exponential(10.67)]\n            user info: \"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.\"\n            developer info: \"Time here is: assumed time defacement will last. Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwi5m_fWpY7qAhUaxMQBHU6yBxoQFjAKegQIMhAB&url=https%3A%2F%2Fdocuments.trendmicro.com%2Fassets%2Fwhite_papers%2Fwp-a-deep-dive-into-defacement.pdf&usg=AOvVaw2zOWHBoWsMXdfxK_fLTP_G, https://www.internetlivestats.com/total-number-of-websites/, https://www.helpnetsecurity.com/2020/04/03/back-up-data/, https://books.google.se/books?id=c7CpBAAAQBAJ&printsec=frontcover&dq=Cyber+Blockades&hl=en&sa=X&ved=0ahUKEwj4qsnGq47qAhVRXpoKHWACBqkQ6AEIKDAA#v=onepage&q=Cyber%20Blockades&f=false\"\n            ->  router.computer.os.service.browser.driveByCompromise // website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise\n\n        | attemptExfiltrationOverC2Channel @hidden\n             ->  exfiltrationOverC2Channel\n\n         & exfiltrationOverC2Channel //(0.79224)*Exponential(1878)]\n            developer info: \"Sources for distribution results: https://repo.zenk-security.com/Techniques%20d.attaques%20%20.%20%20Failles/Exfiltration%20Techniques%20-%20An%20examination%20And%20Emulation.pdf, https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf\"\n            user info: \" Data exfiltration is performed over the Command and Control channel.\"\n             ->  dataExfiltration\n\n        E firewallExists\n            <-  router.firewall\n            ->  router.firewall.bypassFirewall\n\n        | bypassNetworkIntrusionDetection \n\n        | bypassProxies\n\n        | attemptTransmittedDataManipulation @hidden\n            ->  transmittedDataManipulation\n\n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \"\n\n        & c2Connexion\n            ->  c2Connected\n\n        & exchangeServerCollection\n            user info: \"Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network.\"\n            ->  router.computer.os.dataCollected\n\n        | networkShareDiscovery\n            user info: \"Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \"\n        \n        | internalNetworkResourcesInformation\n\n        | remoteSystemsConnection\n            ->  router.internalNetwork.dataFromNetworkSharedDrive\n\n        | webShell //(0.1586)*Exponential(1)]\n            user info: \"Web shells may serve as Redundant Access or as a persistence mechanism.\"\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENT-WEB-SHELL-MALWARE-20200422.PDF\"\n            ->  persistence\n\n        | persistence \n        \n        | remoteAccess\n\n        | remoteCOMExecution\n            user info: \"Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) to execute on remote systems as part of lateral movement.\"\n\n        | remoteExecution\n\n        | c2Connected \n            ->  communicate,\n                dataObfuscation,\n                packetCapture,\n                dataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n                attemptExfiltrationOverC2Channel // https://us-cert.cisa.gov/ncas/alerts/aa20-107a\n\n        | communicate \n\n        | generateDomainNames \n\n        | dataObfuscation //(0.685)]\n            user info: \"This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system.\"\n            developer info: \"TTC instant/not applicable. sources used for probability distribution: https://www.academia.edu/7383312/Obfuscation_The_Hidden_Malware, https://books.google.se/books?id=tHK6CAAAQBAJ&pg=PA175&lpg=PA175&dq=percent+of+malware+using+obfuscation&source=bl&ots=uAffxqpZX2&sig=ACfU3U2kkIrqzLLQ8ipOR2RwkRPzc8Jp1A&hl=en&sa=X&ved=2ahUKEwio69vRhZrqAhVMEncKHYwLAwsQ6AEwC3oECGQQAQ#v=onepage&q=percent%20of%20malware%20using%20obfuscation&f=false\"\n            ->  junkData,\n                router.computer.os.steganography,\n                attemptProtocolImpersonation\n\n        & junkData\n            user info: \"Adversaries may add junk data to protocols used for command and control to make detection more difficult.\"\n            ->  bypassNetworkIntrusionDetection \n\n        | attemptProtocolImpersonation @hidden\n            ->  protocolImpersonation\n\n        & protocolImpersonation\n            user info: \"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts.\"\n            ->  communicate\n\n        | packetCapture\n\n        & taintSharedContent\n            user info: \"Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system.\"\n\n        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results : see automatedCollection.md file\"\n            user info: \"Adversaries may search network shares on computers they have compromised to find files of interest.\"\n\n        # encryptSensitiveInformation\n            user info:\"https://attack.mitre.org/mitigations/M1041/\"   \n            ->  transmittedDataManipulation,\n                exchangeServerCollection\n\n        # executionPrevention             \n            user info: \"https://attack.mitre.org/mitigations/M1038/\"\n            ->  router.computer.os.networkServiceScan\n\n        # filterNetworkTraffic //(0.8217)]\n            developer info: \"Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/\"\n            user info: \"https://attack.mitre.org/mitigations/M1037/\"   \n            ->  router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.directNetworkFlood,\n                router.computer.os.endpointDenialOfService,\n                router.computer.os.lateralToolTransfer,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.dNS,\n                router.computer.os.vNC,\n                router.computer.os.protocolTunneling,\n                router.computer.os.multiHopProxy,\n                router.computer.os.reflectionAmplification,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.bITSJobs,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                router.computer.os.forcedAuthentication \n\n        # limitAccessToResourceOverNetwork\n            user info: \"https://attack.mitre.org/mitigations/M1035/\"   \n            ->  router.computer.os.manInTheMiddle,\n                router.computer.os.remoteDesktopProtocol,\n                router.computer.os.windowsAdminShares,\n                router.computer.os.rDPHijacking,\n                router.computer.hardwareAdditions,\n                router.computer.os.service.externalRemoteServices\n\n        # multiFactorAuthentication //(0.99325)]\n            developer info: \"Sources for distribution result: https://security.googleblog.com/2019/05/new-research-how-effective-is-basic.html, https://www.zdnet.com/article/microsoft-using-multi-factor-authentication-blocks-99-9-of-account-hacks/\"\n            user info: \"https://attack.mitre.org/mitigations/M1032/\"\n            ->  exchangeServerCollection,\n                router.externalNetwork.dataFromCloudStorageObject\n\n        # networkIntrusionPrevention\n            user info: \"https://attack.mitre.org/mitigations/M1031/\"\n            ->  applicationLayerConnexion,\n                c2Connexion,\n                dataExfiltration,\n                exfiltrationOverC2Channel,\n                generateDomainNames,\n                junkData,\n                protocolImpersonation,\n                router.computer.os.userAccount.userExecution,\n                router.computer.user.maliciousLink,\n                router.computer.os.service.browser.spearphishingAttachment,\n                router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.encryptedChannel,\n                router.computer.os.dataCompressed,\n                router.computer.os.domainGenerationAlgorithms,\n                router.computer.os.internalProxy,\n                router.computer.os.externalProxy,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.standardEncoding,\n                router.computer.os.nonStandardEncoding,\n                router.computer.os.fallbackChannels,\n                router.computer.os.lateralToolTransfer,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.multiStageChannels,\n                router.computer.os.networkServiceScan,\n                router.computer.os.protocolTunneling,\n                router.computer.os.remoteFileCopy,\n                router.computer.os.applicationLayerProtocol,\n                router.computer.os.nonStandardPort,\n                router.computer.os.templateInjection,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay\n\n        # networkSegmentation\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            ->  router.computer.os.service.applicationDeploymentSoftware,\n                router.computer.os.manInTheMiddle,\n                router.computer.os.nonStandardPort,\n                router.computer.os.nonApplicationLayerProtocol,\n                router.computer.os.domainAccount,\n                router.computer.os.exfiltrationOverAternativeProtocol,\n                router.computer.os.privateKeys,\n                router.computer.os.runtimeDataManipulation,\n                router.computer.os.domainTrustDiscovery,\n                router.computer.os.lLMNR_NBT_NS_PoisoningAndSMBRelay,\n                router.computer.os.rDPHijacking,\n                router.computer.os.serviceStop\n\n        # sSLOrTLSInspection\n            user info: \"https://attack.mitre.org/mitigations/M1020/\"\n            ->  obfuscateNetworkTraffic,\n                router.computer.os.encryptedChannel,\n                router.computer.os.domainFronting\n    }\n\n    asset NetworkSharedDrive extends InternalNetwork {\n        & taintSharedContent\n            user info: \"Once a user opens the shared tainted content, tfhe malicious portion can be executed to run the adversary's code on a remote system.\"\n            +>  router.computer.os.executeCode\n\n        | dataFromNetworkSharedDrive //(0.892)*Exponential(9.952)]\n            developer info: \"Sources for distribution results : see automatedCollection.md file\"\n            user info: \"Adversaries may search network shares on computers they have compromised to find files of interest.\"\n            +>  router.computer.os.sensitiveDataCollected\n    }\n\n    asset ExternalNetwork {\n        | obfuscateNetworkTraffic\n\n        | bypassNetworkIntrusionDetection\n\n        | dataExfiltration\n\n        & dataFromCloudStorageObject //(0.11)]\n            developer info: \"Sources for distribution results: https://www.helpnetsecurity.com/2020/01/28/accessing-cloud-services/#:~:text=Shadow%20IT%20continues%20to%20expand,the%20cloud%20provider%20is%20breached., https://go.netskope.com/rs/665-KFP-612/images/2020-02-February%20Cloud%20and%20Threat%20Report-WEB%20%281%29.pdf\"\n            user info: \"Adversaries may access data objects from improperly secured cloud storage.\"\n            ->  router.computer.os.service.sensitiveDataCollected\n\n        | attemptDataEncryptedForImpact @hidden\n            ->  dataEncryptedForImpact\n\n        & dataEncryptedForImpact //} //(0.366)*Exponential(12)]\n            user info: \"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares.\"\n            developer info: \"Sources used for probability distribution result: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwje19GOp5rqAhXnl4sKHSJbDFcQFjANegQIMBAB&url=https%3A%2F%2Fwww.checkpoint.com%2Fdownloads%2Fproducts%2Fransomware-defense-survey-for-enterprise.pdf&usg=AOvVaw1Om5gqIJ3-Gcf7efzgIby9, https://news.sophos.com/en-us/2020/05/12/the-state-of-ransomware-2020/, https://www.exabeam.com/library/anatomy-ransomware-attack/\"\n\n        & externalDefacement //}\n            user info: \"Websites are a common victim of defacement that often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.\"\n\n        & exfiltrationOverWebService\n            user info: \"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.\"\n            ->  exfiltrationToCodeRepository,\n                exfiltrationToCloudStorage\n\n        | exfiltrationToCodeRepository\n            user info: \"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel.\"\n            ->  dataExfiltration\n\n        | exfiltrationToCloudStorage\n            user info: \"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel.\"\n            ->  dataExfiltration\n\n        | webService //(0.0445)]\n            developer info: \"Sources used for distribution result: https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html, https://krisk.io/publication/mitre-attack-securecomm19/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\"\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\"\n            ->  deadDropResolver,\n                bidirectionaCommunication,\n                oneWayCommunication\n\n        & deadDropResolver\n            user info: \"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure.\"\n            ->  router.internalNetwork.c2Connected\n\n        & bidirectionaCommunication\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel.\"\n            ->  router.internalNetwork.c2Connected\n            \n        & oneWayCommunication\n            user info: \"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel.\"\n            ->  router.internalNetwork.c2Connected\n\n        | attemptTransmittedDataManipulation @hidden //}\n            ->  transmittedDataManipulation\n \n        & transmittedDataManipulation //} //(24)]\n            user info: \"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\"\n            developer info: \"Sources used for distribution: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwiW28Dmk4vqAhXS4KYKHZvADy4QFjABegQIAhAB&url=https%3A%2F%2Fgo.thalesesecurity.com%2Frs%2F480-LWA-970%2Fimages%2F2019-DTR-Global-USL-Web.pdf&usg=AOvVaw2rKeGVWQgkIV7M0vjnCo1g, https://secure2.sophos.com/en-us/medialibrary/Gated%20Assets/white%20papers/the-state-of-encryption-today-wpna.pdf?cmp=701j0000001WskZAAS, www.businesswire.com/news/home/20190221005061/en/Survey-83-Percent-U.S.-Organizations-Accidentally-Exposed, https://content.fireeye.com/apt/rpt-apt38\"\n            \n        # encryptSensitiveInformation\n            user info:\"https://attack.mitre.org/mitigations/M1041/\"   \n            ->  transmittedDataManipulation\n\n        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.\n            developer info: \"Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/\"\n            user info: \"https://attack.mitre.org/mitigations/M1037/\"   \n            ->  dataFromCloudStorageObject,\n                router.computer.os.endpointDenialOfService,\n                router.computer.os.multiHopProxy,\n                router.computer.os.directNetworkFlood,\n                router.computer.os.reflectionAmplification,\n                router.computer.os.bITSJobs\n\n        # networkIntrusionPrevention\n            user info: \"https://attack.mitre.org/mitigations/M1031/\"\n            ->  bidirectionaCommunication,\n                deadDropResolver,\n                oneWayCommunication,\n                router.computer.os.service.browser.spearphishingAttachment,\n                router.internalNetwork.dataObfuscation,\n                router.internalNetwork.exfiltrationOverC2Channel,\n                router.internalNetwork.generateDomainNames,\n                router.computer.os.nonStandardPort,\n                router.computer.os.fallbackChannels,\n                router.computer.os.multiStageChannels,\n                router.computer.os.remoteFileCopy,\n                router.computer.os.applicationLayerProtocol\n\n        # networkSegmentation // Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            ->  router.computer.os.nonStandardPort,\n                router.computer.os.privateKeys,\n                router.computer.os.runtimeDataManipulation        \n\n        # sSLOrTLSInspection\n            user info: \"https://attack.mitre.org/mitigations/M1020/\"\n            ->  obfuscateNetworkTraffic\n    }\n\n    asset Firewall {\n        & bypassFirewall @hidden\n            ->  router.internalNetwork.dataExfiltration,\n                router.internalNetwork.c2Connexion\n\n        # filterNetworkTraffic //(0.8217)] // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.\n            developer info: \"Sources for distribution result: https://www.cmu.edu/mits/files/breaking-the-ddos-attack-chain.pdf, https://www.researchgate.net/publication/220240884_An_Effective_DDoS_Attack_Detection_and_Packet-Filtering_Scheme, https://www.akamai.com/us/en/multimedia/documents/report/trends-in-the-cost-of-web-application-ddos-attacks-apac-ponemon-report.pdf, https://uk.pcmag.com/encryption/127134/trend-micro-home-network-security, http://www.securenetconsulting.co.uk/2016/06/why-you-need-dns-firewall-in-your.html, https://www.itproportal.com/2011/04/19/firewalls-only-60-cent-effective-against-malware/\"\n            user info: \"https://attack.mitre.org/mitigations/M1037/\"   \n            ->  router.computer.os.service.cloudInstanceMetadataAPI,\n                router.computer.os.bITSJobs,\n                router.computer.os.portKnocking\n\n        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.\n            user info: \"https://attack.mitre.org/mitigations/M1030/\"\n            ->  router.computer.os.nonStandardPort,\n                router.computer.os.service.externalRemoteServices,\n                router.computer.os.remoteDesktopProtocol,\n                router.computer.os.distributedComponentObjectModel,\n                router.computer.os.windowsRemoteManagement\n    }\n}\n\ncategory Hardware {\n    asset Computer {\n        | infectedComputer\n            ->  router.internalNetwork.applicationLayerConnexion,\n                router.internalNetwork.attemptDataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-049a\n                router.externalNetwork.attemptDataEncryptedForImpact, // https://us-cert.cisa.gov/ncas/alerts/aa20-049a\n                os.nonStandardPort,\n                os.fileDeletion,\n                os.attemptPowerShell,\n                os.accountManipulation,\n                os.screenCapture,\n                os.validAccounts,\n                peripheralDevice.infectedMedia,\n                peripheralDevice.dataFromRemovableMedia\n\n        | infectedWindowsComputer\n                \n        | infectedLinuxComputer\n\n        | infectedMacOSComputer \n\n        | unresponsive\n\n        & hardwareAdditions \n\n        | attemptExfiltrationOverPhysicalMedium @hidden\n            ->  exfiltrationOverPhysicalMedium\n\n        & exfiltrationOverPhysicalMedium //(0.79224)*Exponential(7.69)]\n            developer info: \"Sources for distribution results: https://www.mcafee.com/enterprise/en-us/assets/reports/rp-data-exfiltration.pdf\"\n            user info: \"https://attack.mitre.org/techniques/T1052/\"\n            ->  exfiltrationOverUSB,\n                peripheralDevice.dataExfiltration\n\n        | exfiltrationOverUSB\n            user info: \"Adversaries may attempt to exfiltrate data over a USB connected physical device.\"\n            ->  peripheralDevice.dataExfiltration\n\n        & collectAudio //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results\"\n            ->  os.dataCollected\n        \n        | peripheralDeviceDiscovery\n            developer info: \"Binary distribution result (endpoint)\"\n            user info: \"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\"\n\n        | collectVideo\n            ->  os.dataCollected\n\n        # disableOrRemoveFeatureOrProgram\n            user info: \"https://attack.mitre.org/techniques/T1064/\"\n            ->  exfiltrationOverPhysicalMedium\n    }\n\n    asset HardwareAddition extends Computer {\n        | physicalAccess //(0.11)*Exponential(8)]\n            developer info: \"Sources for distribution result: https://www.if-insurance.com/large-enterprises/insight/risk-consulting-magazine/risk-consulting-2019-1/physical-security-controls-of-it-and-ics, https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf\"\n            ->  hardwareAdditions,\n                os.attemptAccessibilityFeatures\n            \n        & hardwareAdditions \n            user info: \"Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access.\" \n            +>  os.executeCode,\n                os.attemptGatekeeperBypass\n    }\n\n    asset PeripheralDevice {\n        | collectVideo\n\n        | collectAudio //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results\"\n\n        | dataExfiltration\n\n        | infectedMedia\n\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n    }\n\n    asset Webcam extends PeripheralDevice {\n        | collectVideo\n            +>  computer.collectVideo\n    }\n\n    asset RemovableMedia extends PeripheralDevice {\n        | dataFromRemovableMedia //(0.5352)*Exponential(6.47)]\n            developer info: \"Sources for distribution results: See dataFromRemovableMedia.md file and automatedCollection.md\"\n            +>  computer.os.sensitiveDataCollected\n\n        | infectedMedia\n\n        | dataExfiltration\n    }\n    \n    asset Microphone extends PeripheralDevice {\n        | collectAudio //(0.74)*Exponential(0.1)]\n            developer info: \"Sources for distribution results: https://capec.mitre.org/data/definitions/634.html and Video Capture results\"\n            +>  computer.collectAudio\n    }\n}\n\nassociations {\n    User [user] * <--Uses--> * [computer] Computer\n    User [user] 1 <--Logsin--> * [userAccount] UserAccount\n    AdminAccount [adminAccount] * <--Manages--> * [userAccount] UserAccount\n    UserAccount [userAccount] * <--Accesses--> 1 [os] OS\n    AdminAccount [adminAccount] * <--Accesses--> 1 [os] OS\n    OS [os] 1 <--Runs--> * [service] Service\n    Computer [computer] * <--Operates--> * [os] OS\n    Router [router] * <--Communicates--> * [computer] Computer\n    Firewall [firewall] 1 <--Protects--> 1 [router] Router\n    InternalNetwork [internalNetwork] * <--Connects--> * [router] Router\n    ExternalNetwork [externalNetwork] * <--Connects--> * [router] Router\n    Browser [browser] * <--Accesses--> * [service] Service\n    Computer [computer] * <--Serves--> * [peripheralDevice] PeripheralDevice\n}\n"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "", "output": "category IcsControlResources{\n\n    asset ControlServer extends IcsApplication \n        user info: \"A device which acts as both a server and controller, that hosts the control software used in communicating with lower-level control devices in an ICS network.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Control_Server\"\n      {\n      // Override view related attack steps (Impact) becase they are not relevant to this asset\n      | manipulationOfView @Override\n\n      | lossOfView @Override\n      }\n\n}\n"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "", "output": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.testLang\"\n#version: \"0.0.1\"\n\ncategory InheritanceOverrides {\n\n  asset Parent {\n\n    | test_base_step\n      -> other_step1\n\n    | other_step1\n\n    | other_test\n  }\n\n  asset Child extends Parent {\n\n    | test_base_step\n      +> other_step2,\n         other_step3\n\n    | other_step2\n\n    | other_step3\n\n    | other_test\n      +> other_step3\n  }\n\n}\n\ncategory subType{\n  asset BaseAsset {\n\n    | base_step1\n  }\n\n  asset SubAsset extends BaseAsset{\n    | subasset_step2\n  }\n\n  asset OtherAsset {\n    | other_step1\n      -> subtype_test_assoc_field1[SubAsset].subasset_step2\n  }\n\n}\n\ncategory interleavedVariables{\n  asset AssetA {\n    let A1 = fieldB\n    let A2 = fieldB.B1()\n    | testStepA\n      -> A2().testStepA,\n         A1().testStepB\n  }\n\n  asset AssetB {\n    let B1 = fieldA\n    let B2 = fieldA.A1()\n    | testStepB\n      -> B1().testStepA,\n         B2().testStepB\n  }\n\n}\n\ncategory setOperations{\n  asset SetOpsAssetA {\n    | testStepSetOpsA\n      -> (fieldB1 \\/ fieldB2).testStepSetOpsB1,\n         (fieldB1 /\\ fieldB2).testStepSetOpsB2,\n         (fieldB1 - fieldB2).testStepSetOpsB3\n  }\n\n  asset SetOpsAssetB {\n    | testStepSetOpsB1\n\n    | testStepSetOpsB2\n\n    | testStepSetOpsB3\n  }\n}\n\nassociations {\n  // Subtype test association\n  BaseAsset [subtype_test_assoc_field1] * <-- SubtypeTestAssoc --> * [subtype_test_assoc_field2] OtherAsset\n  // Interleaved variables association\n  AssetA [fieldA] * <-- InterleaveVarsAssoc --> * [fieldB] AssetB\n  // Set operations test associationsA\n  SetOpsAssetA [fieldA1] * <-- SetOps1 --> * [fieldB1] SetOpsAssetB\n  SetOpsAssetA [fieldA2] * <-- SetOps2 --> * [fieldB2] SetOpsAssetB\n  SetOpsAssetA [fieldA3] * <-- SetOps3 --> * [fieldB3] SetOpsAssetB\n}\n"}
{"instruction": "Represent the attack behavior below in your custom Meta Attack Language.", "input": "", "output": "category System {\n\n    asset EthernetGatewayECU extends GatewayECU\n        user info: \"Specifies a Gateway ECU that has additionaly Ethernet network capabilities.\"\n        {\n        | fullAccess\n                developer info: \"Overriding from GatewayECU\"\n                +>\ttrafficVNetworks.adversaryInTheMiddle, // This will act as Firewall and IDPS are disabled on vehicle networks\n                    trafficNetworks.adversaryInTheMiddle, // This will act as above but on the ethernet network\n                    forwarding\n\n        | forwarding\n                developer info: \"Forwarding is the lightest interaction with the gateway, where the gateway simply retransmits received messages. Vulnerabilities may, however, lead to compromise of the gateway as well as of the associated firewall. Therefore, Forwarding leads to Connect.\"\n                -> \tconnect,\n                    bypassFirewall  // If firewall is not enabled then bypass it.\n\n        & bypassFirewall\n                user info: \"If firewall is disabled, then attacker can bypass it.\"\n                ->\tgatewayBypassIDPS, // Added here to stop those attacks when firewall is enabled.\n                    gatewayNoIDPS,\n                    trafficNetworks.accessNetworkLayer\n\n        # firewallProtection // Firewall is just a defense on gateway ECU.\n                user info: \"Firewall protection comes from the existence of a correctly configured firewall.\"\n                -> bypassFirewall\n\n        | deny\n                user info: \"Perform denial of service attack on all the connected networks.\"\n                -> \ttrafficVNetworks.deny,\n                    trafficNetworks.deny\n        }\n\n    }\n\ncategory Networking {\n\n    asset Router extends Service {\n\n        | fullAccess\n                +> \ttrafficNetworks.adversaryInTheMiddle,\n                    forwarding\n\n        # correctlyConfiguredFirewallExists\n                ->\tnoFirewallProtection\n\n        | noFirewallProtection\n                user info: \"Firewall protection comes from (i) the existence of a (ii) correctly configured firewall.\"\n                -> bypassFirewall\n\n        | forwarding\n                developer info: \"Forwarding is the lightest interaction with the router, where the router simply retransmits received messages. Vulnerabilities may, however, lead to compromise of the router as well as of the associated firewall. Therefore, Forwarding leads to Connect.\"\n                -> \tnetworkConnectUninspected,\n                    networkConnectInspected,\n                    bypassFirewall\n\n        & bypassFirewall\n                ->\ttrafficNetworks.accessNetworkLayer\n\n        | deny\n                -> \ttrafficNetworks.deny\n        }\n\n    asset EthernetNetwork extends VehicleNetwork\n        user info: \"This represents the homonym network when using IPv4.\"\n        {\n        //Override\t\n        | physicalAccess\n                user info: \"Physical access currently includes close-enough-to-touch. Merged coreLang asset Network with vehicleLang asset Network\"\n                +> \tbypassPortSecurity\n        \n        | accessUninspected\n                user info: \"Access implies the possibility to submit packets over the network. In a generic network, it does not imply the possibility to listen to others' traffic on the network. You are outside the router but with a possibility to communicate in to the network.\"\n                ->\tdeny,\n                applications.networkConnectUninspected\n\n        & bypassPortSecurity\n                 -> \tbypassAccessControl\n  \n        | bypassAccessControl\n                -> \taccessDataLinkLayer\n\n        | accessDataLinkLayer\n                user info: \"Hosts with a MAC address on the network have Layer 2 access.\"\n                developer info: \"Access to data link layer (OSI layer 2) may enable eavesdropping, depending on the kind of network, as well as ARP cache poisoning either on the router side or any of the hosts on the network. (Router side ARP cache poisoning is modelled as a property on the network.)\"\n                -> \taccessNetworkLayer, \n                    aRPCachePoisoning\n  \n        | accessNetworkLayer\n                user info: \"Network layer (OSI layer 3) access implies the possibility to submit IP packets over the network. It does not imply the possibility to listen to others' trafic on the network. You are outside the router but with a possibility to communicate in to the network.\"\n                -> \tapplications.networkConnectUninspected,\n                    trafficRouters.forwarding,\n                    trafficEthGatewayECU.forwarding,\n                    deny\n  \n        & aRPCachePoisoning\n                user info: \"ARP spoofing works on all common IPv4 networks, both wirebound and wireless. For WPA2Enterprise, it can be exploited due to Hole196 (cf. https://www.cwnp.com/forums/posts?postNum=300580).\"\n                    -> \tadversaryInTheMiddle\n \n        # portSecurity\n                user info: \"You can use port security to restrict a port's ingress traffic by limiting the MAC addresses that are allowed to send traffic into the port.\"\n                developer info: \"http://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst6500/ios/12-2SX/configuration/guide/book/port_sec.html\"\n                -> \tbypassPortSecurity\n\n        # staticARPTables \n                -> \taRPCachePoisoning\n\n        // Override\n        | eavesdrop\n                user info: \"Attackers can sometimes eavesdrop. Merged coreLang asset Network with vehicleLang asset Network\"\n                +> \tdataflows.eavesdrop\n        // Override\n        | adversaryInTheMiddle\n                user info: \"Attackers can sometimes intercept and tamper with communications on the IP layer. Higher-layer encryption and authentication, such as HTTPS, may still prevent the compromise of information in dataflows. Merged coreLang asset Network with vehicleLang asset Network\"\n                +> \taccessUninspected,\n                    accessDataLinkLayer,\n                    eavesdrop,\n                    dataflows.adversaryInTheMiddle,\n                    trafficRouters.deny,\n                    trafficEthGatewayECU.deny\n        // Override\n        | deny\n                user info: \"The network is made unavailable. Merged coreLang asset Network with vehicleLang asset Network\"\n                +> \tdataflows.deny\n        }\n\n}\n\nassociations {\n\n    Dataflow\t\t[realizingDataflow]\t\t\t\t* \t<-- NetworkVirtualization \t\t\t--> 0..1\t[virtualNetwork] \t\t\t\tEthernetNetwork\n    EthernetNetwork [ethernetNetworks] \t\t\t\t* \t<-- EthernetConnection \t\t\t\t--> * \t[ethernetNetworkMachines]\t\t\tMachine\n        user info: \"Physical machines can be connected to networks. If services are not explicitly connected to other networks, it is assumed that they are communicating over the physically connected one.\"\n    EthernetNetwork [trafficNetworks] \t\t\t\t* \t<-- Connection \t\t\t\t\t\t--> * \t[trafficRouters] \t\t\t\tRouter\n    EthernetNetwork [trafficNetworks] \t\t\t\t* \t<-- Connection \t\t\t\t\t\t--> * \t[trafficEthGatewayECU] \t\t\tEthernetGatewayECU\n}\n"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "", "output": "category IcsInterfaceResources{\n\n    asset HMI extends IcsApplication \n        user info: \"The Human-Machine Interface (HMI) refers to the graphical, textual and auditory information the program presents to the user (operator) using computer monitors and audio subsystems, and the control sequences the user employs to control the program.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Human-Machine_Interface\"\n      {\n\n      }\n\n}\n"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory IAM {\n\n    abstract asset IAMObject extends Information\n      user info: \"An IAM object represents the base logic shared by all assets used for Identity and Access Management roles(Identity, Group, Privileges).\"\n    {\n      # notPresent [Disabled]\n        user info: \"This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility that the IAM object does not actually exist.\"\n        developer info: \"Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it.\"\n        ->  successfulAssume,\n            successfulLockout\n\n      | attemptAssume @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulAssume\n\n      & successfulAssume @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  assume\n\n      | assume\n        user info: \"When an attacker is able to assume an IAM asset the privileges associated with it can always be exploited, other behaviour is asset specific.\"\n        ->  execPrivApps.authenticate,\n            highPrivApps.authenticate,\n            lowPrivApps.specificAccessAuthenticate,\n            readPrivData.authorizedReadFromIAM,\n            writePrivData.authorizedWriteFromIAM,\n            writePrivData.authorizedApplicationRespondConnectFromIAM,\n            deletePrivData.authorizedDeleteFromIAM,\n            managedIAMs.attemptAssume,\n            subprivileges.attemptAssume\n\n      | deny\n        user info: \"Denying Identity, Group, or Privileges means that they are unavailable to legitimate users and which may be locked out as a result.\"\n        +>  attemptLockout\n\n      | write\n        user info: \"Overwriting Identity, Group, or Privileges means that the attacker is able to assume them.\"\n        +>  attemptAssume\n\n      | attemptLockout @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulLockout\n\n      & successfulLockout @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  lockout\n\n      | lockout {A}\n        user info: \"The Identity, Group, or Privileges has been locked out and cannot be used by legitimate users. This means that the applications that they can execute and data they can read might also be denied if all of the access roles that could execute or read them, respectively, have been locked out.\"\n        ->  execPrivApps.denyFromLockout,\n            readPrivData.denyFromLockout,\n            subprivileges.lockout\n    }\n\n    asset Identity extends IAMObject\n      user info: \"An identity models an IAM identity that should then be associated with privileges on other instances.\"\n      developer info: \"An identity can be visualised as a group of assumable roles that can be associated with many credentials.\"\n    {\n      # notPresent [Disabled]\n        user info: \"Prevent unsafe user activity too if the Identity is assumed to not exist.\"\n        +>  successfulUnsafeUserActivity\n\n      | assume {C,I,A}\n        user info: \"After authentication or compromise of an account/identity, assume its privileges.\"\n        developer info: \"This is both legitimate and illegitimate access! Also assume all the privileges of the parent identities (on the above level/inherited by this identity) because those represent the group of (inherited) roles.\"\n        +>  parentId.attemptAssume,\n            memberOf.attemptAssume\n\n      & lockoutFromCredentials @hidden\n        developer info: \"Only lockout an identity if all of the Credentials that could be used to authenticate have been denied.\"\n        ->  attemptLockout\n\n      | lockout\n        user info: \"If all of the Identities belonging to a Group are lockedout we assume that the Group as a whole is lockedout.\"\n        +>  memberOf.lockoutFromMembers\n\n      !E missingUser @hidden\n        developer info: \"If there are no Users asociated with this Identity we make the worst case scenario assumption regarding the strength of the Credentials belonging to it.\"\n        <-  users\n        ->  credentials.weakCredentials\n\n      | attemptUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulUnsafeUserActivity\n\n      & successfulUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  unsafeUserActivity\n\n      | unsafeUserActivity\n        user info: \"Propagate unsafe user activity to any Applications or subset of privileges associated with this Identity.\"\n        ->  execPrivApps.attemptUnsafeUserActivity,\n            highPrivApps.attemptUnsafeUserActivity,\n            lowPrivApps.attemptUnsafeUserActivity,\n            subprivileges.attemptUnsafeUserActivity\n    }\n\n    asset Privileges extends IAMObject\n      user info: \"A privileges asset can be associated with another IAMObject to reason about a specific subset of given privileges on Applications and Data.\"\n      modeler info: \"The privileges asset is not meant to be used normally when assigning permissions. Identities and Groups should be directly associated with the relevant assets. The purpose of the Privileges asset is to be used as a speculative asset when reasoning about additional privileges that a particular Group or Identity may have as a result of either poor configurations or the attacker's actions.\"\n    {\n      # notPresent [Disabled]\n        user info: \"Prevent unsafe user activity too if the Privileges are assumed to not exist.\"\n        +>  successfulUnsafeUserActivity\n\n      | assume {C,I,A}\n        user info: \"After authentication or compromise assume its privileges.\"\n        developer info: \"Assume identity/group the privileges are associated with since the privileges are simply an extension of it.\"\n        +>  IAMOwners.attemptAssume\n\n      | attemptUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulUnsafeUserActivity\n\n      & successfulUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  unsafeUserActivity\n\n      | unsafeUserActivity\n        user info: \"Propagate unsafe user activity to any Applications or subset of privileges associated with these Privileges.\"\n        ->  execPrivApps.attemptUnsafeUserActivity,\n            highPrivApps.attemptUnsafeUserActivity,\n            lowPrivApps.attemptUnsafeUserActivity,\n            subprivileges.attemptUnsafeUserActivity\n    }\n\n    asset Group extends IAMObject\n      user info: \"A group is a way to group together identities and/or other groups. This allows the expression of hierarchical IAM (structured inheritance).\"\n      modeler info: \"Groups can be used instead of nested identities to make the model more intuitive and clearer to understand.\"\n    {\n      | assume {C,I,A}\n        user info: \"If an identity of a group is compromised then the whole group(i.e. all other privileges of the group) should be considered as compromised. Furthermore, the parent groups should also be considered compromised.\"\n        developer info: \"The parent groups should be compromised because all the privileges of the parent groups are inherited on the children groups but lower children groups should not be compromised because lower levels might have inherited plus additional privileges.\"\n        +>  parentGroup.attemptAssume\n\n      & lockoutFromMembers @hidden\n        developer info: \"If all of the Identities belonging to a Group are lockedout we assume that the Group as a whole is lockedout.\"\n        ->  attemptLockout\n    }\n\n    asset Credentials extends Information\n      user info: \"Credentials can be used to get access to an Identity, but they can also be used as an encryption/signing key for Data.\"\n      modeler info: \"Credentials represent a variety of access control mechanism(e.g. username and password pair, keycards, biometric data).\"\n    {\n      # notDisclosed [Enabled]\n        user info: \"Describes the case where the password/credential is leaked to some location, it can then be available to the attacker.\"\n        ->  useLeakedCredentials\n\n      # notGuessable [Enabled]\n        user info: \"Describes if the credentials can be guessed by the attacker(i.e. they represent a password or passphrase).\"\n        ->  guessCredentials\n\n      # unique [Enabled]\n        user info: \"Describes if the credentials are known to be unique and therefore cannot be used in a credentials reuse attack.\"\n        ->  credentialsReuse,\n            propagateOneCredentialCompromised\n\n      # notPhishable [Disabled]\n        user info: \"Describes if the credentials cannot be phished(they are biometric, e.g. fingerprints or iris scans, or physical, e.g. access cards or keys, elements).\"\n        ->  credentialTheft\n\n      | read\n        user info: \"If the attacker is able to read the information containing credentials we assume that they are compromised.\"\n        +> attemptUse\n\n      | write\n        user info: \"If the attacker is able to write the information containing credentials we assume that they have changed them for the authentication process.\"\n        +> attemptUse\n\n      | deny\n        user info: \"If the attacker is able to deny the information containing credentials we assume that they have denied them for the authentication process.\"\n        +> identities.lockoutFromCredentials\n\n      | useLeakedCredentials [EasyAndCertain]\n        user info: \"If the password/credential is leaked to some location, it can then be available to the attacker and therefore it can be used.\"\n        ->  attemptUse\n\n      | attemptCredentialsReuse @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  credentialsReuse,\n            requiredFactors.attemptCredentialsReuse\n\n      & credentialsReuse @hidden\n        developer info: \"The user is reusing credentials which means that the attacker is able to compromise all of the non-unique credentials associated with this user.\"\n        ->  attemptUse\n\n      | attemptUse @hidden\n        developer info: \"In order to use these credentials the attacker may require additional factors.\"\n        ->  use\n\n      & use {C}\n        user info: \"The attacker is using the credentials to perform a legitimate authentication.\"\n        ->  identities.attemptAssume,\n            encryptedData.accessDecryptedData,\n            signedData.accessSpoofedData,\n            attemptPropagateOneCredentialCompromised,\n            credentials.use, // these credentials may serve as additional required factors for other credentials in a multi-factor authentication\n            hashes.attemptUse, // the hashes generated based on these credentials are also compromised as the attacker is assumed to know which hashing functions were used\n            origCreds.guessCredentialsFromHash\n\n      | attemptPropagateOneCredentialCompromised @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  propagateOneCredentialCompromised\n\n      & propagateOneCredentialCompromised @hidden\n        developer info: \"Intermediate step used to propagate the credentials reuse attack step.\"\n        ->  credentials*.identities.users.oneCredentialCompromised\n\n      | attemptCredentialTheft @hidden\n        developer info: \"The attacker is attempting to access the credentials.\"\n        ->  credentialTheft,\n            requiredFactors.attemptCredentialTheft\n\n      & credentialTheft @hidden\n        developer info: \"The attacker is able to steal the credentials.\"\n        ->  attemptUse\n\n      !E missingIdentity @hidden\n        developer info: \"If there are no Identities asociated with these Credentials we make the worst case scenario assumption regarding the strength of the Credentials.\"\n        <-  identities\n        ->  weakCredentials\n\n      | weakCredentials @hidden\n        developer info: \"Intermediate step used to represent how weak the credentials the user employs are. This is inversely related to the securityAwareness defense on the User asset associated with the Identity to which these Credentials belong. If either the User or Identity associations are missing the assumption is made that the crentials are weak and therefore guessable by the attacker.\"\n        ->  guessCredentials,\n            requiredFactors.weakCredentials\n\n      !E credsHashed @hidden\n        developer info: \"If there are no associated hashes the assumption is that the credentials are guessable without any additional requirements.\"\n        <-  hashes\n        ->  guessCredentialsFromHash\n\n      | guessCredentialsFromHash @hidden\n        developer info: \"If hashes are associated with this Credentials asset the assumption is that one of those hashes is required by the attacker to be able to perform a guessing attack.\"\n        ->  guessCredentials\n\n      & guessCredentials @hidden [HardAndUncertain]\n        developer info: \"The attacker can try to just guess a set of credentials. The likelihood of succeeding is dependent on how strong the credentials are.\"\n        modeler info: \"The guessability of the Credentials is influenced by the notGuessable defense on this asset and the securityAwareness defense on the User associated with the Identity that these Credentials belong to. If either the User or Identity associations are missing the assumption is made that the crentials are guessable and only the notGuessable defense would play a role in restricting this attack step.\"\n        ->  attemptUse\n    }\n}\n\nassociations {\n  Credentials      [encryptCreds]      0..1 <-- EncryptionCredentials --> *    [encryptedData]          Data\n      user info: \"Encrypted data can be associated with the relevant encryption credentials.\"\n  Credentials      [signingCreds]      0..1 <-- SigningCredentials    --> *    [signedData]             Data\n      user info: \"Signed data can be associated with the relevant signing credentials.\"\n  Credentials      [hashes]               * <-- HashedCredentials     --> 0..1 [origCreds]              Credentials\n      user info: \"Credentials can be associated with their hashed counterparts. Multiple hashes can be generated for the same Credentials, but a hash is unique to one set of Credentials.\"\n  Credentials      [credentials]          * <-- ConditionalAuthentication --> * [requiredFactors]       Credentials\n      user info: \"Credentials can be associated with other Credentials to depict conditional authentication procedures, such as multi-factor authentication.\"\n  // ### Access Control happens below\n  Identity         [identities]           * <-- IdentityCredentials   --> *    [credentials]            Credentials\n  Identity         [parentId]             * <-- CanAssume             --> *    [childId]                Identity\n      user info: \"Starting from a parent Identity, the child Identities can be assumed due to inheritance.\"\n  Group            [memberOf]             * <-- MemberOf              --> *    [groupIds]               Identity\n  Group            [parentGroup]          * <-- MemberOf              --> *    [childGroups]            Group\n  // Then, Access Control on application level\n  IAMObject        [executionPrivIAMs]    * <-- ExecutionPrivilegeAccess       --> * [execPrivApps]     Application\n      user info: \"Every application executes on a system with privileges of a specified identity on the system. If the application is compromised then the privileges should be compromised.\"\n  IAMObject        [highPrivAppIAMs]      * <-- HighPrivilegeApplicationAccess --> * [highPrivApps]     Application\n      user info: \"High privilege application access on an Application results in the (full) access/compromise of the application and all the child applications.\"\n  IAMObject        [lowPrivAppIAMs]       * <-- LowPrivilegeApplicationAccess  --> * [lowPrivApps]      Application\n      user info: \"Low privilege application access on an Application allows only the local interaction with the application and all the specified privileges.\"\n  // Finally, Access control on data\n  IAMObject        [readingIAMs]          * <-- ReadPrivileges        --> *    [readPrivData]           Data\n  IAMObject        [writingIAMs]          * <-- WritePrivileges       --> *    [writePrivData]          Data\n  IAMObject        [deletingIAMs]         * <-- DeletePrivileges      --> *    [deletePrivData]         Data\n  // Associations for the Privileges asset\n  IAMObject        [IAMOwners]            * <-- HasPrivileges         --> *    [subprivileges]          Privileges\n      user info: \"Identities, Groups, and Privileges may have a subset of Privileges that we logically separate to model specific scenarios, such as partial lockouts or speculating about possible privileges.\"\n  // Self-referential associations for the IAMObject asset\n  IAMObject        [managers]             * <-- AccountManagement     --> *    [managedIAMs]            IAMObject\n      user info: \"Identities, Groups, and Privileges may have account management roles for other Identities, Groups, and Privileges.\"\n}\n"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory DataResources {\n\n    asset Information\n      user info: \"Represents any type of information that might be contained inside Data. This include general purpose information, but also serves as the basis for more specialized types, such as Credentials and SoftwareProduct. Information represents the abstract concept, while Data represent an actual instance of information stored or transmitted digitally.\"\n    {\n      | read\n        user info: \"The attacker is able to read the information. They may still be unable to extract it, which represents the adversary being able to read it themselves. This is the case if autonomous code is able to read it, but lack the required networking connections to transmit it back to the adversary.\"\n        ->  dataReplicas.read,\n            containerData.read\n\n      | write\n        user info: \"The attacker is able to write the information.\"\n        ->  dataReplicas.write,\n            containerData.write,\n            dependentApps.fullAccess,\n            delete\n\n      | delete\n        user info: \"The attacker is able to delete the information.\"\n        ->  dataReplicas.delete,\n            containerData.delete,\n            deny\n\n      | deny\n        user info: \"The attacker is able to deny the information.\"\n        ->  dataReplicas.deny,\n            containerData.deny,\n            dependentApps.deny\n\n      | extract\n        user info: \"The attacker is able to extract the information. This means that they have a path available through which they can transfer the information back to a system that they control.\"\n\n      // The following 5 attack steps are used to implement data replication\n      | attemptReadFromReplica @hidden\n        developer info: \"Reading one replica allows the attacker to read all other replicas as well since the information contained in them is the same.\"\n        ->  read\n\n      & attemptWriteFromReplica @hidden\n        developer info: \"Information can be overwritten only if all replicas have been overwritten.\"\n        ->  write\n\n      & attemptDeleteFromReplica @hidden\n        developer info: \"Information can be deleted only if all replicas have been deleted.\"\n        ->  delete\n\n      & attemptDenyFromReplica @hidden\n        developer info: \"Information can be denied only if all replicas have been denied.\"\n        ->  deny\n\n      | attemptExtractFromReplica @hidden\n        developer info: \"The attacker attempts to extract the information.\"\n        ->  extract\n    }\n\n    asset Data\n      user info: \"Any form of data that can be stored or transmitted.\"\n    {\n      # notPresent [Disabled]\n        user info: \"This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility of data not existing on the associated container (i.e. Hardware, Application, Network, etc.).\"\n        developer info: \"Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it.\"\n        ->  applicationRespondConnect,\n            successfulRead,\n            successfulWrite,\n            successfulDeny,\n            successfulDelete,\n            reverseReach,\n            extract\n\n      | authorizedAccessFromApplication @hidden\n        developer info: \"Try to gain access to the data through permissions.\"\n        ->  authorizedReadFromApplication,\n            authorizedWriteFromApplication,\n            authorizedDeleteFromApplication\n\n      !E dataEncrypted @hidden\n        developer info: \"If the data are encrypted then accessing them requires the associated encryption credentials/key. Data will be considered encrypted if there is at least one Credentials instance associated with it. Otherwise, 'accessUnencryptedData' is triggered.\"\n        <-  encryptCreds\n        ->  accessUnencryptedData\n\n      !E dataSigned @hidden\n        developer info: \"If the data are signed then writing them requires the associated signing credentials/key. Data will be considered signed if there is at least one Credentials asset associated with it. Otherwise, 'accessUnsignedData' is triggered.\"\n        <-  signingCreds\n        ->  accessUnsignedData\n\n      E payloadInspectionBypassFromEncryptedData @hidden\n        developer info: \"If the data are encrypted then payload inspection cannot be performed on the connection rules they are transmitted over.\"\n        <-  encryptCreds\n        ->  bypassPayloadInspectionFromEncryptedData\n\n      let senderOutgoingApplicationConnections = (senderApp.appConnections \\/ senderApp.outgoingAppConnections)\n      let receiverIngoingApplicationConnections = (receiverApp.appConnections \\/ receiverApp.ingoingAppConnections)\n      let transitNetworkInboundAllowedConnections = (transitNetwork.netConnections \\/ transitNetwork.ingoingNetConnections \\/ transitNetwork.diodeIngoingNetConnections)\n      let transitNetworkOutboundAllowedConnections = (transitNetwork.netConnections \\/ transitNetwork.outgoingNetConnections)\n      | bypassPayloadInspectionFromEncryptedData @hidden\n        developer info: \"The connection rules that the encrypted data traverse over cannot provide payload inspection since they are assumed to permit encrypted traffic. This implies that the attacker could simply encrypt their own communications to evade inspection.\"\n        ->  (senderOutgoingApplicationConnections() /\\ transitNetworkInboundAllowedConnections()).payloadInspectionBypassed,\n            (receiverIngoingApplicationConnections() /\\ transitNetworkOutboundAllowedConnections()).payloadInspectionBypassed\n\n      & accessUnencryptedData @hidden\n        developer info: \"If data are unencrypted then access them.\"\n        ->  accessDecryptedData\n\n      & accessUnsignedData @hidden\n        developer info: \"If data are unsigned then alter them.\"\n        ->  accessSpoofedData\n\n      | accessSpoofedData @hidden\n        developer info: \"Intermediate attack step to only allow effects of 'accessUnsignedData' on data after compromising the signing credentials or signing is disabled.\"\n        ->  applicationRespondConnect,\n            successfulWrite\n\n      | accessDecryptedData @hidden\n        developer info: \"Intermediate attack step to only allow effects of 'accessUnencryptedData' on data after compromising the encryption credentials or encryption is disabled.\"\n        ->  applicationRespondConnect,\n            successfulRead,\n            successfulWrite,\n            successfulDelete\n\n      | attemptApplicationRespondConnect @hidden\n        developer info: \"Intermediate attack step to handle defenses.\"\n        ->  applicationRespondConnect\n\n      & applicationRespondConnect @hidden\n        developer info: \"In order to perform a respond connect attack the adversary must be able to write the received data.\"\n        ->  senderApp.attemptNetworkConnectFromResponse,\n            containedData.applicationRespondConnect\n\n      | authorizedApplicationRespondConnectFromApplication @hidden\n        developer info: \"The adversary can attempt a respond connect attack from an Application, but they still require write permissions in order to perform it.\"\n        ->  authorizedApplicationRespondConnect\n\n      | authorizedApplicationRespondConnectFromIAM @hidden\n        developer info: \"The attacker has obtained the access control permissions required to modify the incoming requests.\"\n        ->  authorizedApplicationRespondConnect\n\n      & authorizedApplicationRespondConnect @hidden\n        developer info: \"In order to perform a respond connect attack the adversary must be able to write the received data. If they only have specific access on the Application we need to see if they also have the required permissions.\"\n        ->  attemptApplicationRespondConnect\n\n      | attemptRead @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulRead\n\n      & successfulRead @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  read\n\n      | read {C}\n        user info: \"The attacker can read the data. This means that the data can be used for further attack steps, but they are not necessarily obtained by the attacker. The extract attack step covers the scenario where the attacker actually collects the data.\"\n        ->  containedData.attemptRead,\n            information.read,\n            replicatedInformation.attemptReadFromReplica,\n            extract\n\n      | authorizedReadFromIAM @hidden\n        developer info: \"The attacker has obtained the access control permissions required to read the data.\"\n        ->  authorizedRead\n\n      | authorizedReadFromApplication @hidden\n        developer info: \"The attacker can reach the data via an Application, but they still require the adequate permissions to read it.\"\n        ->  authorizedRead\n\n      & authorizedRead @hidden\n        developer info: \"An attacker is able to read the Data through authorized permissions, this requires both access to the Data and the adequate permissions.\"\n        ->  attemptRead\n\n      | attemptWrite @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulWrite\n\n      & successfulWrite @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  write\n\n      | write {I}\n        user info: \"The attacker can write to the location of the data, effectively modifying or deleting it.\"\n        ->  containedData.attemptWrite,\n            information.write,\n            replicatedInformation.attemptWriteFromReplica,\n            dependentApps.fullAccess,\n            attemptDelete\n\n      | authorizedWriteFromIAM @hidden\n        developer info: \"The attacker has obtained the access control permissions required to write the data.\"\n        ->  authorizedWrite\n\n      | authorizedWriteFromApplication @hidden\n        developer info: \"The attacker can reach the data via an Application, but they still require the adequate permissions to write it.\"\n        ->  authorizedWrite\n\n      & authorizedWrite @hidden\n        developer info: \"An attacker is able to write the Data through authorized permissions, this requires both access to the Data and the adequate permissions.\"\n        ->  attemptWrite\n\n      | attemptDelete @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        -> successfulDelete\n\n      & successfulDelete @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  delete\n\n      | delete {I,A}\n        user info: \"The attacker can delete the data.\"\n        ->  containedData.attemptDelete,\n            information.delete,\n            replicatedInformation.attemptDeleteFromReplica,\n            attemptDeny\n\n      | authorizedDeleteFromIAM @hidden\n        developer info: \"The attacker has obtained the access control permissions required to delete the data.\"\n        ->  authorizedDelete\n\n      | authorizedDeleteFromApplication @hidden\n        developer info: \"The attacker can reach the data via an Application, but they still require the adequate permissions to delete it.\"\n        ->  authorizedDelete\n\n      & authorizedDelete @hidden\n        developer info: \"An attacker is able to delete the Data through authorized permissions, this requires both access to the Data and the adequate permissions.\"\n        ->  attemptDelete\n\n      | attemptDeny @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulDeny\n\n      & successfulDeny @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  deny\n\n      | deny {A}\n        user info: \"If a DoS is performed data are denied, it has the same effects as deleting the data.\"\n        ->  containedData.attemptDeny,\n            information.deny,\n            replicatedInformation.attemptDenyFromReplica,\n            dependentApps.deny\n\n      & denyFromLockout @hidden\n        developer info: \"This is an intermediate attack step to only trigger deny on data when all the access control roles that can read them are locked out.\"\n        ->  attemptDeny\n\n      | attemptReverseReach @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  reverseReach\n\n      & reverseReach @hidden\n        developer info: \"Reverse reach for Data is used to determine whether or not the data can be transferred to attacker.\"\n        ->  extract,\n            containedData.attemptReverseReach\n\n      & extract\n        user info: \"The attacker can extract the data. The read attack step represents just being able to make use of the data for further attack steps without the attacker obtaining it.\"\n        ->  information.extract,\n            replicatedInformation.attemptExtractFromReplica\n    }\n}\n\nassociations {\n  // ### Data related associations\n  Data        [containingData]       * <-- DataContainment       --> *    [containedData]          Data\n      user info: \"Data can be contained inside other data.\"\n  Data        [containedData]        * <-- AppContainment        --> *    [containingApp]          Application\n      user info: \"An application should be able to contain some data.\"\n  Data        [sentData]             * <-- SendData              --> *    [senderApp]              Application\n      user info: \"An application can also send some data that are supposed to be transferred over a network or connection. This expresses an active connection.\"\n  Data        [receivedData]         * <-- ReceiveData           --> *    [receiverApp]            Application\n      user info: \"An application can also receive some data that are supposed to be transferred over a network or connection. This expresses an active connection.\"\n  Data        [transitData]          * <-- DataInTransit         --> *    [transitNetwork]         Network\n      user info: \"A network can also contain some data that are supposed to be network-wide available.\"\n  Data        [hostedData]           * <-- DataHosting           --> 0..1 [hardware]               Hardware\n      user info: \"Data can be hosted on hardware.\"\n  Data        [containerData]        * <-- InfoContainment       --> *    [information]            Information\n      user info: \"Data can contain information, as for example credentials.\"\n  Data        [dataReplicas]         * <-- Replica               --> *    [replicatedInformation]  Information\n      user info: \"Information can be replicated across multiple data assets that offer redundancy.\"\n  // ### Application dependence associations\n  /* Dependence is used to represent various situations where the operations\n   * of the Application are impacted by modifying/denying the Data/Information\n   * it depends upon. Examples of this type of behavior are configurations,\n   * plugins, libraries, or other input data that is critical to the purpose\n   * of the software component represented by the Application. This\n   * association should only be used for circumstances where the workflow of\n   * the Application is not altered, but the Data/Information are modified\n   * within the regular operating process. For situations where abnormal\n   * behaviour is induced to impact the Application SoftwareVulnerabilities\n   * should be used instead.\n   */\n  Data        [dataDependedUpon]     * <-- Dependence            --> *    [dependentApps]         Application\n      user info: \"Data can be specified as a dependence for an Application.\"\n  Information [infoDependedUpon]     * <-- Dependence            --> *    [dependentApps]         Application\n      user info: \"Information can be specified as a dependence for an Application.\"\n}\n"}
{"instruction": "Convert the input into a structured Meta Attack Language format.", "input": "", "output": "/*\n * Copyright 2020-2022 Foreseeti AB <https://foreseeti.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n#id: \"org.mal-lang.examplelang\"\n#version: \"1.0.0\"\n\ncategory System {\n  asset Network {\n    | access\n      -> hosts.connect\n  }\n\n  asset Host {\n    | connect\n      -> access\n    | authenticate\n      -> access\n    | guessPassword\n      -> guessedPassword\n    | guessedPassword [Exponential(0.02)]\n      -> authenticate\n    & access\n  }\n\n  asset User {\n    | attemptPhishing\n      -> phish\n    | phish [Exponential(0.1)]\n      -> passwords.obtain\n  }\n\n  asset Password {\n    | obtain\n      -> host.authenticate\n  }\n}\n\nassociations {\n  Network [networks] * <-- NetworkAccess --> * [hosts] Host\n  Host [host] 1 <-- Credentials --> * [passwords] Password\n  User [user] 1 <-- Credentials --> * [passwords] Password\n}"}
{"instruction": "Convert the following cyber-attack description into Meta Attack Language code.", "input": "", "output": "/*\n * Copyright 2020 substationLang contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.sasLang\"\n#version: \"0.0.1\"\n\ninclude \"sasLang.mal\"\n"}
{"instruction": "Generate a Meta Attack Language snippet that models the scenario described below.", "input": "", "output": "category IcsControlResources{\n\n    asset SIS extends IcsHardware\n        user info: \"A safety instrumented system (SIS) takes automated action to keep a plant in a safe state, or to put it into a safe state, when abnormal conditions are present.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Safety_Instrumented_System/Protection_Relay\"\n      {\n        | shutdown @Override\n            +> safeguardedSystem.lossOfSafety\n\n        # notDisabled @Override [Enabled]\n          developer info: \"The probability that a particular SIS is not actually present.\"\n          modeler info: \"The use cases for this are removing the SIS safeguarding an IcsHardware and removing redundant SIS subsystems.\"\n          -> safeguardedSystem.safetyMechanismsOffline,\n             triggerPropagateRedundantShutdown\n\n      }\n\n}\n"}
{"instruction": "Given this cyber incident, write its equivalent representation in Meta Attack Language.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.coreLang\"\n#version: \"1.0.0\"\n\ninclude \"coreLang.mal\"\n"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "", "output": "category System {\n\n    asset InfotainmentSystem extends Machine\n        user info: \"Represents the information & entertainment system found on all modern cars. It is a machine which can be connected to one or more networks.\"\n        developer info: \"It has the same functionality as a machine plus one additional attack step that is reached only when the NetworkAccessService is compromised.\"\n        {\n        | fullAccess\n                developer info: \"Adding one new connected attack step\"\n                +>  engineerNetworkAccess\n\n        | gainNetworkAccess\n                user info: \"If this attack step is reached then full network layer access is gained by the attacker.\"\n                ->\tconnectedNetworks.accessNetworkLayer\n\n        | engineerNetworkAccess [Exponential(10.0)]\n                user info: \"This attack step is another way to reach full network access if there is no network access service on the infotainment system, but it requires effort!\"\n                ->\tconnectedNetworks.accessNetworkLayer\n        }\n\n    asset NetworkAccessService extends NetworkService\n        user info: \"This service might run on an infotainment system and if compromised allows the attacker to access the networks connected to it.\"\n        {\n        | fullAccess\n                +>\thostMachine.gainNetworkAccess\n        }\n}\n\ncategory Communication {\n\n    asset OBD2Connector\n        user info: \"Represents the OBD-II connector available in all modern cars and most vehicles in general.\"\n        {\n        | physicalAccess\n                user info: \"Physical access to the connector leads to access on the network layer.\"\n                ->\tinterfacingNetworks.accessNetworkLayer\n\n        | connect\n                -> bypassConnectorProtection,\n                _connectNoProtection\n\n        | bypassConnectorProtection [Exponential(20.0)]\n                user info: \"Remove or bypass objects blocking the OBD connector, for example ripping of protective plate or ganining access to driver cabin. Requires effort\"\n                ->\tphysicalAccess\n\n        & _connectNoProtection\n                -> \tphysicalAccess\n\n        # connectorAccessProtection\n                user info: \"Any type of physical entity blocking attackers from physically connecting to the OBD-II port. For example a protective plate covering the port or port being placed where it's difficult to access.\"\n                ->\t_connectNoProtection\n        }\n\n    asset ChargingPlugConnector\n        user info: \"The charging plug on many electric vehicles provides direct CAN bus access, while on others is only connected to the same network as the Battery Management System (BMS) ECU.\"\n        developer info: \"Florian Sagstetter, Security Challenges in Automotive Hardware/Software Architecture Design (2013)\"\n        {\n        | physicalAccess\n                user info: \"No matter the case, physical access to the connector leads to access on the network layer of the connected network.\"\n                ->\tconnectedNetwork.accessNetworkLayer\n        }\n\n    asset AftermarketDongle\n        user info: \"An aftermarket dongle is a device that connects to the OBD-II port and provides some additional functionality to the vehicle's owner (e.g. error log reading, vehicle configuration, etc.\"\n        {\n        | connectDongle\n                user info: \"When a dongle is connected, the connect attack step is reached on OBD-II connector.\"\n                ->\t_connectToNetwork\n\n        & _connectToNetwork\n                ->\tconnector.connect\n\n        # dongleIsHardened\n                user info: \"If the firmware on the connected dongle cannot be modified by the attacker, then access on the network layer cannto be achieved.\"\n                developer info: \"This defense might look more logical in the future where an external attacker will be able to use the dongle as an entry point in the vehicle.\"\n                ->\t_connectToNetwork\n        }\n}\n\nassociations {\n    VehicleNetwork      [interfacingNetworks]\t\t* <-- Interface         -->\t0..1\t[connector]     OBD2Connector\n    VehicleNetwork\t[connectedNetwork]\t\t0..1 <-- Connections    --> 0..1\t[chargingPlug]  ChargingPlugConnector\n    OBD2Connector       [connector]\t\t\t0..1 <-- Connection     --> 0..1\t[dongle]        AftermarketDongle\n    VehicleNetwork      [connectedNetworks] \t\t* <-- Connection        --> *           [infotainment]  InfotainmentSystem\n}\n"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "", "output": "#id: \"org.mal-lang.scllang\"\n#version: \"1.0.0\"\n\ncategory Functional {\n        asset Substation {\n        }\n        asset Transformer {\n\t\t\t\t| execution\n        }\n        asset VoltageLevel {\n        }\n        asset Bay {\n        }\n        asset Equipment {\n                | execution\n        }\n        asset SubEquipment {\n\t\t\t\t| execution\n        }\n        asset ConnectivityNode {\n\t\t\t\t| communicate\n\t\t\t\t\t\t-> logicalNode.impact\n        }\n        asset Terminal {\n\t\t\t\t| communicate\n\t\t\t\t\t\t-> equipment.execution,\n\t\t\t\t\t\t\tconNode.communicate\n        }\n        asset Function {\n\t\t\t\t| access\n                        -> execution\n                | execution\n                        -> logicalNode.impact\n        }\n        asset Subfunction {\n                | access\n                        -> execution\n                | execution\n                        -> logicalNode.impact\n        }\n}\ncategory Product {\n        asset LogicalDevice {\n\t\t\t\t| impact\n\t\t\t\t\t-> logicalNode.impact\n\t\t\n        }\n        asset LogicalNode {\n                | impact\n                        -> equipment.execution,\n\t\t\t\t\t\t\tsubEquipment.execution,\n\t\t\t\t\t\t\ttransformer.execution,\n\t\t\t\t\t\t\tdata.impact\n        }\n        asset IED {\n                | access\n\t\t\t\t\t\t-> communicate\n\t\t\t\t& communicate\n\t\t\t\t\t\t-> accessPoint.communicate\n\t\t\t\tE hasRouter\n\t\t\t\t\t\t<- accessPoint.router\n\t\t\t\t\t\t-> communicate\t\t\t\t\n        }\n        asset Server {\n\t\t\t\t| communicate\n\t\t\t\t\t\t-> accessPoint.communicate,\n\t\t\t\t\t\t\tlogicalDev.impact\n        }\n        asset Data {\n                | impact\n                        -> logicalNode.impact\n        }\n        asset Router {\n                | communicate\n\t\t\t\t\t\t-> accessPoint.communicate\n\t\t}\n        asset Clock {\n                | impact\n\t\t\t\t| communicate\n\t\t\t\t\t\t-> accessPoint.communicate\n        }\n}\ncategory Communication {\n        asset SubNetwork {\n\t\t\t\t| access\n\t\t\t\t\t\t-> accessPoint.communicate\n        }\n        asset AccessPoint {\n\t\t\t\t| communicate\n\t\t\t\t\t\t-> logicalNode.impact,\n\t\t\t\t\t\t\tserver.communicate,\n\t\t\t\t\t\t\tied.access,\n\t\t\t\t\t\t\tsubNet.access,\n\t\t\t\t\t\t\trouter.communicate,\n\t\t\t\t\t\t\tclock.communicate,\n\t\t\t\t\t\t\tclock.impact\n        }\n}\nassociations {\n        Clock [clock] 0..1 <-- Communication --> 1 [accessPoint] AccessPoint\n        Function [function] * <-- Communication --> * [logicalNode] LogicalNode\n        IED [ied] 1 <-- Communication --> 1..* [accessPoint] AccessPoint\n        LogicalDevice [logicalDev] 1 <-- Contains --> * [logicalNode] LogicalNode\n        LogicalDevice [logicalDev] 1..* <-- HostedOn --> 1 [server] Server\n        LogicalNode [logicalNode] * <-- Communication --> * [accessPoint] AccessPoint\n        LogicalNode [logicalNode] 1 <-- Handles --> 1..* [data] Data\n        LogicalNode [logicalNode] * <-- Communication --> 1 [conNode] ConnectivityNode\n        LogicalNode [logicalNode] * <-- Communication --> 1 [transformer] Transformer\n        LogicalNode [logicalNode] * <-- Communication --> * [equipment] Equipment\n        LogicalNode [logicalNode] * <-- Communication --> * [subEquipment] SubEquipment\n        Router [router] 0..1 <-- Communication --> 1 [accessPoint] AccessPoint\n        Server [server] 0..1 <-- Communication --> 1..* [accessPoint] AccessPoint\n        Subfunction [subfunction] * <-- Communication --> * [logicalNode] LogicalNode\n        SubNetwork [subNet] 1 <-- Has --> 1..* [accessPoint] AccessPoint\n        Terminal [terminal] * <-- Communication --> 1 [equipment] Equipment\n        Terminal [terminal] * <-- Communication --> 1 [conNode] ConnectivityNode\n}\n\n\n"}
{"instruction": "Represent the attack behavior below in your custom Meta Attack Language.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory User {\n\n    asset User\n      user info: \"This asset represents the user themselves. It is the suitable attack surface for social engineering attacks.\"\n    {\n      # noPasswordReuse [Enabled]\n        user info: \"If one credential of that user is compromised there is a probability that all other credentials of that user are also compromised.\"\n        ->  passwordReuseCompromise\n\n      # noRemovableMediaUsage [Enabled]\n        user info: \"The user does not utilise removable media and therefore the attack steps associated with it cannot be reached.\"\n        ->  successfulDeliverMaliciousRemovableMedia\n\n      # securityAwareness\n        user info: \"The security awareness of the user makes it less likely that social engineering would be successful and reduces the likelihood that the user will engage in unsafe behaviour.\"\n        ->  securityAwarenessBypassed,\n            weakCredentials\n\n      | bypassSecurityAwareness [VeryHardAndUncertain]\n        user info: \"Security awareness can be bypassed.\"\n        ->  securityAwarenessBypassed\n\n      | securityAwarenessBypassed @hidden\n        developer info: \"Security awareness is bypassed either because it was not set, the attacker was able to circumvent it through additional effort, or we simply assume that everyone has an off day every now and then.\"\n        ->  successfulSocialEngineering,\n            successfulDeliverMaliciousRemovableMedia\n\n      | oneCredentialCompromised @hidden\n        developer info: \"This intermediate attack step is needed in order to block passwordReuseCompromise when no other credential is first compromised.\"\n        ->  passwordReuseCompromise\n\n      & passwordReuseCompromise @hidden\n        developer info: \"If one reused credential of that user is compromised then, all other credentials of that user can also be compromised.\"\n        ->  userIds.credentials.attemptCredentialsReuse\n\n      | weakCredentials @hidden\n        developer info: \"Intermediate attack step that defines the strength of all of the Credentials associated with the user. This is inversely proportional with the user's securityAwareness defense.\"\n        ->  userIds.credentials.weakCredentials\n\n      | attemptSocialEngineering @entrypoint\n        user info: \"An attacker can try to perform social engineering techniques such as phishing and inducing the user to perform malicious actions.\"\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        modeler info: \"Social engineering is modeled by having the attacker trigger this attack step on the target Users.\"\n        ->  successfulSocialEngineering,\n            bypassSecurityAwareness\n\n      & successfulSocialEngineering @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  socialEngineering\n\n      | socialEngineering @hidden\n        developer info: \"Currently social engineering entails phishing credentials and tricking the user into unsafe actions that expose Applications to the attacker. In the future, other social engineering techniques should be added to this attack step.\"\n        ->  credentialTheft,\n            unsafeUserActivity\n\n      | attemptDeliverMaliciousRemovableMedia @entrypoint\n        user info: \"An attacker can try to deliver a removable media drive(i.e. USB drive) containing malicious code to a location accessible to the target users.\"\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        modeler info: \"Social engineering is modeled by having the attacker trigger this attack step on hthe target Users.\"\n        ->  successfulDeliverMaliciousRemovableMedia,\n            bypassSecurityAwareness\n\n      & successfulDeliverMaliciousRemovableMedia @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  deliverMaliciousRemovableMedia\n\n      | deliverMaliciousRemovableMedia @hidden [Exponential(0.01)]\n        developer info: \"The user is assumed to connect the removable media containing the malicious code to all of the hardware systems that they have access to. Since this is expected to unwittingly happen as part of their normal operations the attack exposes their regular security context.\"\n        ->  userIds.attemptAssume,\n            physicalZones.hardwareSystems.attemptUnsafeUserActivity,\n            hardwareSystems.attemptUnsafeUserActivity\n\n      | credentialTheft @hidden [HardAndUncertain]\n        developer info: \"Trick the user into providing their credentials.\"\n        modeler info: \"Distribution: Bernoulli(0.5) * Exponential(0.1), source: Sommestad (2011) Password authentication attacks: a survey of attacks and when they will succeed, suggest to use Bernoulli(0.05)\"\n        ->  userIds.credentials.attemptCredentialTheft\n\n      | unsafeUserActivity @hidden [Exponential(0.03)]\n        developer info: \"The user can engage in unsafe behaviour that could allow the attacker to gain access to the applications the user has access to.\"\n        modeler info: \"If the attacker is not able to reach (or be reached) via any of the Applications this garnered access does not materialise into any actual attack vectors.\"\n        ->  userIds.attemptAssume,\n            userIds.attemptUnsafeUserActivity\n    }\n}\n\nassociations {\n  User [users] * <-- ZoneAccess            --> * [physicalZones]   PhysicalZone\n      user info: \"A user may have access to different physical zones.\"\n  User [users] * <-- HardwareAccess        --> * [hardwareSystems] Hardware\n      user info: \"A user may have access to different hardware systems, rigs, or components.\"\n  User [users] * <-- UserAssignedIdentities--> * [userIds]         Identity\n      user info: \"A user may have different identities associated with it.\"\n}\n"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "", "output": "/* \n * Copyright 2021 sasLang contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninclude \"org.mal-lang.icsLang/icsLang.mal\"\n\n\ncategory sclHierarchy {\n\tasset Bay extends PhysicalZone \n\tuser info: \"Asset taken from SCL. Assets of substations are often segmented into bays.\"\n\t{\n\t\t| hierarchy\n\t\t\t-> voltageLevel.hierarchy,\n\t\t\t\tequipment.hierarchy\n\t}\n\tasset Substation extends PhysicalZone \n\tuser info: \"Asset taken from SCL-Lang. An entire substation.\"\n\t{\n\t\t| hierarchy\n\t\t\t-> voltageLevel.hierarchy\n\t}\n    \tasset VoltageLevel extends PhysicalZone \n\tuser info: \"Asset taken from SCL-Lang. A substations equipment are often divided into several voltage levels.\"\n\t{\t\n\t\t| hierarchy\n\t\t\t-> bay.hierarchy,\n\t\t\t\tsubstation.hierarchy\n\t}\n}\ncategory physical {\n\tasset AccessPoint extends ConnectionRule \n\tuser info: \"Asset taken from SCL. AccessPoint is IEC 61850 terminology and means a physical or virtual interface.\"\n\t{\n\t\t| logicalConnection\n\t\t\t-> iedRouter.logicalConnection\n\t}\n\tasset ActuatorCB extends Actuator \n\tuser info: \"Asset required to add attack steps from the actuator to a CB.\"\n\tmodeller info: \"The +> adds attack steps on top of the parent asset ones. -> would override instead.\"\n\t{\n\t\t| manipulate\n\t\t\t+> circuitBreaker.manipulationOfControl\n\t\t| block  \n\t\t\t+> circuitBreaker.lossOfControl\n\t}\n\tasset CircuitBreaker extends Equipment\n\tuser info: \"Asset taken from the review of industry SAS designs. Close or open a circuit.\"\n\t{\n\t}\n\tasset Clock extends IcsApplication \n\tuser info: \"Taken from SCL-Lang.\"\n\t{\n\t\t| logicalConnection \n\t\t\t-> accessPoint.attemptConnectToApplicationsUninspected\n\t}\n\tasset Equipment extends PhysicalObject\n\tuser info: \"Asset taken from SCL-Lang. Components that conduct electricity, circuit breaker etc.\"\n\t{\n\t\t| hierarchy\n\t\t\t-> bay.hierarchy\n\t// Start of IcsLangs Impact Attack steps\n\t\t| attemptPreemptiveShutdown @hidden\n        user info: \"Taken from icsLang. Intermediate attack step for modelling the possibility of detecting a disruption(loss of Control/View) and preemptively shutting down the system in order to prevent damage.\"\n        ->  attemptShutdown,\n            attemptUnsafeState\n\n      | attemptPreemptiveShutdownOnSafetyLoss @hidden\n        user info: \"Taken from icsLang. Intermediate attack step for modelling the possibility of detecting a disruption(loss of Safety) and preemptively shutting down the system because of concerns. The loss of safety alone does not trigger either a shutdown or generate an unsafe state as control and view are expected to maintain the system operating within normal parameters.\"\n        ->  attemptShutdown\n\n      | attemptShutdown @hidden [Bernoulli(0.1)]\n        developer info: \"Taken from icsLang. This is the actual preemptive shutdown operation. The specific probability should be researched more and maybe defined by the modeller.\"\n        ->  shutdown\n\n      | attemptUnsafeState @hidden [Bernoulli(0.1)]\n        developer info: \"Taken from icsLang. This attack step models the possibility that a naturally occurring unsafe state is reached if there is a loss of control or view. The specific probability should be researched more and maybe defined by the modeller.\"\n        ->  unsafeState\n\n      | unsafeState @hidden\n        developer info: \"Taken from icsLang. The system can only be damaged if it has reached an unsafe operating state. If the safety mechanisms are still functional the system will shutdown without taking damage, otherwise the damage done to the system will bring it down.\"\n        ->  damageToProperty,\n            shutdown\n\n      | lossOfSafety\n        user info: \"Taken from icsLang. Adversaries may cause loss of safety whether on purpose or as a consequence of actions taken to accomplish an operation.\"\n        developer info: \"MITRE ATT&CK ICS T880.\"\n        ->  safetyMechanismsOffline,\n            attemptPreemptiveShutdownOnSafetyLoss\n\n      | safetyMechanismsOffline @hidden\n        user info: \"Taken from icsLang. Physical assets should only be damaged if the safety mechanisms fail to shutdown the system to prevent damage\"\n        ->  damageToProperty\n\n      | shutdown {A}\n        user info: \"Taken from icsLang. Shutdown the system. Can be initiated by the attacker intentionally to disrupt the industrial process or unintentionally by tampering with system and accidentally triggering the safety shutdown procedures. If the staff detect anomalous behaviour and they can decide to preemptively shut the system down to prevent potential damage.\"\n        ->  lossOfAvailability\n\n      & damageToProperty {I, A}\n        user info: \"Taken from icsLang. Adversaries may cause damage and destruction of property to infrastructure, equipment, and the surrounding environment when attacking control systems.\"\n        developer info: \"MITRE ATT&CK ICS T879.\"\n        ->  shutdown,\n            lossOfProductivityAndRevenue\n\n      | lossOfControl {A}\n        user info: \"Taken from icsLang. Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided.\"\n        developer info: \"MITRE ATT&CK ICS T827.\"\n        ->  attemptPreemptiveShutdown\n\n      | lossOfView {A}\n        user info: \"Taken from icsLang. Adversaries may cause a sustained or permanent loss of view where the ICS will require local, hands-on operator intervention.\"\n        developer info: \"MITRE ATT&CK ICS T829.\"\n        ->  attemptPreemptiveShutdown\n\n      | lossOfAvailability {A}\n        user info: \"Taken from icsLang. Adversaries may attempt to disrupt essential components or systems to prevent owner and operator from delivering products or services.\"\n        developer info: \"MITRE ATT&CK ICS T826.\"\n        ->  lossOfProductivityAndRevenue\n\n      | lossOfProductivityAndRevenue\n        user info: \"Taken from icsLang. Adversaries may cause loss of productivity and revenue through disruption and even damage to the availability and integrity of control system operations, devices, and related processes.\"\n        developer info: \"MITRE ATT&CK ICS T828.\"\n\n      | manipulationOfControl {I, A}\n        user info: \"Taken from icsLang. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes.\"\n        developer info: \"MITRE ATT&CK ICS T831.\"\n        ->  unsafeState\n\n      | manipulationOfView {I, A}\n        user info: \"Taken from icsLang. Adversaries may attempt to manipulate the information reported back to operators or controllers.\"\n        developer info: \"MITRE ATT&CK ICS T832.\"\n        ->  unsafeState\n\t// END of IcsLangs Impact Attack steps\n\t}\n\tasset Function \n\tuser info: \"Asset taken from SCL-Lang. Any additional functions of the substation. Can be unrelated to energy.\"\n\t{\n\t\t| execution\n\t\t\t-> logicalNode.manipulationOfControl\n\t\t\n\t}\n\tasset Gateway extends IcsApplication \n\tuser info: \"Asset taken from the review of industry SAS designs. Communicates externally and has the function to translate protocols.\"\t\n\t{\n\t}\n\tasset IEDHardware extends IcsHardware \n\tuser info: \"Taken from SCL-Lang.\"\n\t{\t\n\t}\t\n\tasset IEDRouter extends IcsHardware \n\tuser info: \"According to SCL, an IED with routing capabilities that can connect different subnetworks with accesspoints. \"\n\t{\t\n\t\t| logicalConnection\n\t\t\t-> accessPoint.attemptConnectToApplicationsUninspected\n\t}\t\n\tasset LogicalDevice extends IcsApplication \n\tuser info: \"Asset taken from SCL-Lang. Resides in a Server and contains LogicalNodes.\"\n\t{\n\t\t\n\t}\n\tasset LogicalNode extends IcsApplication \n\tuser info: \"Taken from SCL-Lang. Resides in a LogicalDevice and enables the automation process.\"\n\t{\n\t\t| manipulationOfControl\n\t\t\t+> equipment.manipulationOfControl,\n\t\t\t\tactuator.manipulate\n\t\t| lossOfControl\n\t\t\t+> equipment.manipulationOfControl,\n\t\t\t\tactuator.block\n\t}\n\n\tasset MU extends IcsHardware \n\tuser info: \"A Merging Unit (MU) merge the analog signals and translate these to electronic signals. Asset taken from the review of industry SAS designs.\"\n\t{\n\t}\n\tasset PhysicalObject  \n\t{\n\t}\n\tasset RTU extends IcsHardware\t\n\tuser info: \"A Remote Terminal Unit can be used for communication externally. Asset taken from the review of industry SAS designs.\"\n\t{\n\t}\n\tasset Server extends IcsApplication\n\tuser info: \"Asset taken from SCL-Lang. Logical Nodes in a server can be reached outside of the subnetwork. The server can reside for example in an IED or a MU.\"\n\t{\n\t}\n\tasset SubEquipment extends Equipment \n\tuser info: \"Asset taken from SCL-Lang. Each phase of a conducting equipment is defined as a subequipment.\"\n\t{\n\t}\n\tasset SubFunction extends Function \n\tuser info: \"Asset taken from SCL-Lang. Subpart of Function.\"\n\t{\n\t}\n\n\tasset SubNetwork extends Network \n\tuser info: \"Taken from SCL-Lang. SubNetwork is IEC 61850 terminology.\"\n\t{\n\t}\n\n\tasset SubstationServer extends IcsApplication\n\tuser info: \" Asset taken from the review of industry SAS designs. Since Server means something else in the IEC 61850 terminology, SubstationServer is a typical IT server found in a substation and can be for monitoring, security or power quality control.\"\n\t{\n\t}\n\tasset Transformer extends Equipment \n\tuser info: \"Asset taken from SCL-Lang. Alters the voltage or current level.\"\n\t{\n\t}\n}\nassociations {\n\tActuatorCB [actuatorCB] * <-- CloseOrTrip --> * [circuitBreaker] CircuitBreaker\n\tClock [clock] 0..1 <-- ClockCommun --> 1 [accessPoint] AccessPoint\n\tFunction [function] * <-- FuncCommun --> * [logicalNode] LogicalNode\n\tIEDRouter [iedRouter] * <-- SubnetConnection --> 1..* [accessPoint] AccessPoint\n\tLogicalNode [logicalNode] * <-- EqRepresent --> * [equipment] Equipment\n\tLogicalNode [logicalNode] * <-- ActRepresent --> * [actuator] Actuator \n\t\n\tSubstation [substation] 1 <-- SubstatIncludesVL --> * [voltageLevel] VoltageLevel\n\tVoltageLevel [voltageLevel] 1 <-- VLIncludesBay --> * [bay] Bay\n\tBay [bay] 1 <-- BayIncludesEq --> * [equipment] Equipment\n\t\n\tLogicalNode [logicalNode] * <-- BayLevelLN --> * [bay] Bay\n\tLogicalNode [logicalNode] * <-- VoltageLevelLN --> * [voltageLevel] VoltageLevel\n\tLogicalNode [logicalNode] * <-- SubstatLevelLN --> * [substation] Substation\n\tSubstation [substation] * <-- SubstatIncludesEq --> * [equipment] Equipment\n\tVoltageLevel [voltageLevel] * <-- VoltageLevelIncludesEq --> * [equipment] Equipment\n}\n"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory Vulnerability {\n\n  abstract asset Vulnerability\n  user info: \"Vulnerability refers to the inability (of a system, application, etc.) to withstand the effects of a hostile environment.\"\n  {\n    # notPresent [Disabled]\n      user info: \"This defense is used to reason about the attack vectors introduced by this asset. This is particularly useful for vulnerabilities where it is common to explore the possibility of patching them out.\"\n      developer info: \"Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it.\"\n      ->  abuse\n\n    | attemptAbuse @hidden\n      developer info: \"Intermediate attack step to allow for defenses.\"\n      ->  abuse\n\n    & abuse\n      user info: \"The attacker is trying to abuse a vulnerability in an asset.\"\n      ->  attemptExploit\n\n    | attemptExploit @hidden\n      developer info: \"Intermediate attack step to allow for defenses.\"\n      ->  exploit\n\n    | exploit\n      user info: \"Attacker is employing an exploit that makes use of this vulnerability.\"\n      ->  impact\n\n    | impact\n      user info: \"Each vulnerability has an impact (of different levels) on the vulnerable component.\"\n  }\n\n  asset SoftwareVulnerability extends Vulnerability\n    user info: \"A vulnerability that affects software (i.e. Applications or SoftwareProducts).\"\n    developer info: \"Vulnerabilities in coreLang were designed to be in line with the 3.1 CVSS specification(https://www.first.org/cvss/specification-document#Common-Vulnerability-Scoring-System-version-3-1-Specification-Document). The defenses on the SoftwareVulnerability asset represent 7 of the base metrics scores, all of them except the scope metric. The temporal and environmental metrics are beyond the language's scope.\"\n  {\n    /* The following 10 defenses are used to model the 7 metrics of the 3.1\n     * CVSS specification that we cover. Network, local, and physical access\n     * are individual defenses in coreLang but they all form attack vector\n     * score for CVSS. Similarly, low and high privileges are individual\n     * defenses, but for CVSS they are one score. If a defense is disabled\n     * that means that the SoftwareVulnerability does not require the attacker\n     * to fulfil that requirement.\n     */\n    # networkAccessRequired @suppress [Disabled]\n      user info: \"Network access is required to abuse the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV\"\n      ->  networkAccessAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityNetworkAccessAchieved\n\n    # localAccessRequired @suppress [Disabled]\n      user info: \"Local access is required to abuse the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV\"\n      ->  localAccessAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityLocalAccessAchieved\n\n    # physicalAccessRequired @suppress [Disabled]\n      user info: \"Physical access is required to abuse the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV\"\n      ->  physicalAccessAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityPhysicalAccessAchieved\n\n    # lowPrivilegesRequired @suppress [Disabled]\n      user info: \"Low privileges are required to abuse the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR\"\n      ->  lowPrivilegesAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityLowPrivilegesAchieved\n\n    # highPrivilegesRequired @suppress [Disabled]\n      user info: \"High privileges are required to abuse the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR\"\n      ->  highPrivilegesAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityHighPrivilegesAchieved\n\n    # userInteractionRequired @suppress [Disabled]\n      user info: \"Some exploits require user interaction. This defense should specify the probability of such interaction on the given application.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-4-User-Interaction-UI\"\n      ->  userInteractionAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityUserInteractionAchieved\n\n    # confidentialityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on confidentiality of the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-3-1-Confidentiality-C\"\n      ->  read\n\n    # availabilityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on availability of the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-3-3-Availability-A\"\n      ->  deny\n\n    # integrityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on integrity of the vulnerability.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-3-2-Integrity-I\"\n      ->  modify\n\n    # highComplexityExploitRequired @suppress [Disabled]\n      user info: \"The vulnerability relies on a high complexity exploit that requires the attacker to expend additional effort (time) in order to successfully make use of it.\"\n      developer info: \"A vulnerability that has high complexity due to its intrinsic properties that are beyond the attacker's control.\"\n      modeler info: \"https://www.first.org/cvss/v3.1/specification-document#2-1-2-Attack-Complexity-AC\"\n      ->  exploitTrivially\n\n    | inherentUserInteraction [HardAndUncertain]\n      user info: \"The user may fulfil the user interaction requirement through their regular activities, without requiring the attacker to induce them to do so.\"\n      modeler info: \"Different software vulnerabilities that require user interaction to exploit can vary substantially in how likely those interactions are. They can range from simply using a shortcut or starting a service to enabling very specific features that the user would never perform without attacker influence. The probability assigned to this attack step should be tuned to fit the description of the vulnerability.\"\n      ->  userInteractionAchieved,\n          softwareProduct.softApplications.softwareProductVulnerabilityUserInteractionAchieved\n\n    /* The following 10 attack steps are used to satisfy the requirements\n     * that the defenses above specify. They are used if the defense is not\n     * enabled or if the attacker is able to fulfil the requirement through\n     * their actions.\n     */\n    | networkAccessAchieved @hidden\n      developer info: \"Intermediate attack step to model network access requirement.\"\n      ->  abuse\n\n    | localAccessAchieved @hidden\n      developer info: \"Intermediate attack step to model local access requirement.\"\n      ->  abuse\n\n    | physicalAccessAchieved @hidden\n      developer info: \"Intermediate attack step to model physical access requirement.\"\n      ->  abuse\n\n    | lowPrivilegesAchieved @hidden\n      developer info: \"Intermediate attack step to model low privileges requirement.\"\n      ->  abuse\n\n    | highPrivilegesAchieved @hidden\n      developer info: \"Intermediate attack step to model high privileges requirement.\"\n      ->  abuse\n\n    | userInteractionAchieved @hidden\n      developer info: \"Intermediate attack step to model user interaction requirement.\"\n      ->  abuse\n\n    | impact @hidden\n      developer info: \"The actual impact caused by successfully exploiting the vulnerability.\"\n      -> read,\n         modify,\n         deny\n\n    /* Impact attack steps, the ones that actually implement the disruptions\n     * based on the Confidentiality, Integrity, and Availability scores,\n     * respectively.\n     */\n    & read\n      user info: \"The attacker can read some or all of the associated applications's code and data.\"\n      ->  application.read,\n          softwareProduct.readApplications\n\n    & modify\n     user info: \"The attacker can modify some or all of the associated application's data and/or source code.\"\n      ->  application.modify,\n          softwareProduct.modifyApplications\n\n    & deny\n      user info: \"Denial-of-Service attack is an attack in which an application is rendered unavailable to its intended users by temporarily or indefinitely disrupting it.\"\n      ->  application.deny,\n          softwareProduct.denyApplications\n\n    | attemptAbuse @hidden\n      developer info: \"Trigger inherent user interaction for software vulnerabilities, it is only relevant for vulnerabilities that do require user interaction.\"\n      +>  inherentUserInteraction\n\n    | attemptExploit @hidden @Override\n      developer info: \"Intermediate attack step to allow for defenses.\"\n      ->  exploitTrivially,\n          exploitWithEffort\n\n    /* These two attack steps are used to implement attacks of varying\n     * complexity based on the attack complexity CVSS score.\n     */\n    & exploitTrivially @hidden\n      developer info: \"The exploit is trivial and requires insignificant effort from the attacker in order to be successful.\"\n      -> exploit\n\n    & exploitWithEffort @hidden [Exponential(0.01)]\n      developer info: \"The attacker must expend effort in order to successfully exploit the vulnerability.\"\n      -> exploit\n  }\n\n  /* Hardware vulnerabilities were created to be slightly simpler versions of\n   * their software counterparts. They are not based on a vulnerability\n   * framework, but are fairly similar to the CVSS specification since they\n   * were based on the SoftwareVulnerability design.\n   *\n   * What constitutes a software or hardware vulnerability in coreLang may not\n   * be immediately intuitive. The distinction is based on where the impact of\n   * the vulnerability is observed, rather than where the fault is located.\n   * For example, if a hardware vulnerability does not negatively impact\n   * hardware, but affects software applications running on said hardware it\n   * would be depicted as a SoftwareVulnerability with a PhysicalAccess\n   * requirement in coreLang.\n   */\n  asset HardwareVulnerability extends Vulnerability\n    user info: \"A vulnerability that affects hardware.\"\n  {\n    # physicalAccessRequired @suppress [Disabled]\n      user info: \"Physical access is required to abuse the vulnerability.\"\n      modeler info: \"Some hardware vulnerabilities require physical access to the components, while some can be exploited from software.\"\n      ->  physicalAccessAchieved\n\n    # confidentialityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on confidentiality of the vulnerability.\"\n      modeler info: \"Analogous defense to the SoftwareVulnerability impact limitations.\"\n      ->  read\n\n    # availabilityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on availability of the vulnerability.\"\n      modeler info: \"Analogous defense to the SoftwareVulnerability impact limitations.\"\n      ->  deny\n\n    # integrityImpactLimitations @suppress [Disabled]\n      user info: \"Limits the impact on integrity of the vulnerability.\"\n      modeler info: \"Analogous defense to the SoftwareVulnerability impact limitations.\"\n      ->  modify\n\n    # effortRequiredToExploit @suppress [Disabled]\n      user info: \"The vulnerability requires additional effort(time) from the attacker in order to be successful.\"\n      modeler info: \"The expectation is that the attacker has prolonged or recurring access to the targeted hardware in order to repeatedly/continuously try the exploit.\"\n      ->  exploitTrivially\n\n    | physicalAccessAchieved @hidden\n      developer info: \"Intermediate attack step to model physical access requirement.\"\n      ->  abuse\n\n    | impact @hidden\n      developer info: \"The actual impact caused by successfully exploiting the vulnerability.\"\n      -> read,\n         modify,\n         deny\n\n    /* Impact attack steps, the ones that actually implement the disruptions\n     * based on the Confidentiality, Integrity, and Availability impact\n     * limitations, respectively.\n     */\n    & read\n      user info: \"The attacker can read some or all of the associated hardware's data.\"\n      ->  hardware.read\n\n    & modify\n     user info: \"The attacker can modify some or all of the associated hardware's behaviour.\"\n      ->  hardware.modify\n\n    & deny\n      user info: \"Denial-of-Service attack is an attack in which a machine or hardware component is rendered unavailable to its intended users by temporarily or indefinitely disrupting it.\"\n      ->  hardware.deny\n\n    | attemptExploit @hidden @Override\n      developer info: \"Intermediate attack step to allow for defenses.\"\n      ->  exploitTrivially,\n          exploitWithEffort\n\n    /* These two attack steps are used to implement attacks of varying\n     * complexity based on the effort required to exploit defense.\n     */\n    & exploitTrivially @hidden\n      developer info: \"The exploit is trivial and requires insignificant effort from the attacker in order to be successful.\"\n      -> exploit\n\n    & exploitWithEffort @hidden [Exponential(0.01)]\n      developer info: \"The attacker must expend effort in order to successfully exploit the vulnerability.\"\n      -> exploit\n  }\n}\n\nassociations {\n  SoftwareVulnerability               [vulnerabilities]   * <-- ApplicationVulnerability --> 0..1 [application]     Application\n      user info: \"An Application can have multiple software vulnerabilities.\"\n  SoftwareVulnerability    [softProductVulnerabilities]   * <-- ApplicationVulnerability --> 0..1 [softwareProduct] SoftwareProduct\n      user info: \"A SoftwareProduct can have multiple software vulnerabilities.\"\n  HardwareVulnerability               [vulnerabilities]   * <-- hardwareVulnerability    --> 0..1 [hardware]        Hardware\n      user info: \"A Hardware system/component can have multiple hardware vulnerabilities.\"\n}\n"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "", "output": "category IcsInterfaceResources{\n\n    asset IOServer extends IcsApplication \n        user info: \"The Input/Output (I/O) server provides the interface between the control system LAN applications and the field equipment monitored and controlled by the control system applications.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Input/Output_Server\"\n      {\n      // Override view related attack steps (Impact) becase they are not relevant to this asset\n      | manipulationOfView @Override\n\n      | lossOfView @Override\n      }\n\n}\n"}
{"instruction": "Convert the input into a structured Meta Attack Language format.", "input": "", "output": "/*\n * Copyright 2020-2021 icsLang contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninclude \"org.mal-lang.coreLang/coreLang.mal\"\ninclude \"ics/Controller.mal\"\ninclude \"ics/ControlServer.mal\"\ninclude \"ics/DataHistorian.mal\"\ninclude \"ics/EngineeringWorkstation.mal\"\ninclude \"ics/HMI.mal\"\ninclude \"ics/IOServer.mal\"\ninclude \"ics/SIS.mal\"\n\ncategory ComputeResources {\n\n    asset IcsHardware extends Hardware\n      user info: \"An ICS System extends the coreLang's System with more attack vectors.\"\n      developer info: \"For example, the attacker can additionally peform ATT&CK ICS T847 'Replication Through Removable Media', T862 'Supply Chain Attack' and more.\"\n    {\n      | physicalAccess @Override\n        +>  moduleFirmware,\n            systemFirmware\n\n      | fullAccess @Override\n        +>  lossOfSafety,\n            lossOfControl,\n            lossOfAvailability,\n            manipulationOfView,\n            manipulationOfControl\n\n      & moduleFirmware\n        user info: \"Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices.\"\n        developer info: \"MITRE ATT&CK ICS T839.\"\n        ->  fullAccess\n\n      # moduleFirmwareVerification\n        user info: \"Verify the module's firmwares from the main firmware upon boot-up or during normal operation. Mitigation for MITRE ATT&CK ICS T839.\"\n        developer info: \"Mitigation was vaguely listed on MITRE ATT&CK ICS.\"\n        ->  moduleFirmware\n\n      # useCryptographyKeyForFirmware\n        user info: \"If a cryptographic key is used for firmware updates, the firmware will be harder to be altered. Mitigation for MITRE ATT&CK ICS T839 and T857.\"\n        developer info: \"Mitigation was listed on MITRE ATT&CK ICS.\"\n        ->  moduleFirmware,\n            systemFirmware\n\n      # useAuthenticatedFirmwareUpdates\n        user info: \"If authentication of the source and data is performed, malicious firmware alteration will be significantly harder. Mitigation for MITRE ATT&CK ICS T839 and T857.\"\n        developer info: \"Mitigation was listed on MITRE ATT&CK ICS.\"\n        ->  moduleFirmware,\n            systemFirmware\n\n      & systemFirmware\n        user info: \"An adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware.\"\n        developer info: \"MITRE ATT&CK ICS T857.\"\n        ->  fullAccess\n\n      | deny @Override {A}\n        +>  lossOfAvailability\n\n      !E sisConnected @hidden\n        developer info: \"If the ICS system is not connected to an SIS the safety mechanisms should be disabled\"\n        <-  sis\n        ->  safetyMechanismsOffline\n\n      // Impact attack steps\n      | attemptPreemptiveShutdown @hidden\n        user info: \"Intermediate attack step for modelling the possibility of detecting a disruption(loss of Control/View) and preemptively shutting down the system in order to prevent damage.\"\n        ->  attemptShutdown,\n            attemptUnsafeState\n\n      | attemptPreemptiveShutdownOnSafetyLoss @hidden\n        user info: \"Intermediate attack step for modelling the possibility of detecting a disruption(loss of Safety) and preemptively shutting down the system because of concerns. The loss of safety alone does not trigger either a shutdown or generate an unsafe state as control and view are expected to maintain the system operating within normal parameters.\"\n        ->  attemptShutdown\n\n      | attemptShutdown @hidden [Bernoulli(0.1)]\n        developer info: \"This is the actual preemptive shutdown operation. The specific probability should be researched more and maybe defined by the modeller.\"\n        ->  shutdown\n\n      | attemptUnsafeState @hidden [Bernoulli(0.1)]\n        developer info: \"This attack step models the possibility that a naturally occurring unsafe state is reached if there is a loss of control or view. The specific probability should be researched more and maybe defined by the modeller.\"\n        ->  unsafeState\n\n      | unsafeState @hidden\n        developer info: \"The system can only be damaged if it has reached an unsafe operating state. If the safety mechanisms are still functional the system will shutdown without taking damage, otherwise the damage done to the system will bring it down.\"\n        ->  damageToProperty,\n            shutdown\n\n      | lossOfSafety\n        user info: \"Adversaries may cause loss of safety whether on purpose or as a consequence of actions taken to accomplish an operation.\"\n        developer info: \"MITRE ATT&CK ICS T880.\"\n        ->  safetyMechanismsOffline,\n            attemptPreemptiveShutdownOnSafetyLoss\n\n      | safetyMechanismsOffline @hidden\n        user info: \"Physical assets should only be damaged if the safety mechanisms fail to shutdown the system to prevent damage\"\n        ->  damageToProperty\n\n      | shutdown {A}\n        user info: \"Shutdown the system. Can be initiated by the attacker intentionally to disrupt the industrial process or unintentionally by tampering with system and accidentally triggering the safety shutdown procedures. If the staff detect anomalous behaviour and they can decide to preemptively shut the system down to prevent potential damage.\"\n        ->  lossOfAvailability,\n            criticalParentSystem.propagateCriticalShutdown,\n            triggerPropagateRedundantShutdown\n\n      | triggerPropagateRedundantShutdown @hidden\n        developer info: \"This is an intermediary step required for the situation where SIS redundant subsystems are disabled.\"\n        ->  redundantParentSystem.propagateRedundantShutdown\n\n      & damageToProperty {I, A}\n        user info: \"Adversaries may cause damage and destruction of property to infrastructure, equipment, and the surrounding environment when attacking control systems.\"\n        developer info: \"MITRE ATT&CK ICS T879.\"\n        ->  shutdown,\n            lossOfProductivityAndRevenue\n\n      | lossOfControl {A}\n        user info: \"Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided.\"\n        developer info: \"MITRE ATT&CK ICS T827.\"\n        ->  attemptPreemptiveShutdown,\n            criticalParentSystem.propagateCriticalLossOfControl,\n            redundantParentSystem.propagateRedundantLossOfControl\n\n      | lossOfView {A}\n        user info: \"Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention.\"\n        developer info: \"MITRE ATT&CK ICS T829.\"\n        ->  attemptPreemptiveShutdown,\n            criticalParentSystem.propagateCriticalLossOfView,\n            redundantParentSystem.propagateRedundantLossOfView\n\n      | lossOfAvailability {A}\n        user info: \"Adversaries may attempt to disrupt essential components or systems to prevent owner and operator from delivering products or services.\"\n        developer info: \"MITRE ATT&CK ICS T826.\"\n        ->  lossOfProductivityAndRevenue,\n            criticalParentSystem.propagateCriticalLossOfAvailability,\n            redundantParentSystem.propagateRedundantLossOfAvailability\n\n      | lossOfProductivityAndRevenue\n        user info: \"Adversaries may cause loss of productivity and revenue through disruption and even damage to the availability and integrity of control system operations, devices, and related processes.\"\n        developer info: \"MITRE ATT&CK ICS T828.\"\n        ->  criticalParentSystem.propagateCriticalLossOfProductivityAndRevenue,\n            redundantParentSystem.propagateRedundantLossOfProductivityAndRevenue\n\n      | manipulationOfControl {I, A}\n        user info: \"Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes.\"\n        developer info: \"MITRE ATT&CK ICS T831.\"\n        ->  unsafeState,\n            criticalParentSystem.propagateCriticalManipulationOfControl,\n            redundantParentSystem.propagateRedundantManipulationOfControl\n\n      | manipulationOfView {I, A}\n        user info: \"Adversaries may attempt to manipulate the information reported back to operators or controllers.\"\n        developer info: \"MITRE ATT&CK ICS T832.\"\n        ->  unsafeState,\n            criticalParentSystem.propagateCriticalManipulationOfView,\n            redundantParentSystem.propagateRedundantManipulationOfView\n\n      // Propagate subsystems attack steps\n      // Critical subsystems\n      | propagateCriticalShutdown @hidden\n        user info: \"Propagate shutdown to the parent system if any of the critical subsystems experience a shutdown\"\n        -> shutdown\n\n      | propagateCriticalLossOfControl @hidden\n        user info: \"Propagate loss of control to the parent system if any of the critical subsystems experience a loss of control\"\n        -> lossOfControl\n\n      | propagateCriticalLossOfView @hidden\n        user info: \"Propagate loss of view to the parent system if any of the critical subsystems experience a loss of view\"\n        -> lossOfView\n\n      | propagateCriticalManipulationOfControl @hidden\n        user info: \"Propagate manipulation of control to the parent system if any of the critical subsystems experience a manipulation of control\"\n        -> manipulationOfControl\n\n      | propagateCriticalManipulationOfView @hidden\n        user info: \"Propagate manipulation of view to the parent system if any of the critical subsystems experience a manipulation of view\"\n        -> manipulationOfView\n\n      | propagateCriticalLossOfAvailability @hidden\n        user info: \"Propagate loss of availability to the parent system if any of the critical subsystems experience a loss of availability\"\n        -> lossOfAvailability\n\n      | propagateCriticalLossOfProductivityAndRevenue @hidden\n        user info: \"Propagate loss of productivity and revenue to the parent system if any of the critical subsystems experience a loss of productivity and revenue\"\n        -> lossOfProductivityAndRevenue\n\n      // Redundant subsystems\n      & propagateRedundantShutdown @hidden\n        user info: \"Propagate shutdown to the parent system if all of the redundant subsystems experience a shutdown\"\n        -> shutdown\n\n      & propagateRedundantLossOfControl @hidden\n        user info: \"Propagate loss of control to the parent system if all of the redundant subsystems experience a loss of control\"\n        -> lossOfControl\n\n      & propagateRedundantLossOfView @hidden\n        user info: \"Propagate loss of view to the parent system if all of the redundant subsystems experience a loss of view\"\n        -> lossOfView\n\n      & propagateRedundantManipulationOfControl @hidden\n        user info: \"Propagate manipulation of control to the parent system if all of the redundant subsystems experience a manipulation of control\"\n        -> manipulationOfControl\n\n      & propagateRedundantManipulationOfView @hidden\n        user info: \"Propagate manipulation of view to the parent system if all of the redundant subsystems experience a manipulation of view\"\n        -> manipulationOfView\n\n      & propagateRedundantLossOfAvailability @hidden\n        user info: \"Propagate loss of availability to the parent system if all of the redundant subsystems experience a loss of availability\"\n        -> lossOfAvailability\n\n      & propagateRedundantLossOfProductivityAndRevenue @hidden\n        user info: \"Propagate loss of productivity and revenue to the parent system if all of the redundant subsystems experience a loss of productivity and revenue\"\n        -> lossOfProductivityAndRevenue\n\n      # notDisabled [Enabled]\n        developer info: \"The probability that a particular IcsHardware is not actually present.\"\n        modeler info: \"The use case for this is removing some of the IcsHardwares used to provide redundancy.\"\n        -> lossOfControl,\n           lossOfView,\n           lossOfAvailability,\n           lossOfProductivityAndRevenue,\n           manipulationOfControl,\n           manipulationOfView,\n           shutdown\n\n    }\n\n     asset IcsApplication extends Application\n      user info: \"An ICS Application extends the coreLang's Application with OT attack vectors.\"\n    {\n      | specificAccess @Override\n        +>  normalOperation\n\n      | fullAccess @Override\n        +>  normalOperation,\n            attemptManipulation\n\n      | normalOperation\n        user info: \"The state where the operational component is operating normally or seems to be operating normally (but is undetectably manipulated within the safety limits).\"\n        developer info: \"I am not sure if we need this. But I keep it to add one more vector that we can model! (Sotirios)\"\n        ->  attemptCovertManipulation\n\n      | restrictedOperation {I,A}\n        user info: \"When the operational component is compromised, the operation of it is affected.\"\n\n      | read @Override {C}\n        +>  theftOfOperationalInformation\n\n      | deny @Override {A}\n        +>  lossOfControl,\n            lossOfView,\n            hostHardware[IcsHardware].lossOfAvailability\n\n      & attemptCovertManipulation [HardAndUncertain]\n        user info: \"If an application is operating normally it could even be the case that it is elaborately manipulated by an adversary.\"\n        ->  attemptManipulation\n\n      | attemptManipulation\n        user info: \"The adversary is actively manipulating the system outside of normal operating parameters.\"\n        ->  manipulate\n\n      & manipulate @hidden\n        ->  manipulationOfControl,\n            manipulationOfView\n\n      // Control related attack steps (Impact)\n      | manipulationOfControl {I, A}\n        user info: \"Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes.\"\n        developer info: \"MITRE ATT&CK ICS T831.\"\n        ->  restrictedOperation,\n            transmittedControlSignal.manipulateSignal,\n            sentData[IcsControlData].attemptWrite,\n            hostHardware[IcsHardware].manipulationOfControl,\n            hostHardware[IcsHardware].unsafeState\n\n      | lossOfControl {A}\n        user info: \"Adversaries may seek to achieve a sustained loss of control or a runaway condition in which operators cannot issue any commands even if the malicious interference has subsided.\"\n        developer info: \"MITRE ATT&CK ICS T827.\"\n        ->  restrictedOperation,\n            transmittedControlSignal.blockSignal,\n            sentData[IcsControlData].attemptDeny,\n            hostHardware[IcsHardware].lossOfControl,\n            hostHardware[IcsHardware].attemptPreemptiveShutdown\n\n      // View related attack steps (Impact)\n      | manipulationOfView {I, A}\n        user info: \"Adversaries may attempt to manipulate the information reported back to operators or controllers.\"\n        developer info: \"MITRE ATT&CK ICS T832.\"\n        ->  restrictedOperation,\n            transmittedSignal.manipulateSignal,\n            sentData[IcsData].attemptWrite,\n            hostHardware[IcsHardware].manipulationOfView,\n            hostHardware[IcsHardware].unsafeState\n\n      | lossOfView {A}\n        user info: \"Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention.\"\n        developer info: \"MITRE ATT&CK ICS T829.\"\n        ->  restrictedOperation,\n            transmittedSignal.blockSignal,\n            sentData[IcsData].attemptDeny,\n            hostHardware[IcsHardware].lossOfView,\n            hostHardware[IcsHardware].attemptPreemptiveShutdown\n\n      // Other types of Impact\n      | theftOfOperationalInformation {C}\n        user info: \"Adversaries may steal operational information on a production environment as a direct mission outcome for personal gain or to inform future operations.\"\n        developer info: \"MITRE ATT&CK ICS T882.\"\n\n    }\n\n    asset Sensor\n      user info: \"An object that generates data (via a signal) but may not have any associated software or host.\"\n      modeler info: \"It would be vulnerable to an attacker that can gain physical access to it.\"\n    {\n      | physicalAccess\n        user info: \"Attacker has physical access on the location where the sensor is physically deployed.\"\n        ->  signal.manipulateSignal,\n            signal.blockSignal,\n            data.attemptWrite,\n            data.attemptDeny,\n            system.lossOfView,\n            system.manipulationOfView\n    }\n\n    asset Actuator\n      user info: \"An object that consumes data (from a signal) but may not have any associated software or host.\"\n    {\n      | manipulate {I, A}\n        user info: \"If the signal that is consumed by this actuator is manipulated then the actuator is also manipulated.\"\n        developer info: \"This will lead to manipulation of control on the associated system.\"\n        ->  system.manipulationOfControl\n\n      | block {A}\n        user info: \"If the signal that is consumed by this actuator is blocked then the actuator is also blocked.\"\n        developer info: \"This will lead to loss of control and loss of availability on the associated system.\"\n        ->  system.lossOfControl\n    }\n\n    asset SynchronizationModule\n      user info: \"This asset represents any component that provides synchronization capabilities, as for example a GPS receiver or a network-based synchronization module.\"\n    {\n      | compromise\n        ->  manipulateClockFrequency,\n            manipulateTime,\n            stopClock\n\n      | manipulateClockFrequency\n        ->  synchronizedApp.manipulationOfControl,\n            synchronizedApp.manipulationOfView\n\n      | manipulateTime\n        ->  synchronizedApp.manipulationOfControl,\n            synchronizedApp.manipulationOfView\n\n      | stopClock\n        ->  synchronizedApp.lossOfControl,\n            synchronizedApp.lossOfView\n    }\n\n  }\n\n  category DataResources {\n\n    asset Signal\n      user info: \"A signal represents information that is sent between two assets but the medium over which is transmitted is not relevant to the model.\"\n      modeler info: \"In the case where data or information are transmitted over a known medium, the IcsData asset and the DataInTransit association should be used instead.\"\n      developer info: \"The basic attack steps of this asset were inspired by the attack steps of the data asset in coreLang.\"\n    {\n      // Basic attack steps below\n      | attemptAccess\n          user info: \"Attempt to access the data, this might fail if the 'dataNotPresent' defense is used.\"\n          ->  access\n\n        & access\n          user info: \"Access the data.\"\n          ->  attemptRead,\n              attemptWrite,\n              attemptDelete\n\n        !E dataEncrypted @hidden\n          user info: \"If the data are encrypted then accessing them requires the associated encryption credentials/key.\"\n          developer info: \"Data will be considered as encrypted if there is at least one Credentials instance associated with it. Otherwise, 'accessUnencryptedData' is reached.\"\n          <-  encryptCreds\n          ->  accessUnencryptedData\n\n        # authenticated\n          user info: \"If the data are authenticated, then modifying them is not possible to achieve.\"\n          ->  write\n\n        & accessUnencryptedData\n          user info: \"If data is unencrypted then access them.\"\n          ->  accessDecryptedData\n\n        | accessDecryptedData @hidden\n          user info: \"Intermediate attack step to only allow effects of 'accessUnencryptedData' on data after compromising the encryption credentials or encryption is disabled.\"\n          ->  access,\n              readContainedInformationAndData,\n              read,\n              write,\n              delete\n\n        # dataNotPresent\n          user info: \"It should be used to model the probability of data actually not existing on the connected container (i.e. System, Application, Connection, etc.).\"\n          developer info: \"This attack step is in series with the 'accessUnencryptedData' attack step because there is no reason to defend encrypted data if they do not exist...\"\n          ->  accessUnencryptedData\n\n        & readContainedInformationAndData\n          user info: \"From the data, attempt to access also the contained information/data, if exists.\"\n          ->  information.read,\n              containedData.read\n\n        | attemptRead\n          user info: \"Attempt to read the data.\"\n          ->  read\n\n        | attemptWrite\n          user info: \"Attempt to write on the data.\"\n          ->  write\n\n        | attemptDelete\n           user info: \"Attempt to delete the data.\"\n          -> delete\n\n        & read {C}\n          user info: \"The attacker can read the data.\"\n          ->  containedData.attemptRead,\n              readContainedInformationAndData\n\n        & write {I}\n          user info: \"The attacker can write to the location of the data, effectively deleting it.\"\n          ->  containedData.attemptWrite,\n              attemptDelete\n\n        & delete {I, A}\n          user info: \"The attacker can delete the data.\"\n          ->  containedData.attemptDelete\n\n        | manipulateSignal\n          user info: \"When an attacker sends a false or manipulated signal.\"\n          ->  signalDestApp.manipulationOfView\n\n        | blockSignal\n          user info: \"When an attacker blocks a signal from being sent/received.\"\n          ->  signalDestApp.lossOfView\n    }\n\n    asset ControlSignal extends Signal\n      user info: \"A ControlSignal represents control commands are sent between two assets but the medium over which is transmitted is not relevant to the model.\"\n      modeler info: \"In the case where control commands are transmitted over a known medium, the IcsControlData asset and the DataInTransit association should be used instead.\"\n    {\n        | manipulateSignal @Override\n          user info: \"When an attacker sends a false or manipulated signal.\"\n          ->  signalActuator.manipulate,\n              controlSignalDestApp.manipulationOfControl\n\n        | blockSignal @Override\n          user info: \"When an attacker blocks a signal from being sent/received.\"\n          ->  signalActuator.block,\n              controlSignalDestApp.lossOfControl\n    }\n\n    asset IcsData extends Data\n      user info: \"An ICS Data extends coreLang's Data with OT attack vectors and directionality for non-control information.\"\n      modeler info: \"This data represents the non-control information sent over the OT network\"\n    {\n        & successfulWrite  @Override {I}\n          user info: \"Modifying the data leads to a manipulation of view on the destination(s) and a manipulation of control on the source(s)\"\n          +>  receiverApp[IcsApplication].manipulationOfView\n\n        & successfulDelete @Override {I, A}\n          user info: \"Deleting the data leads to a loss of view on the destination(s) and a loss of control on the source(s)\"\n          +>  receiverApp[IcsApplication].lossOfView\n\n        & successfulDeny @Override {A}\n          user info: \"Denying access to the data leads to a loss of view on the destination(s) and a loss of control on the source(s)\"\n          +>  receiverApp[IcsApplication].lossOfView\n    }\n\n    asset IcsControlData extends Data\n      user info: \"An ICS Control Data extends coreLang's Data with OT attack vectors and directionality for control information.\"\n      modeler info: \"This data represents the control information sent over the OT network\"\n    {\n        & successfulWrite  @Override {I}\n          user info: \"Modifying the data leads to a manipulation of view on the destination(s) and a manipulation of control on the source(s)\"\n          +>  dataActuator.manipulate,\n              receiverApp[IcsApplication].manipulationOfControl\n\n        & successfulDelete @Override {I, A}\n          user info: \"Deleting the data leads to a loss of view on the destination(s) and a loss of control on the source(s)\"\n          +>  dataActuator.block,\n              receiverApp[IcsApplication].lossOfControl\n\n        & successfulDeny @Override {A}\n          user info: \"Denying access to the data leads to a loss of view on the destination(s) and a loss of control on the source(s)\"\n          +>  dataActuator.block,\n              receiverApp[IcsApplication].lossOfControl\n    }\n  }\n\nassociations {\n  IcsHardware [criticalParentSystem]     0..1 <-- CriticalSubsystem           --> *     [criticalSubsystems]     IcsHardware\n      user info: \"IcsHardwares can be nested, a disruption in any of the critical subsystems will be triggered in the parent system as well.\"\n  IcsHardware [redundantParentSystem]    0..1 <-- RedundantSubsystem          --> *     [redundantSubsystems]    IcsHardware\n      user info: \"IcsHardwares can be nested, a disruption will propagate to the parent system only if all of the redundant subsystems are affected by it.\"\n  IcsHardware    [safeguardedSystem]     0..1 <-- SafetyControls              --> 0..1  [sis]            SIS\n      user info: \"An IcsHardware can have an SIS assigned to it to ensure that it is operating within safe parameters and act if it is not.\"\n  IcsApplication [signalSourceApp]        * <-- AppTransmittedSignal        --> *     [transmittedSignal] Signal\n      user info: \"Any ics application can transmit a signal.\"\n  IcsApplication [signalDestApp]          * <-- AppReceivedSignal           --> *     [receivedSignal] Signal\n      user info: \"Any ics application can receive/consume a signal.\"\n  IcsApplication [controlSignalSourceApp] * <-- AppTransmittedControlSignal --> *     [transmittedControlSignal] ControlSignal\n      user info: \"Any ics application can transmit a signal.\"\n  IcsApplication [controlSignalDestApp]   * <-- AppReceivedControlSignal    --> *     [receivedControlSignal] ControlSignal\n      user info: \"Any ics application can receive/consume a signal.\"\n  Sensor         [signalSensor]          * <-- SensorSignal                 --> *     [signal]         Signal\n      user info: \"Any sensor can be associated with a signal over which it can send data.\"\n  Sensor         [dataSensor]            * <-- SensorData                   --> *     [data]           IcsData\n      user info: \"Any sensor can be associated with data it sends.\"\n  Sensor         [sysSensor]             * <-- SensorBelongsTo              --> *     [system]         IcsHardware\n      user info: \"A sensor can be associated with a system where it measures a specific parameter.\"\n  Actuator       [signalActuator]        * <-- ActuatorSignal               --> *     [signal]         ControlSignal\n      user info: \"An actuator can be associated with a signal from which it receives commands.\"\n  Actuator       [dataActuator]          * <-- ActuatorData                 --> *     [data]           IcsControlData\n      user info: \"An actuator can be associated with data that contain commands.\"\n  Actuator       [sysActuator]           * <-- AcuatorBelongsTo             --> *     [system]         IcsHardware\n      user info: \"An actuator can be associated with a system on which it actuates.\"\n  IcsApplication [synchronizedApp]       * <-- SynchronizationModule        --> 0..1  [synchronizationModule]    SynchronizationModule\n      user info: \"Any ics application can have one synchronization module to provide synchronization on the signals sent.\"\n  Signal         [encryptedSignal]       * <-- EncryptionCredentials        --> 0..1  [encryptCreds]   Credentials\n      user info: \"Encrypted signal can be associated with the relevant encryption credentials.\"\n  Signal         [containerSignal]       * <-- DataContainment              --> *     [containedData]  Data\n      user info: \"Data can be contained inside a signal.\"\n  Signal         [containerSignal]       * <-- InfoContainment              --> *     [information]    Information\n      user info: \"A signal can contain information.\"\n}\n"}
{"instruction": "Convert the following cyber-attack description into Meta Attack Language code.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory ComputeResources {\n\n    asset Hardware\n      user info: \"Specifies the hardware on which applications can run.\"\n    {\n      | attemptUseVulnerabilityFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulUseVulnerabilityFromPhysicalAccess,\n            bypassHardwareModificationsProtection\n\n      & successfulUseVulnerabilityFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  useVulnerability\n\n      | attemptUseVulnerabilityFromSoftwareFullAccess @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  useVulnerability\n\n      | useVulnerability\n        user info: \"The attacker is able to use the associated vulnerabilities, usually as a result of obtaining physical access.\"\n        ->  vulnerabilities.attemptAbuse\n\n      | attemptSpreadWormThroughRemovableMedia @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulSpreadWormThroughRemovableMedia,\n            bypassHardwareModificationsProtection\n\n      & successfulSpreadWormThroughRemovableMedia @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  spreadWormThroughRemovableMedia\n\n      | spreadWormThroughRemovableMedia @hidden\n        developer info: \"Try to spread malware through removable media that the users connect to the hardware system.\"\n        ->  (users \\/ physicalZones.users).attemptDeliverMaliciousRemovableMedia\n\n      | fullAccess {C,I,A}\n        user info: \"Full access on a piece of hardware grants full access on the applications running on it and access to the hosted data.\"\n        ->  sysExecutedApps.fullAccess,\n            hostedData.attemptRead,\n            hostedData.attemptWrite,\n            deny,\n            attemptSpreadWormThroughRemovableMedia\n\n      | attemptSupplyChainAttack @entrypoint\n        user info: \"Adversaries may perform supply chain compromise attacks to gain control of hardware before it is put into use.\"\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        modeler info: \"Triggering this attack step is the only way to model hardware supply chain attacks in the language, therefore scenarios interested in those aspects need to employ it as an entry point.\"\n        ->  successfulSupplyChainAttack,\n            bypassSupplyChainAuditing\n\n      & successfulSupplyChainAttack @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        -> supplyChainAttack\n\n      | supplyChainAttack [VeryHardAndUncertain]\n        user info: \"A supply chain compromise means that the attacker has gained full access of the hardware.\"\n        modeler info: \"The Hardware supply chain attack represents an attacker being able to tamper with the hardware/firmware before the deployment of the product and not alterations made to the hardware/firmware once it is operating.\"\n        ->  fullAccess\n\n      # supplyChainAuditing\n        user info: \"Auditing inside the hardware supply chain can detect possible supply chain attacks.\"\n        ->  supplyChainAuditingBypassed\n\n      | bypassSupplyChainAuditing [VeryHardAndUncertain]\n        user info: \"Supply chain auditing can be bypassed.\"\n        ->  supplyChainAuditingBypassed\n\n      | supplyChainAuditingBypassed @hidden\n        developer info: \"Supply chain auditing is bypassed either because it was not set or the attacker was able to circumvent it through additional effort.\"\n        ->  successfulSupplyChainAttack\n\n      | physicalAccess @entrypoint\n        user info: \"Attacker has physical access to the location where the hardware is physically deployed. They could then deny the hardware, locally connect to the hosted applications, and exploit potential physical vulnerabilities.\"\n        modeler info: \"This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets.\"\n        ->  deny,\n            sysExecutedApps.localConnect,\n            attemptHardwareModifications\n\n      | attemptHardwareModifications @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulHardwareModifications,\n            bypassHardwareModificationsProtection\n\n      & successfulHardwareModifications @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  hardwareModifications\n\n      | hardwareModifications @hidden\n        developer info: \"Attacker is able to modify the hardware setup. They could then exploit physical vulnerabilities or software vulnerabilities that require physical access.\"\n        ->  attemptUseVulnerabilityFromPhysicalAccess,\n            vulnerabilities.physicalAccessAchieved,\n            sysExecutedApps.physicalAccessAchieved\n\n      # hardwareModificationsProtection\n        user info: \"This defense protects against unauthorized modifications to the hardware that would allow an attacker to exploit a hardware vulnerability or a user to connect malicious devices to it.\"\n        developer info: \"But it does not protect against denial of service attacks or local connect on hosted applications.\"\n        ->  hardwareModificationsProtectionBypassed\n\n      | bypassHardwareModificationsProtection [VeryHardAndUncertain]\n        user info: \"Hardware modifications protection can be bypassed.\"\n        ->  hardwareModificationsProtectionBypassed\n\n      | hardwareModificationsProtectionBypassed @hidden\n        developer info: \"Hardware modifications protection is bypassed either because it was not set or the attacker was able to circumvent it through additional effort.\"\n        ->  successfulUseVulnerabilityFromPhysicalAccess,\n            successfulHardwareModifications,\n            successfulSpreadWormThroughRemovableMedia,\n            successfulUnsafeUserActivity\n\n      | attemptUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulUnsafeUserActivity,\n            bypassHardwareModificationsProtection\n\n      & successfulUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  unsafeUserActivity\n\n      | unsafeUserActivity\n        user info: \"A user is performing unsafe actions on the hardware. This exposes the Applications running on top of the hardware and fulfils the physical access requirement of SoftwareVulnerabilities associated with them.\"\n        developer info: \"Currently only represents connecting a malicious removable media drive.\"\n        ->  sysExecutedApps.attemptUnsafeUserActivity,\n            sysExecutedApps.physicalAccessAchieved\n\n      | deny {A}\n        user info: \"Denial of service (DoS) attack on hardware leads to DoS on all the applications running on it and hosted data.\"\n        ->  sysExecutedApps.attemptDeny,\n            hostedData.attemptDeny\n\n      | read {C}\n        user info: \"Read on hardware leads to a read on all the applications running on it and hosted data.\"\n        ->  sysExecutedApps.attemptRead,\n            hostedData.attemptRead\n\n      | modify {I}\n        user info: \"Modify on hardware gives the attacker full access to the hardware and leads to a modify/write on all the applications running on it and hosted data.\"\n        ->  fullAccess,\n            sysExecutedApps.attemptModify,\n            hostedData.attemptWrite\n    }\n\n    asset SoftwareProduct extends Information\n      user info: \"A software product that certain applications are using which represents a specific software package, potentially even a version, which can be associated with certain vulnerabilities or have its deployment repositories compromised in a software supply chain attack.\"\n      developer info: \"This asset was introduced in order to improve the usability of the language and enable software supply chain attacks.\"\n    {\n      | compromiseApplications\n        user info: \"If the origin of a software product is compromised (modified maliciously) this is interpreted as a software supply chain attack and therefore the associated applications should also be fully compromised.\"\n        ->  softApplications.attemptFullAccessFromSupplyChainCompromise\n\n      | write @Override\n        user info: \"If the attacker is able to write the software product they are able to execute a software supply chain attack on the applications associated with it.\"\n        +>  compromiseApplications\n\n      /* The following three attack steps are used to trigger the\n       * SoftwareProduct's SoftwareVulnerabilities' impacts on each of the\n       * Applications associated with the SoftwareProduct separately.\n       */\n      | readApplications @hidden\n        developer info: \"This is an intermediary attack step to propagate read on all of the associated applications if the vulnerability has a confidentiality impact.\"\n        ->  softApplications.attemptReadFromSoftProdVulnerability\n\n      | modifyApplications @hidden\n        developer info: \"This is an intermediary attack step to propagate modify on all of the associated applications if the vulnerability has an integrity impact.\"\n        ->  softApplications.attemptModifyFromSoftProdVulnerability\n\n      | denyApplications @hidden\n        developer info: \"This is an intermediary attack step to propagate deny on all of the associated applications if the vulnerability has an availability impact.\"\n        ->  softApplications.attemptDenyFromSoftProdVulnerability\n    }\n\n    asset Application\n      user info: \"An application models any type of software process or component, from firmware and operating systems to plugins and sessions.\"\n      modeler info: \"Applications are some of the most common assets in models due to their versatility and scope.\"\n    {\n      let allVulnerabilities = vulnerabilities \\/ appSoftProduct.softProductVulnerabilities\n\n      let outgoingApplicationConnections = (appConnections \\/ outgoingAppConnections)\n      let ingoingApplicationConnections = (appConnections \\/ ingoingAppConnections)\n\n      # notPresent [Disabled]\n        user info: \"This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility that the Application does not actually exist. Typically this is useful to see what attack steps are removed if a particular non-essential component(e.g. a plugin, library, feature, or service).\"\n        developer info: \"This defense allows for both speculation about the presence of a particular application and to suggest that if it is possible removing it may restrict the attacker's actions.\"\n        ->  successfulUseVulnerability,\n            successfulReverseReach,\n            networkConnectFromResponse,\n            specificAccessFromLocalConnection,\n            specificAccessFromNetworkConnection,\n            localAccess,\n            networkAccess,\n            successfulUnsafeUserActivity,\n            fullAccessFromSupplyChainCompromise,\n            readFromSoftProdVulnerability,\n            modifyFromSoftProdVulnerability,\n            denyFromSoftProdVulnerability,\n            successfulApplicationRespondConnectThroughData,\n            successfulAuthorizedApplicationRespondConnectThroughData,\n            successfulRead,\n            successfulModify,\n            successfulDeny\n\n      | attemptUseVulnerability @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulUseVulnerability,\n            protectorIDPSs.bypassEffectiveness\n\n      & successfulUseVulnerability @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  useVulnerability\n\n      | useVulnerability\n        user info: \"Try to exploit the associated vulnerabilities.\"\n        developer info: \"This includes vulnerabilities associated with the SoftwareProduct that this Application is running as well.\"\n        ->  allVulnerabilities().attemptAbuse,\n            attemptSoftwareProductAbuse,\n            readFromSoftProdVulnerability,\n            modifyFromSoftProdVulnerability,\n            denyFromSoftProdVulnerability\n\n      | attemptReverseReach @entrypoint\n        user info: \"The attacker is reachable from this Application therefore start propagating reverse reach from it. Reverse reach is used to determine whether or not the attacker can be reached by the user.\"\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        modeler info: \"If the entry point of the attacker is an Application this attack step needs to be explicitly called on it by the modeler in order to have reverse reach start propagating from the Application to the rest of the assets in the model. This is the case because no other attack step on the Application asset triggers this attack step.\"\n        ->  successfulReverseReach\n\n      & successfulReverseReach @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  reverseReach\n\n      | reverseReach @hidden\n        developer info: \"Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates toward outgoing or bidirectional communications.\"\n        ->  networks.attemptReverseReach,\n            ingoingApplicationConnections().attemptReverseReach,\n            appExecutedApps.attemptReverseReach,\n            attackerUnsafeUserActivityCapabilityWithReverseReach,\n            containedData.attemptReverseReach,\n            sentData.attemptReverseReach,\n            receivedData.attemptReverseReach,\n            networkConnectFromResponse\n\n      | localConnect\n        user info: \"The attacker can interface with the Application without going through networking communications. This is achieved by gaining full access on a hosted Application, specific access on the hosting Application, physical access on the hardware on which the Application is running, or via unsafe user activity.\"\n        ->  localAccess,\n            specificAccessFromLocalConnection,\n            attemptUseVulnerability, // Attempt to exploit all the vulnerabilities associated with the Application\n            allVulnerabilities().localAccessAchieved,\n            softwareProductVulnerabilityLocalAccessAchieved\n\n      | networkConnectUninspected\n        user info: \"An attacker can connect to any network exposed application and try to authenticate or trigger vulnerabilities.\"\n        ->  attemptUseVulnerability, // Attempt to exploit all the vulnerabilities associated with the Application\n            allVulnerabilities().networkAccessAchieved,\n            softwareProductVulnerabilityNetworkAccessAchieved,\n            networkConnect,\n            specificAccessNetworkConnect\n\n      | networkConnectInspected\n        user info: \"If the network communications occur via any ConnectionRules that have their payload inspected the attacker can still authenticate, but they cannot trigger vulnerabilities.\"\n        ->  networkConnect,\n            specificAccessNetworkConnect\n\n      | networkConnect @hidden\n        developer info: \"Intermediate attack step.\"\n        ->  networkAccess\n\n      | specificAccessNetworkConnect @hidden\n        developer info: \"Intermediate attack step.\"\n        ->  specificAccessFromNetworkConnection\n\n      | accessNetworkAndConnections @hidden\n        developer info: \"The attacker can access outgoing and bidirectional networks and connections associated with the application.\"\n        ->  networks.accessUninspected,\n            networks.accessInspected,\n            outgoingApplicationConnections().attemptConnectToApplicationsUninspected,\n            outgoingApplicationConnections().attemptConnectToApplicationsInspected,\n            outgoingApplicationConnections().attemptAccessNetworksUninspected,\n            outgoingApplicationConnections().attemptAccessNetworksInspected\n\n      | attemptNetworkConnectFromResponse @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  networkConnectFromResponse\n\n      & networkConnectFromResponse @hidden [VeryHardAndUncertain]\n        developer info: \"An attacker may be able to respond to requests submitted by a client application.\"\n        ->  networkConnectUninspected\n\n      & specificAccessFromLocalConnection @hidden\n        developer info: \"Intermediate attack steps for modeling the two requirements (reachability and authentication) for specific access.\"\n        ->  specificAccess\n\n      & specificAccessFromNetworkConnection @hidden\n        developer info: \"Intermediate attack steps for modeling the two requirements (reachability and authentication) for specific access.\"\n        ->  specificAccess\n\n      | specificAccess\n        user info: \"The adversary is able to gain low-privilege access on the Application which allows them to access the networks and connections associated with it and locally connect to hosted Applications. Additionally, if they have the required privileges the attacker may also access data hosted, sent, or received by the Application.\"\n        ->  appExecutedApps.localConnect, // An attacker with low-privilege access on the executing instance is assumed to be able to locally interact with the executed applications.\n            specificAccessRead,\n            specificAccessModify,\n            specificAccessDelete,\n            bypassContainerization,\n            attemptUseVulnerability, // Attempt to exploit all the vulnerabilities associated with the Application\n            attemptAuthorizedApplicationRespondConnectThroughData,\n            accessNetworkAndConnections // and access the network(s) and connections on/to which the app is connected\n\n      | bypassContainerization [HardAndUncertain]\n        user info: \"The attacker is able to break out of an application container/sandbox and try to exploit any vulnerability of the host application.\"\n        ->  hostApp.attemptUseVulnerability\n\n      | authenticate\n        user info: \"The attacker is able to authenticate with the appropriate high-level privileges.\"\n        ->  localAccess,\n            networkAccess,\n            allVulnerabilities().highPrivilegesAchieved,\n            softwareProductVulnerabilityHighPrivilegesAchieved\n\n      | specificAccessAuthenticate\n        user info: \"The attacker is able to authenticate with the appropriate low-level privileges.\"\n        ->  specificAccessFromLocalConnection,\n            specificAccessFromNetworkConnection,\n            allVulnerabilities().lowPrivilegesAchieved,\n            softwareProductVulnerabilityLowPrivilegesAchieved\n\n      & localAccess @hidden\n        developer info: \"Intermediate attack steps for modeling the two requirements (reachability and authentication) for full access.\"\n        ->  fullAccess\n\n      & networkAccess @hidden\n        developer info: \"Intermediate attack steps for modeling the two requirements (reachability and authentication) for full access.\"\n        ->  fullAccess\n\n      | fullAccess @entrypoint {C,I,A}\n        user info: \"Full access on the Application means the attacker has complete control of the application and can perform any actions within its execution context.\"\n        modeler info: \"It is common in models for the attacker to be granted full access on an Application, representing their own tools, that is connected to the Internet to explore possible attack vectors.\"\n        ->  attemptRead,\n            attemptModify,\n            attemptDeny,\n            executionPrivIAMs.attemptAssume,  // Assume also the execution privilege identities of this application to the access to the entire execution context\n            attemptApplicationRespondConnectThroughData,\n            accessNetworkAndConnections,  // and access the network(s) and connections on/to which the app is connected\n            hostApp.localConnect,    // and localConnect on the host application\n            managedRoutingFw.attemptModify, // if the routing firewall manager app is compromised the routing firewall should also be compromised\n            hostHardware.attemptSpreadWormThroughRemovableMedia, // Propagate malware worms through removable media\n            hostHardware.attemptUseVulnerabilityFromSoftwareFullAccess, // If this application is run directly on hardware full access on it allows the attacker to exploit hardware vulnerabilities that do not require physical access\n            specificAccess // And also provide specificAccess, mainly for completeness and more intuitive results\n\n      | physicalAccessAchieved @hidden\n        developer info: \"Intermediate attack step used to propagate physical access throughout application nesting.\"\n        ->  allVulnerabilities().physicalAccessAchieved,\n            softwareProductVulnerabilityPhysicalAccessAchieved,\n            appExecutedApps.physicalAccessAchieved\n\n      | attemptUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulUnsafeUserActivity,\n            attackerUnsafeUserActivityCapabilityWithReverseReach, // If the user can reach the attacker via networking assets this makes the unsafe user actions much easier to perform\n            attackerUnsafeUserActivityCapabilityWithoutReverseReach, // Without being able to reach the attacker the User can still perform malicious actions on their behalf, but it is much more complicated\n            protectorIDPSs.bypassEffectiveness\n\n      & successfulUnsafeUserActivity @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  unsafeUserActivity\n\n      | unsafeUserActivity\n        user info: \"The unsafe actions of users on this application open it up to attacks and enable vulnerabilities that require user interaction.\"\n        ->  localConnect,\n            networkConnectUninspected,\n            allVulnerabilities().userInteractionAchieved\n\n      | attackerUnsafeUserActivityCapability @hidden\n        developer info: \"The impacts of the user's unsafe actions are greatly limited if there are no channels through which the attacker can be reached by the unwitting user.\"\n        ->  successfulUnsafeUserActivity\n\n      & attackerUnsafeUserActivityCapabilityWithReverseReach @hidden\n        developer info: \"The attacker can be reached from this application and can therefore more easily exploit the unsafe user actions.\"\n        ->  attackerUnsafeUserActivityCapability\n\n      | attackerUnsafeUserActivityCapabilityWithoutReverseReach @hidden [VeryHardAndUncertain]\n        developer info: \"The attacker cannot be reached from this application. This means that the autonomous malicious code must either be able to do reconnaissance on the fly or the reconnaissance was done beforehand and coded into it. This is much more complex and difficult than the situation where the attacker is reachable from the application which restricts the capabilities of being successful. Important Note: This step should never directly or indirectly lead to reverse reach as it would fulfil the attacker interactivity requirements it is missing.\"\n        ->  attackerUnsafeUserActivityCapability\n\n      # supplyChainAuditing\n        user info: \"Auditing inside the supply chain can detect possible supply chain attacks.\"\n        ->  supplyChainAuditingBypassed\n\n      | bypassSupplyChainAuditing [VeryHardAndUncertain]\n        user info: \"Supply chain auditing can be bypassed.\"\n        ->  supplyChainAuditingBypassed\n\n      | supplyChainAuditingBypassed @hidden\n        developer info: \"The supply chain audit is bypassed either because it was not set or the attacker was able to circumvent it through additional effort.\"\n        ->  fullAccessFromSupplyChainCompromise\n\n      | attemptFullAccessFromSupplyChainCompromise @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  fullAccessFromSupplyChainCompromise,\n            bypassSupplyChainAuditing\n\n      & fullAccessFromSupplyChainCompromise @hidden\n        developer info: \"Intermediate attack step.\"\n        ->  fullAccess\n\n      /* Intermediate attack steps to allow SoftwareProduct Vulnerabilities to\n       * only happen after each Applications is reached by the attacker.\n       */\n      | attemptReadFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  readFromSoftProdVulnerability\n\n      | attemptModifyFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  modifyFromSoftProdVulnerability\n\n      | attemptDenyFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  denyFromSoftProdVulnerability\n\n      E softwareCheck @hidden\n        developer info: \"Only enable the following attacks steps if a SoftwareProduct is associated with this Application.\"\n        <-  appSoftProduct\n        ->  readFromSoftProdVulnerability,\n            modifyFromSoftProdVulnerability,\n            denyFromSoftProdVulnerability\n\n      /* The seven following attack steps were implemented to trigger\n       * SoftwareVulnerabilities on a SoftwareProduct on each Application\n       * associated with the SoftwareProduct individually.\n       */\n      | softwareProductVulnerabilityLocalAccessAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.localAccessAchieved,\n            softwareProductAbuse\n\n      | softwareProductVulnerabilityNetworkAccessAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.networkAccessAchieved,\n            softwareProductAbuse\n\n      | softwareProductVulnerabilityPhysicalAccessAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.physicalAccessAchieved,\n            softwareProductAbuse\n\n      | softwareProductVulnerabilityLowPrivilegesAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.lowPrivilegesAchieved,\n            softwareProductAbuse\n\n      | softwareProductVulnerabilityHighPrivilegesAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.highPrivilegesAchieved,\n            softwareProductAbuse\n\n      | softwareProductVulnerabilityUserInteractionAchieved @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  appSoftProduct.softProductVulnerabilities.userInteractionAchieved,\n            softwareProductAbuse\n\n      | attemptSoftwareProductAbuse @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  softwareProductAbuse\n\n      & softwareProductAbuse @hidden\n        developer info: \"Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application.\"\n        ->  readFromSoftProdVulnerability,\n            modifyFromSoftProdVulnerability,\n            denyFromSoftProdVulnerability\n\n      & readFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to handle SoftwareProduct existence.\"\n        ->  attemptRead\n\n      & modifyFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to handle SoftwareProduct existence.\"\n        ->  attemptModify\n\n      & denyFromSoftProdVulnerability @hidden\n        developer info: \"Intermediate attack step to handle SoftwareProduct existence.\"\n        ->  attemptDeny\n\n      | attemptApplicationRespondConnectThroughData @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulApplicationRespondConnectThroughData\n\n      & successfulApplicationRespondConnectThroughData @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  applicationRespondConnectThroughData\n\n      | applicationRespondConnectThroughData @hidden\n        developer info: \"After full access on the application received data can be used to try a connect through respond to the client side application.\"\n        ->  receivedData.attemptApplicationRespondConnect\n\n      | attemptAuthorizedApplicationRespondConnectThroughData @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulAuthorizedApplicationRespondConnectThroughData\n\n      & successfulAuthorizedApplicationRespondConnectThroughData @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  authorizedApplicationRespondConnectThroughData\n\n      | authorizedApplicationRespondConnectThroughData @hidden\n        developer info: \"After specific access on the application received data can be used to try a connect through respond to the client side application. To succeed the attacker must also attain write privileges on the received data.\"\n        ->  receivedData.authorizedApplicationRespondConnectFromApplication\n\n      | attemptRead @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulRead\n\n      & successfulRead @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  read\n\n      | read {C}\n        user info: \"The attacker can read some or all of this service's (and executed by this) source code and/or data (both local and sent/received).\"\n        ->  containedData.attemptRead,\n            appExecutedApps.attemptRead, // Read all applications executed by this (host) application\n            sentData.attemptRead, // Both sent and received Data can be read\n            receivedData.attemptRead\n\n      | specificAccessRead {C}\n        user info: \"The attacker can read the service's source code and/or sent and received Data, given the necessary permissions\"\n        ->  containedData.authorizedReadFromApplication,\n            sentData.authorizedReadFromApplication, // Both Data sent and received can be read given the necessary permissions\n            receivedData.authorizedReadFromApplication\n\n      | attemptModify @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulModify\n\n      & successfulModify @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  modify\n\n      | modify {I}\n        user info: \"The attacker can modify some or all of this service's (and executed by this) source code and/or data.\"\n        ->  fullAccess,\n            containedData.attemptWrite,\n            appExecutedApps.attemptModify, // Gain access on all applications executed by this (host) application\n            sentData.attemptWrite // Sent Data can be written/modified\n\n      | specificAccessModify {I}\n        user info: \"The attacker can modify the service's source code and/or sent  Data, given the necessary permissions\"\n        ->  containedData.authorizedWriteFromApplication,\n            sentData.authorizedWriteFromApplication // Sent Data can be written given the necessary permissions\n\n      | attemptDeny @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  successfulDeny\n\n      & successfulDeny @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  deny\n\n      | deny {A}\n        user info: \"The attacker can deny some or all functionality and data pertaining to this application/service as well as executed applications.\"\n        ->  containedData.attemptDeny,\n            appExecutedApps.attemptDeny,\n            sentData.attemptDeny // Sent Data can also be denied\n\n      | specificAccessDelete {A}\n        user info: \"The attacker can delete some or all functionality and data pertaining to this application/service as well as executed applications, given the necessary permissions\"\n        ->  containedData.authorizedDeleteFromApplication,\n            sentData.authorizedDeleteFromApplication // Sent Data can be deleted given the necessary permissions\n\n      & denyFromNetworkingAsset @hidden\n        developer info: \"This is an intermediate attack step to only allow deny on an application when all the connection rules and networks associated with it are denied, because an app can be serving on many different ports.\"\n        ->  attemptDeny\n\n      & denyFromLockout @hidden\n        developer info: \"This is an intermediate attack step to only trigger deny on an application when all the executing access control roles are locked out.\"\n        ->  attemptDeny\n\n    }\n\n    asset IDPS extends Application\n      user info: \"An IDPS(Intrusion Detection and Prevention System) is tasked with protecting other applications from malicious activity, such as exploiting vulnerabilities or unsafe user actions.\"\n    {\n      # notPresent @Override @hidden [Disabled]\n        developer info: \"It would be ideal to hide this defense when using modelling tools to avoid confusion.\"\n        modeler info: \"As per the comment for the effectiveness defense, the notPresent defense does not function as desired for the IDPS asset and should not be used. The effectiveness defense should be adjusted to reflect the likelihood that the IDPS is present instead.\"\n\n      # effectiveness [Enabled]\n        user info: \"The effectiveness defense represents how capable the IDPS is to prevent disruptions from occurring on the associated applications.\"\n        modeler info: \"The notPresent defense should inversely impact the effectiveness defense. However, because this is not currently implemented in coreLang it is up to the modeler to properly take this into account when setting the values of these defenses.\"\n        ->  effectivenessBypassed\n\n      | bypassEffectiveness [VeryHardAndUncertain]\n        user info: \"The effectiveness of an IDPS can be bypassed.\"\n        ->  effectivenessBypassed\n\n      | effectivenessBypassed @hidden\n        developer info: \"The protection of the IDPS has been bypassed either as a result of attacker activity or due to some internal property of the IDPS.\"\n        ->  protectedApps.successfulUseVulnerability,\n            protectedApps.successfulUnsafeUserActivity\n\n      | fullAccess {C,I,A}\n        user info: \"The IDPS is no longer able to protect the apps assigned to it if it has been compromised itself.\"\n        +>  effectivenessBypassed\n\n      | deny {A}\n        developer info: \"The IDPS is no longer able to protect the apps assigned to it if it has been denied itself.\"\n        +>  effectivenessBypassed\n    }\n\n    asset PhysicalZone\n      user info: \"A physical zone is the location where hardware systems and networks are physically deployed.\"\n    {\n      | gainPhysicalAccess @entrypoint\n        user info: \"By gaining access on a physical zone, physical access on the housed hardware and networks is also attained.\"\n        modeler info: \"This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets.\"\n        ->  hardwareSystems.physicalAccess,\n            networks.physicalAccess\n    }\n}\n\nassociations {\n  Hardware         [hostHardware]      0..1 <-- SysExecution          --> *    [sysExecutedApps]        Application\n      user info: \"Hardware on which Applications are running. The host hardware is not mandatory to be specified.\"\n  Application      [hostApp]           0..1 <-- AppExecution          --> *    [appExecutedApps]        Application\n      user info: \"Sandboxing and containerization are represented through AppExecution. This application hosting can be nested. For example, application 1 runs application 2 which runs application 3. (Where application 1 is an OS, application 2 is a VM, and application 3 is app running in the VM.)\"\n  IDPS             [protectorIDPSs]       * <-- AppProtection         --> *    [protectedApps]          Application\n      user info: \"IDPSs can provide protection to other applications.\"\n  SoftwareProduct  [appSoftProduct]    0..1 <-- AppSoftwareProduct    --> *    [softApplications]       Application\n      user info: \"An application can be associated with a software product that has some specific characteristics such as specific Vulnerabilities and deployment repository.\"\n  PhysicalZone     [physicalZones]        * <-- ZoneInclusion         --> *    [hardwareSystems]        Hardware\n      user info: \"Access on PhysicalZone will give physicalAccess on the deployed Hardware, but access to the hardware does not provide access to the physical zone (e.g. iLOs).\"\n  PhysicalZone     [physicalZones]        * <-- ZoneInclusion         --> *    [networks]               Network\n      user info: \"Access on PhysicalZone will give physicalAccess on the deployed networks, but access to the network does not provide access to the physical zone.\"\n}\n"}
{"instruction": "Generate a Meta Attack Language snippet that models the scenario described below.", "input": "", "output": "// vehicleLang\n// Author: Sotirios Katsikeas (sotkat@kth.se)\n// Last major revision: July 2019\n\n//include \"vehicleLangEncryption.mal\"\ninclude \"vehicleLangEthernet.mal\"\ninclude \"vehicleLangPublicInterfaces.mal\"\n// All includes should be placed above this line, and not on included files for better tracebility.\n\ncategory System {\n    \n    abstract asset PhysicalMachine\n        user info: \"Specifies any physical machine.\"\n    {\n        | connect\n                user info: \"Connect leads directly to access on a physical machine since no authentication is done/needed.\"\n                ->  fullAccess\n\n        | fullAccess\n                developer info: \"This is empty in order to be overriden.\"\n    }\n\n    asset SensorOrActuator extends PhysicalMachine\n        user info: \"Specifies physical machines like sensors and actuators.\"\n    {\n        | connect\n                user info: \"Connect leads directly to access on a physical machine since no authentication is done/needed.\"\n                ->  fullAccess\n\n        | fullAccess\n                user info: \"Access means that the attacker has full access on the machine, ex. he can manipulate the actuator's behavior or sensor's measurements.\"\n                ->  manipulate\n\n        | manipulate\n                developer info: \"This is empty for now because it is enough to reach this.\"\n    }\n\n    asset Machine extends Hardware\n        user info: \"Specifies any machine that has higher complexity than a simple actuator or sensor.\"\n        developer info: \"Extended from coreLang.\"\n    {\n\n        | connect\n                user info: \"Attempt to connect to a machine.\"\n                ->\tauthenticatedAccess,\n                    connectPrivileges.assume,\n                    connectionVulnerabilities.exploit\n\n        | authenticate\n                user info: \"Does the attacker have the credentials of an identity?\"\n                ->\tauthenticatedAccess\n\n        & authenticatedAccess\n                  user info: \"One way to gain access to a machine is through legitimate authentication.\"\n                ->\tfullAccess\n\n        | bypassAccessControl [Exponential(0.02)]\n                user info: \"An attacker can bypass access control and authenticate to the machine.\"\n                -> fullAccess\n\n        | fullAccess\n                developer info: \"We don't explicitly model root access; that is not a sound primitive. Instead, such an identity can be modelled explicitly by providing an account with access to all machineExecutedApps and all data.\"\n                +>\t_machineAccess\n\n        | idControl\n                user info: \"This is used when ID is compromised from dataflow.\"\n\n        | _machineAccess @hidden\n                developer info: \"Again, this is a helper attack step that will also be used from the childs of this asset.\"\n                ->\tdeny,\n                    _accessData,\n                    machineExecutedApps.localConnect,\n                    accessVulnerabilities.exploit\n\n        | deny\n                user info: \"Perform a DoS attack on the machine.\"\n                ->\tmachineExecutedApps.deny,\n                    hostedData.deny\n\n        | _accessData @hidden\n                user info: \"A helper attack step to reach request access on data stored on a machine\"\n                ->  hostedData.attemptRead,\n                    hostedData.attemptWrite,\n                    hostedData.attemptDelete\n\n        | passFirmwareValidation\n                developer info: \"Again, this is a blank helper attack step that will also be used from the childs of this asset.\"\n\n        | udsFirmwareModification\n                developer info: \"This is a blank helper attack step that should be reached from FirmwareUpdaterService.\"\n\n        | passUdsFirmwareModification\n                developer info: \"This is a blank helper attack step that should be reached from FirmwareUpdaterService.\"\n\n        | gainNetworkAccess\n                user info: \"This attack step will be only implemented on the infotainment system asset.\"\n    }\n\n    asset ECU extends Machine\n        user info: \"Specifies any ECU/MCU/controller in a vehicle.\"\n        developer info: \"Created as new parent class because the existing Machine had many unrelated attacks.\"\n    {\n        | connect\n                user info: \"Attackers can attempt to connect to the ECU and change the operation mode if they have access to the network, services, dataflows, etc...\"\n                +>  attemptChangeOperationMode\n                    //firmwareUpdater.networkConnectUninspected\n\n        | maliciousFirmwareUpload\n                user info: \"Maliciously uploading a forged firmware leads to full access on the ECU and the ability to inject/eavesdrop messages on the previous running services and network.\"\n                ->  fullAccess,\n                    _ecuNetworkAccess\n\n        & uploadFirmware\n                user info: \"Uploading firmware leads to full access on the ECU and the ability to inject/eavesdrop messages on the previous running services and network.\"\n                ->  _ecuNetworkAccess\n\n        | _ecuNetworkAccess @hidden\n                developer info: \"This a helper attack step because both above attack steps are leading to the same connections.\"\n                ->      vehiclenetworks.accessUninspected,\n                        vehiclenetworks.eavesdrop,\n                        vehiclenetworks.messageInjection,\n                        vehiclenetworks.j1939Attacks,\n                        vehiclenetworks._networkSpecificAttack,\n                        vehiclenetworks._networkForwarding\n\n        | udsFirmwareModification\n                user info: \"This attack step is reached after access on FirmwareUpdaterService.\"\n                ->  firmwareUpdater.udsFirmwareUpload\n\n        | passUdsFirmwareModification\n                user info: \"Same as below, if the cryptographic key is accessed.\"\n                ->  firmwareUpdater.passUdsFirmwareUpload\n\n        | passFirmwareValidation\n                user info: \"If the firmware validation key is stored in the ECU, this means that the firmware validation is passed and a new firmware can be uploaded.\"\n                ->  uploadFirmware\n\n        | fullAccess\n                user info: \"Attackers have access to the ECU if they have compromised its firmware (after custom firmware upload), bypassed access control (after authentication via diagnostics) or properly authenticated themselves.\"\n                +>\tsensorsOrActuators.manipulate,\n                    changeOperationMode,\n                    gainLINAccessFromCAN,\n                    bypassMessageConfliction,\n                    _ecuNetworkAccess\n\n        | idControl\n                user info: \"This attack step is reached after the ID is compromised from dataflow and allows an attacker to manipulate the connected sensors or actuators.\"\n                ->  sensorsOrActuators.manipulate\n\n        | offline\n                user info: \"When the ECU is taken offline by some other attack step. Offline means that the ECU is still powered on but unable to communicate on its bus. The effort needed to achieve this is applied on the distributions of the parent attacks. This also means that the connected sensors or actuators can be manipulated.\"\n                ->\tdeny,\n                    bypassMessageConfliction\n\n        | shutdown\n                user info: \"When the ECU is powered off by some other attack step. The effort needed to achieve this is applied on the distributions of the parent attacks.\"\n                ->\tbypassMessageConfliction,\n                    deny // Deny access to data and machineExecutedApps\n\n        & changeOperationMode\n                user info: \"Put the ECU into diagnostics (if vehicle is moving slowly or is stopped) or even update mode (bootmode). Leads to shutdown since attacker must have achieved access on this ECU to reach this step.\"\n                // This can bypass message conflictions and IDPS because the legitimate ECU will no lorger send messages and the attacker can imitate it, if carefull.\n                -> \tshutdown,\n                    firmware.maliciousFirmwareModification,\n                    uploadFirmware\n\n        & attemptChangeOperationMode [Exponential(0.1)]\n                user info: \"Put the ECU into diagnostics (if vehicle is moving slowly or is stopped) or even update mode (bootmode) but after some effort. This stops ECU from communicating on its bus -> offline\"\n                -> \toffline,\n                    bypassMessageConfliction,\n                    firmware.maliciousFirmwareModification\n\n        # operationModeProtection\n                user info: \"Either prevent diagnostics mode after vehicles starts moving or allow diagnostics mode only after some physical change is done on vehicle.\"\n                developer info: \"Charlie Miller and Chris Valasek, CAN message injection (2016).\"\n                ->\tchangeOperationMode,\n                    attemptChangeOperationMode\n\n        | bypassMessageConfliction\n                user info: \"Bypass message confliction protection mechanisms by changing ECU's operation mode -> no conflicts -> service message injection.\"\n                ->  machineExecutedApps.serviceMessageInjection\n\n        & _networkServiceMessageInjection @hidden\n                user info: \"Inject forged service messages that could notify about vehicle's fault or report fake status (speed, operation mode, etc.). This can even lead to unresponsive ECU (TPMS). This is reached from network access.\"\n                ->\tmachineExecutedApps.serviceMessageInjection\n\n        # messageConflictionProtection\n                user info: \"Defend against message injection by using message confliction mechanisms (detect messages with own ID). This acts like a host-based IDS.\"\n                developer info: \"Pierre Kleberger, Tomas Olovsson, and Erland Jonsson, Security Aspects of the In-Vehicle Network in the Connected Car (2011).\"\n                ->\t_networkServiceMessageInjection\n\n        | gainLINAccessFromCAN\n                user info: \"There are techniques that make it easy to gain access to the LIN bus through a CAN-bus node.\"\n                developer info: \"Junko Takahashi et al., Automotive Attacks and Countermeasures on LIN-Bus (2017)\"\n                //  NOTE: This should happen only with a probability and not always maybe?\n                ->\tvehiclenetworks.gainLINAccessFromCAN\n\n    }\n\n    asset GatewayECU extends ECU\n        user info: \"Specifies the ECU that acts as a gateway/firewall on a vehicle.\"\n    {\n        | fullAccess\n                developer info: \"Overriding from ECU\"\n                +>\ttrafficVNetworks.adversaryInTheMiddle, // This will act as Firewall and IDPS are disabled!\n                    forwarding\n\n        | forwarding\n                developer info: \"Forwarding is the lightest interaction with the gateway, where the gateway simply retransmits received messages. Vulnerabilities may, however, lead to compromise of the gateway as well as of the associated firewall. Therefore, Forwarding leads to Connect.\"\n                -> \tconnect,\n                    bypassFirewall  // If firewall is not enabled then bypass it.\n\n        & bypassFirewall\n                user info: \"If firewall is disabled, then attacker can bypass it.\"\n                ->\tgatewayBypassIDPS, // Added here to stop those attacks when firewall is enabled.\n                    gatewayNoIDPS,\n                    trafficVNetworks.accessUDSservices\n\n        # firewallProtection // Firewall is just a defense on gateway ECU.\n                user info: \"Firewall protection comes from the existence of a correctly configured firewall.\"\n                -> bypassFirewall\n\n        | deny\n                user info: \"Perform denial of service attack on the connected networks.\"\n                -> \ttrafficVNetworks.deny\n\n        // IDPS is modeled as a centralized inline IDPS\n        E  idpsExists\n                user info: \"Check for the existence of an IDPS.\"\n                <- idps\n                -> gatewayBypassIDPS\n\n        & gatewayBypassIDPS\n                user info: \"Bypass IDPS protection when IDPS is in place, but only if firewall is disabled.\"\n                -> trafficVNetworks._bypassIDPS\n\n        !E idpsDoesNotExist\n                user info: \"Check for the non existence of an IDPS.\"\n                <-\tidps\n                ->\tgatewayNoIDPS\n\n        & gatewayNoIDPS\n                user info: \"IDPS is disabled so the attacker can access the network unrestricted, but only if firewall is also disabled.\"\n                -> trafficVNetworks._noIDPS,\n                   trafficVNetworks.accessNetworkLayer // Moved it here from forwarding to allow imediate network access only if idps does not exist.\n    }\n\n    abstract asset VehicularApplication extends Application\n        developer info: \"Extended from coreLang.\"\n    {   \n        | specificAccess\n                +>      hostMachine.connect\n        | fullAccess\n                +>      hostMachine.connect,\n                        assignedVehicularIdentity.attemptAssume\n\n        | serviceMessageInjection\n                developer info: \"This is an empty attack step that will only be used from the childs of this asset.\"\n    }\n\n    asset Firmware extends VehicularApplication\n        user info: \"Specifies the firmware running on an ECU as an application.\"\n    {\n        | maliciousFirmwareModification\n                user info: \"Perform a firmware update either by cracking Secure Boot or worse by exploiting the absence of it.\"\n                ->  bypassSecureBoot,\n                    crackSecureBoot\n\n        & crackFirmwareValidation [Exponential(0.2)]\n                user info: \"Crack firmware validation if it is enabled.\"\n                ->  hardware.maliciousFirmwareUpload\n\n        & bypassFirmwareValidation\n                user info: \"Bypass firmware validation if it is not enabled.\"\n                ->  hardware.maliciousFirmwareUpload\n\n        # firmwareValidation\n                user info: \"Code signing and verification during upload, use of strong checksum functions and/or don't distribute the private keys for signing.\"\n                developer info: \"Rubicon - Zero-knowledge Armor for Automotive Security, RubiconLabs\"\n                ->\tbypassFirmwareValidation\n\n        & bypassSecureBoot\n                user info: \"Bypass Secure Boot if it is not enabled Then validate a firmware update either by cracking (brute forcing) the checksum or worse by exploiting the absence of verification.\"\n                ->  bypassFirmwareValidation,\n                    crackFirmwareValidation\n\n        | crackSecureBoot [Exponential(0.1)]\n                user info: \"Crack Secure Boot if it is enabled is hard\"\n                ->  hardware.maliciousFirmwareUpload\n\n        # secureBoot\n                user info: \"SecureBoot is a protection mechanism that validates the boot software and the firmware at system boot time.\"\n                developer info: \"SecureBoot should make running of forged firmware even harder when enabled. Therefore, it stops firmware validation attack steps.\"\n                ->  bypassSecureBoot\n    }\n\n    asset OperatingSystem extends VehicularApplication {\n       // Currently simple ECUs and GatewayECUs don't have an OS. But the infotainment system has.\n    }\n\n    asset Service extends VehicularApplication {\n        // Intentionally left blank\n    }\n\n    asset Client extends VehicularApplication {\n        // Intentionally left blank\n    }\n\n    asset NetworkClient extends Client\n        user info: \"Represents a client connected to a service running on a network.\"\n    {\n        | fullAccess\n                +>\tdataflows.request\n    }\n\n    asset VehicleNetworkReceiver extends Client\n        user info: \"Represents a receiver/client for connectionless dataflows connected to a transmitter running on a vehicle network.\"\n    {\n        | fullAccess\n                +>\tdataflows.eavesdrop\n\n        | impersonateId\n                ->  hostMachine.idControl\n    }\n\n    asset NetworkService extends Service\n        user info: \"Represents a service running on top of a network.\"\n    {\n\n        | fullAccess\n                +>\tdataflows.respond\n    }\n\n    asset UDSService extends NetworkService\n        user info: \"Represents an ISO 14229 - Unified Diagnostics Service (UDS) running on an ECU.\"\n        developer info: \"Pierre Kleberger, On Securing the Connected Car: Methods and Protocols for Secure Vehicle Diagnostics, PhD Thesis (2015)\"\n    {\n        | fullAccess\n                user info: \"Access on an UDS service provides access on stored data, possibility to update firmware and change operation status of the ECU.\"\n                +>\tdataflows.respond,\n                    hostMachine._accessData\n    }\n\n    asset TransmitterService extends Service\n        user info: \"Represents a service/transmitter running on an ECU and on top of a vehicle network.\"\n    {\n        | fullAccess\n                +>\tdataflows.transmit,\n                    dataflows.deny // This is only possible here because only one Transmitter can be connected to a conectionless dataflow\n\n        | serviceMessageInjection\n                user info: \"Tamper dataflows that are conneceted to this network transmitter after bypassing message confliction on the ECU.\"\n                ->\tdataflows.maliciousTransmit,\n                    dataflows.eavesdropId\n    }\n\n    asset FirmwareUpdaterService extends UDSService\n        user info:\"Specifies the firmware updating procedure/UDS service on an ECU.\"\n    {\n        | fullAccess\n                +>  firmwareTarget.udsFirmwareModification\n\n        & udsFirmwareUpload\n                user info: \"If UDS Security Access defense is disabled, attacker can maliciously upload firmware.\"\n                ->  firmwareTarget.maliciousFirmwareUpload\n\n        | passUdsFirmwareUpload\n                user info: \"If the cryptographic key of Security Access is read then, the firmware upload procedure can easily be initiated.\"\n                ->  firmwareTarget.passFirmwareValidation\n\n        # udsSecurityAccess\n                user info: \"Firmware upload via UDS is protected by a UDS service called Security Access. This is an authentication protocol which uses a challenge-response scheme with cryptographic keys.\"\n                developer info: \"Interview with domain experts conducted by Nedo\"\n                ->  udsFirmwareUpload\n    }\n\n}\n\ncategory Networking {\n\n    asset VehicleNetwork extends Network\n        user info: \"Vehicle Networks include CAN bus, FlexRay and LIN bus.\"\n        developer info: \"Extended from coreLang.\"\n    {\n        //Override\n        | physicalAccess\n                user info: \"Physical access to the network. Merged coreLang asset Network with vehicleLang asset Network\"\n                +>\taccessNetworkLayer\n        \n        | _networkSpecificAttack @hidden\n                user info: \"This attack step should work as an intermediate step to reach network specific attacks.\"\n\n        | accessUninspected\n                user info: \"Access implies the possibility to submit packets over the network. In a generic network, it does not imply the possibility to listen to others' traffic on the network. You are outside the router but with a possibility to communicate in to the network.\"\n                developer info: \"Overriding from network\"\n                +>\tdeny,\n                    applications.networkConnectUninspected,\n                    networkECUs.connect, // Reach ECUs connected network and try to connect, not access!\n                    accessUDSservices // But access on UDS services is possible because they can be protected by UdsSecurityAccess\n\n        | accessNetworkLayer\n                user info: \"Network layer access implies the possibility to submit messages over the network and the possibility to listen to others' traffic on the network.\"\n                developer info: \"Overriding from network\"\n                ->\taccessUninspected,\n                    _networkForwarding,\n                    eavesdrop,\n                    messageInjection,\n                    _networkSpecificAttack,\n                    j1939Attacks,\n                    networkECUs._networkServiceMessageInjection // This is for the case where the message confliction is disabled but attacking from the network.\n\n        | _networkForwarding @hidden\n                user info: \"An attacker that has access to a network connected ECU can also perform forwarding on that network using the connected GatewayECU. (helper attack)\"\n                -> trafficGatewayECU.forwarding\n\n        // Override\n        | eavesdrop\n                developer info: \"Those two extra attack steps are needed so that the compromised MessageID scenario to be able to work. Merged coreLang asset Network with vehicleLang asset Network\"\n                +>  dataflows.eavesdrop,\n                    dataflows.eavesdropId,\n                    dataflows.eavesdropAndBypassMsgConflictionProtection\n        // Override\n        | adversaryInTheMiddle\n                user info: \"This attack is reached only as an attacker's entry point or from GatewayEcu.fullAccess. It leads, among others, to dataflows MitM. Merged coreLang asset Network with vehicleLang asset Network\"\n                +>\taccessNetworkLayer,\n                    eavesdrop,\n                    dataflows.adversaryInTheMiddle,\n                    trafficGatewayECU.deny\n        // Override\n        | deny\n                user info: \"The network is made unavailable. Merged coreLang asset Network with vehicleLang asset Network\"\n                +> \tdataflows.deny\n        // This will require, by default, some effort especially for maliciousRespond, because message conflictions mechanisms are by default enabled.\n        // This attack is only reached as an entry point or from GatewayEcu.fullAccess, also see serviceMessageInjection.\n        | messageInjection\n                user info: \"Inject messages to dataflows means that attacker can try to transmit messages on the vehicle network but might not be sucessful because of the message confliction protection. It is also possible to perform a DoS.\"\n                ->\tdataflows.maliciousTransmitBypassConflitionProtection,\n                    deny\n\n        | _bypassIDPS @hidden\n                user info: \"Bypass IDPS on dataflows when the GatewayECU has IDPS enabled. (helper attack)\"\n                ->\tdataflows.maliciousTransmitBypassIDPS\n\n        | _noIDPS @hidden\n                user info: \"When no IDPS is connected/present on the GatewayECU. (helper attack)\"\n                ->\tdataflows.maliciousTransmitNoIDPS\n\n        | gainLINAccessFromCAN\n                developer info: \"This is an empty attack that will only be implemented on LINNetwork and it will be invoked by the ECU.\"\n\n        | j1939Attacks\n                user info: \"This is an empty attack that will only be implemented on J1939Network and it will be invoked by the ECU or by having network access.\"\n                developer info: \"Yelizaveta Burakova, Bill Hass, Leif Millar, and Andre Weimerskirch, Truck Hacking: An Experimental Analysis of the SAE J1939 Standard (2016)\"\n\n        | accessUDSservices\n                ->  networkFwUpdater.fullAccess\n    }\n\n    asset CANNetwork extends VehicleNetwork\n        user info: \"Represents the CAN bus network and the attacks that are possible on it.\"\n    {\n        | _networkSpecificAttack @hidden\n                user info: \"This attack step should work as an intermediate step to reach network specific attacks.\"\n                ->\tbusOffAttack,\n                    exploitArbitration\n\n        | exploitArbitration [Exponential(0.1)]\n                user info: \"Exploiting the arbitration mechanism for message prioritization in CAN bus can lead to invalidation of legitimate messages/DoS and allow message tampering/injection.\"\n                developer info: \"Charlie Miller and Chris Valasek, 'Jeep Hack' & Pal-Stefan Murvay and Bogdan Groza, Security shortcomings and countermeasures for the SAE J1939 commercial vehicle bus protocol (2017)\"\n                ->\tdataflows.maliciousTransmit, // This is different from the messageInjection attack because, if successful, allows direct malicious respond and request.\n                    deny\n\n        & busOffAttack [Exponential(0.1)]\n                user info: \"Exploits the error-handling scheme of in-vehicle networks to disconnect good/uncompromised ECUs or cause DoS on the entire network. This is an easy to mount attack. This is also applicable on CAN-FD.\"\n                developer info: \"Kyong-Tak Cho and Kang G. Shin, Error Handling of In-vehicle Networks Makes Them Vulnerable (2016)\"\n                ->\tnetworkECUs.offline,\n                    deny\n\n        # busOffProtection\n                user info: \"Based on the defence mechanism proposed by the related paper\"\n                developer info: \"Kyong-Tak Cho and Kang G. Shin, Error Handling of In-vehicle Networks Makes Them Vulnerable (2016)\"\n                ->\tbusOffAttack\n    }\n\n    asset J1939Network extends CANNetwork\n        user info: \"SAE J1939 is a CAN-based protocol employed in many heavy duty vehicles.\"\n    {\n        // Override\n        | accessNetworkLayer\n                user info: \"Network layer access implies the possibility to submit messages over the network. It does not imply the possibility to listen to others' trafic on the network.\"\n                ->\tdeny,\n                    eavesdrop,\n                    messageInjection,\n                    networkECUs.connect\n\n        | eavesdrop\n                user info: \"An attacker can eavesdrop/sniff the network.\"\n                developer info: \"Luca Dariz, Massimiliano Ruggeri, Gianpiero Costantino and Fabio Martinelli, A Survey over Low-Level Security Issues in Heavy Duty Vehicles (2016)\"\n                -> \tj1939dataflows.eavesdrop\n\n        | adversaryInTheMiddle\n                    user info: \"Attackers can sometimes intercept and tamper with communications.\"\n                +> \taccessNetworkLayer,\n                    eavesdrop,\n                    j1939dataflows.adversaryInTheMiddle\n\n        | deny\n                user info: \"A DoS attack can happen on a J1939 network with three possible ways as described on the paper below.\"\n                developer info: \"Subhojeet Mukherjee et al., Practical DoS Attacks on Embedded Networks in Commercial Vehicles (2016)\"\n                -> \tj1939dataflows.deny\n\n        | messageInjection\n                developer info: \"Overriding from parent because in this type of networks, messageInjection should not happen with the same way.\"\n\n        | j1939MessageInjection\n                user info: \"Inject messages to J1939 means that attacker can make requests towards other J1939 nodes or PGNs (Parameter Group Number) and after effort to maliciously respond.\"\n                ->\tj1939dataflows.request,\n                    j1939dataflows.maliciousRespond\n\n        | j1939Attacks\n                user info: \"This attack step should work as an intermediate step to reach J1939 network specific attacks.\"\n                ->\teavesdrop,\n                    _advancedJ1939Attacks,\n                    j1939dataflows.maliciousRespond // Respond is generally always supported but requests might not.\n\n        & _advancedJ1939Attacks @hidden\n                user info: \"The attacks on this step are advanced in way that if the J1939 protocol is not fully supported, then those might not be sucessful.\"\n                developer info: \"Pal-Stefan Murvay and Bogdan Groza, Security shortcomings and countermeasures for the SAE J1939 commercial vehicle bus protocol (2017)\"\n                ->\tdeny,\n                    j1939MessageInjection\n\n        # noFullJ1939Support\n                user info: \"If only limited parts of the J1939 protocol are used then the J1939 specific attacks might not work. For example, requests might not be supported.\"\n                developer info: \"Pal-Stefan Murvay and Bogdan Groza, Security shortcomings and countermeasures for the SAE J1939 commercial vehicle bus protocol (2017)\"\n                -> _advancedJ1939Attacks\n    }\n\n    asset FlexRayNetwork extends VehicleNetwork\n        user info: \"Represents the FlexRay network and the attacks that are possible on it.\"\n    {\n        | _networkSpecificAttack @hidden\n                user info: \"This attack step should work as an intermediate step to reach network specific attacks.\"\n                ->\tcommonTimeBaseAttack,\n                    exploitBusGuardian,\n                    sleepFrameAttack\n\n        | commonTimeBaseAttack [Gamma(2.0,5.0)]\n                user info: \"Send more than needed (> n/3 where n=# of nodes) SYNC messages within one communication cycle to make the whole network inoperable.\"\n                developer info: \"Marko Wolf, Security Engineering for Vehicular IT Systems, Vieweg+Teubner (2009)\"\n                ->\tdeny\n\n        | exploitBusGuardian [Exponential(0.15)]\n                user info: \"Utilize Bus Guardian for sending well-directed faked error messages to deactivate controllers. BusGuardian is hardened so much effort is needed.\"\n                developer info: \"Marko Wolf, Security Engineering for Vehicular IT Systems, Vieweg+Teubner (2009) & Philipp Mundhenk, Sebastian Steinhorst and Suhaib A. Fahmy, Security Analysis of Automotive Architectures using Probabilistic Model Checking (2015)\"\n                ->\tnetworkECUs.offline\n\n        & sleepFrameAttack [Exponential(0.1)]\n                user info: \"Send well-directed forged sleep frames to deactivate power-saving capable FlexRay controller.\"\n                developer info: \"Marko Wolf, Security Engineering for Vehicular IT Systems, Vieweg+Teubner (2009)\"\n                ->\tnetworkECUs.offline\n\n        # powerSavingIncapableNodes // Might need to be moved on ECU ??? But I leave it here for now...\n                user info: \"If FlexRay power-saving is not enabled then perform sleep frame attack.\"\n                developer info: \"Marko Wolf, Security Engineering for Vehicular IT Systems, Vieweg+Teubner (2009)\"\n                ->\tsleepFrameAttack\n    }\n\n    asset LINNetwork extends VehicleNetwork\n        user info: \"Represents the LIN bus network and the attacks that are possible on it\"\n    {\n        | _networkSpecificAttack @hidden\n                user info: \"This attack step should work as an intermediate step to reach network specific attacks.\"\n                ->\tinjectHeaderOrTimedResponse,\n                    injectBogusSyncBytes\n\n        | injectBogusSyncBytes [Exponential(0.1)]\n                user info: \"Sending frames with bogus synchronization bytes within the SYNCH field makes the local LIN network inoperative or causes at least serious malfunctions\"\n                developer info: \"Marko Wolf, Security Engineering for Vehicular IT Systems, Vieweg+Teubner (2009)\"\n                -> deny\n\n        | gainLINAccessFromCAN\n                // This attack is reached from ECU\n                user info: \"There are techniques that make it easy to gain access to the LIN bus through a CAN-bus node.\"\n                developer info: \"Junko Takahashi et al., Automotive Attacks and Countermeasures on LIN-Bus (2017)\"\n                ->\taccessNetworkLayer\n\n        & injectHeaderOrTimedResponse [Exponential(0.1)]\n                user info: \"This is a specific attack that can happen on LIN bus exploiting the error handling mechanism, but it is not so easy.\"\n                developer info: \"Junko Takahashi et al., Automotive Attacks and Countermeasures on LIN-Bus (2017)\"\n                ->\tdataflows.maliciousTransmit // This is different from the messageInjection attack because, if successful, allows direct malicious respond and request.\n\n        # headerOrTimedResponseProtection\n                user info: \"Based on the defense mechanism proposed by the related paper.\"\n                developer info: \"Junko Takahashi et al., Automotive Attacks and Countermeasures on LIN-Bus (2017)\"\n                ->\tinjectHeaderOrTimedResponse\n\n        // LIN is also unprotected against forged messages. So messageInjection exists also here.\n    }\n}\n\ncategory Communication {\n\n    abstract asset Dataflow\n        user info: \"Dataflow is a channel that contains Data in transit.\"\n    {\n        | eavesdrop\n                user info: \"An attacker that eavesdrops on the data flow, can access the contained data. That data may, in turn, be encrypted, thus preventing a breach of confidentiality.\"\n                ->\tdata.read\n\n        | deny\n                user info: \"A denial-of-service-attack on the dataflow makes the contained data inaccessible. The information may, however also be available elsewhere.\"\n                ->\tdata.delete\n\n        | adversaryInTheMiddle\n\n        | request\n\n        | respond\n\n        | maliciousTransmitNoIDPS\n\n        | maliciousTransmitBypassConflitionProtection\n\n        | maliciousTransmitBypassIDPS\n\n        | maliciousTransmit\n\n        & eavesdropId\n\n        & eavesdropAndBypassMsgConflictionProtection\n    }\n\n    asset ConnectionOrientedDataflow extends Dataflow\n        user info: \"A connection oriented dataflow is a unicast/multicast transmission that contains Data in transit.\"\n    {\n        | adversaryInTheMiddle\n                user info: \"An attacker that man-in-the-middles the data flow, can control the contained data. That data may, in turn, be encrypted and authenticated, thus preventing a breach of confidentiality and integrity.\"\n                +>\teavesdrop,\n                    deny,\n                    request,\n                    respond,\n                    data.write,\n                    data.read,\n                    data.delete\n\n        | request\n                ->\tservices.networkConnectUninspected\n\n        | respond\n                ->\tclients.networkConnectUninspected\n\n        | maliciousRespond [Exponential(0.614)]\n                user info: \"Confliction protection mechanism does not prevent malicious responds, but it typically takes time for the attacker to bypass it.\"\n                -> respond\n    }\n\n    asset ConnectionlessDataflow extends Dataflow\n        user info: \"A connectionless dataflow is a multicast/broadcast transmission that contains Data in transit.\"\n        developer info: \"In a broadcast network, there is no need to have clients because everyone receives the message. Additionally, in an event-driven network like CAN, there is no need for request.\"\n    {\n        | eavesdrop\n                user info: \"An attacker that eavesdrops on the data flow, can access the contained data. That data may, in turn, be encrypted, thus preventing a breach of confidentiality.\"\n                -> \tdata.read\n\n        | adversaryInTheMiddle\n                user info: \"An attacker that man-in-the-middles the data flow, can control the contained data. That data may, in turn, be encrypted and authenticated, thus preventing a breach of confidentiality and integrity.\"\n                +> \teavesdrop,\n                    deny,\n                    data.write,\n                    data.read,\n                    data.delete,\n                    transmit // Acts like IDPS is disabled, because MitM attacks are not easily, or not at all, detected by IDPS.\n                    // This agrees with the current securiCore implementation. MiTM leads to direct request/respond.\n\n        | maliciousTransmitNoIDPS\n                user info: \"Perform a malicious transmission when IDPS is disabled on GatewayECU. However even when IDPS is off effort is needed to bypass message confliction mechanism.\"\n                ->\tmaliciousTransmitBypassConflitionProtection\n\n        | maliciousTransmitBypassConflitionProtection [Exponential(0.314)]\n                user info: \"Confliction protection mechanism does not prevent malicious transmissions, but it typically takes time for the attacker to bypass it.\"\n                ->  transmit,\n                    eavesdropAndBypassMsgConflictionProtection\n\n        | maliciousTransmitBypassIDPS [Exponential(0.613)]\n                user info: \"IDPS's does not prevent all malicious transmissions, and it typically takes time for the attacker to bypass it.\"\n                developer info: \"The time to bypass a tuned and updated IDPS is studied in 'T. Sommestad, H. Holm, M. Ekstedt, Estimates of success rates of remote arbitrary code execution attacks, Information Management & Computer Security (2012)' and 'H.Holm, T.Sommestad, U.Franke, M.Ekstedt, Success rate of remote code execution attacks - expert assessments and observations, Journal of Universal Computer Science 18 (6) (2012)'\"\n                ->\ttransmit\n\n        | maliciousTransmit\n                user info: \"The act of trying to maliciously transmit. This happens when IDPS is not in place so the attacker can make malicious transmissions unobstructed. Reached only from network specific attacks and network service.\"\n                ->\ttransmit\n\n        | transmit\n                user info: \"The result of a successful transmit.\"\n                ->\ttransmitter.networkConnectUninspected\n\n        & eavesdropId\n                user info: \"The attacker was able to eavesdrop the unique ID of the message.\"\n                ->  dataflowId.read\n\n        & eavesdropAndBypassMsgConflictionProtection\n                user info: \"The attacker was able to eavesdrop the unique ID of the message while he also managed to bypass the confliction protection mechanism .\"\n                ->  dataflowId.read\n    }\n}\n\ncategory Security {\n\n    asset VehicularIdentity extends Identity\n        developer info: \"Extended from coreLang.\"\n    {\n        | assume\n                user info: \"A compromised identity leads to authentication on machines, access rights on data and also authentication on other connected identities.\"\n                +> \taccessedMachines.authenticate,\n                    connectMachines.authenticate,\n                    readPrivData.authorizedRead,\n                    writePrivData.authorizedWrite,\n                    deletePrivData.authorizedDelete,\n                    childId.attemptAssume\n    }\n\n    asset VehicularCredentials extends Credentials\n        developer info: \"Extended from coreLang.\"\n    {\n        | read\n                +> \tidentities.attemptAssume,\n                    readFirmwareAccessKey\n\n        | readFirmwareAccessKey\n                user info: \"The action of reading a stored firmware validation/access key.\"\n                ->  identities[VehicularIdentity].connectMachines.passFirmwareValidation,\n                    identities[VehicularIdentity].connectMachines.passUdsFirmwareModification,\n                    identities[VehicularIdentity].accessedMachines.passFirmwareValidation,\n                    identities[VehicularIdentity].accessedMachines.passUdsFirmwareModification\n    }\n\n    asset MessageID\n        user info: \"Represents the ID that resides on the header of a transmitted packet/message/dataflow.\"\n    {\n        | read\n                user info: \"The action of reading the message ID transfered by the dataflow.\"\n                ->  dataflow.receiver.impersonateId\n    }\n\n}\n\nassociations {\n    Machine\t[hostMachine]                   0..1 <-- machineExecution       --> *           [machineExecutedApps]   VehicularApplication\n    VehicularIdentity \t[vehicularIdentity]     * <-- AccessPrivileges\t        --> *           [accessedMachines]      Machine\n        user info: \"These identities grant access to the machine.\"\n    VehicularIdentity \t[connectPrivileges]     * <-- ConnectionPrivileges      --> *           [connectMachines]       Machine\n        user info: \"These privileges are granted to anyone who connects to a machine.\"\n    VehicularIdentity \t[assignedVehicularIdentity]     * <-- Assignment                --> *           [assignedApplications]  VehicularApplication\n        user info: \"Applications needs to be granted certain privileges when executing on a platform. When the application is compromised, the attacker gains its privileges on the platform.\"\n    //VehicularIdentity     [vehicularIdentities]         * <-- Credentials               --> *           [vehicularCredentials]  VehicularCredentials\n    VehicleNetwork \t[networks]                      * <-- Communication             --> *           [dataflows]             Dataflow\n        user info: \"In general, networks use dataflows for communication.\"\n    //VehicleNetwork     [machineNetworks]               * <-- MachineConnection         --> *           [networkMachines]       Machine\n    //     user info: \"Machines can be connected to networks. If services are not explicitly connected to other networks, it is assumed that they are communicating over the physically connected one.\"\n    J1939Network        [j1939networks]         * <-- J1939Communication        --> *           [j1939dataflows]         ConnectionOrientedDataflow\n        user info: \"A J1939 network uses connection oriented dataflows for communication although it is a CAN-based network.\"\n    Dataflow    [dataflow]                      0..1 <-- DataTransfer           --> 0..1        [data]                  Data\n        user info: \"The dataflow transmits data.\"\n        developer info: \"A dataflow cannot feature multiple data, as these may have different properties, e.g. one authenticated and one not.\"\n    Dataflow    [dataflows]                     * <-- Request                   --> *           [clients]               NetworkClient\n    Dataflow\t[dataflows]                     * <-- Response                  --> *           [services]              NetworkService\n        user info: \"A network service or a network client makes use of dataflows that can be either connection oriented or connectionless.\"\n    ConnectionlessDataflow      [dataflows]     * <-- Transmission              --> 0..1        [transmitter]           TransmitterService\n        user info: \"A transmitter service on a vehicle network uses connectionless dataflows for transmitting data.\"\n    ConnectionlessDataflow      [dataflows]     * <-- Transmission              --> *           [receiver]              VehicleNetworkReceiver\n        user info: \"A receiver uses connectionless dataflows for receiving data on a vehicle network.\"\n    ConnectionlessDataflow      [dataflow]      * <-- DataflowID                --> 0..1        [dataflowId]            MessageID\n        user info: \"Each bus network dataflow has a unique identifier.\"\n    IDPS        [idps]                          0..1 <-- IDPSProtection         --> 1\t        [idpsGatewayECU]        GatewayECU\n        user info: \"An IDPS can be connected to a GatewayECU. Here it is modeled as a centralized inline IDPS.\"\n    Machine     [connectionVulnerableMachine]   * <-- ConnectionVulnerability   --> 0..1        [connectionVulnerabilities]     Vulnerability\n    Machine\t[accessVulnerableMachine]       * <-- AccessVulnerability       --> 0..1        [accessVulnerabilities]         Vulnerability\n    VehicleNetwork      [vehiclenetworks]       * <-- EcuConnection             --> *           [networkECUs]           ECU\n    VehicleNetwork \t[trafficVNetworks]      * <-- GatewayConnection         --> *           [trafficGatewayECU]     GatewayECU\n    ECU         [hardware]                      1 <-- FirmwareExecution         --> 0..1        [firmware]              Firmware\n        user info: \"Every ECU can have (up to one) firmware running on it.\"\n    ECU\t\t[firmwareTarget]                1 <-- FirmwareUpdate            --> 0..1        [firmwareUpdater]       FirmwareUpdaterService\n        user info: \"Every ECU can have a firmware updater UDS service responsible for handling the firmware updates.\"\n    ECU \t[hardwarePlatform]              0..1 <-- SensorsOrActuators     --> *           [sensorsOrActuators]    SensorOrActuator\n        user info: \"An ECU can be connected with physical machines such as actuators and/or sensors.\"\n    VehicleNetwork      [fwUpdaterNetworks]     0..1 <-- FwUpdaterServices      --> *           [networkFwUpdater]      FirmwareUpdaterService\n        user info: \"A FirmwareUpdaterService can be connected to a vehicle network for accepting incoming connections.\"\n}\n"}
{"instruction": "Given this cyber incident, write its equivalent representation in Meta Attack Language.", "input": "", "output": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.trainingLang\"\n#version: \"1.0.0\"\n\ncategory Basic {\n\n\n  asset Host {\n\n    # notPresent [Disabled]\n      -> connect,\n         access\n\n    | authenticate\n      -> access\n\n    & connect\n      -> access\n\n    & access\n      -> data.read,\n         data.modify,\n         networks.access\n\n  }\n\n  asset Data {\n\n    # notPresent [Disabled]\n      -> read,\n         modify\n\n    & read\n\n    & modify\n\n  }\n\n  asset Network {\n\n    | access\n      -> hosts.connect,\n         toNetworks.access\n\n  }\n\n  asset User {\n\n    # notPresent [Disabled]\n      -> compromise\n\n    & compromise\n      -> hosts.authenticate\n\n    | phishing\n      -> compromise\n\n  }\n\n}\n\nassociations {\n  Network [fromNetworks] * <-- InterNetworkConnectivity --> * [toNetworks] Network\n  Host [hosts] * <-- HostsInNetworks --> * [networks] Network\n  User [users] * <-- UsersOnHosts --> * [hosts] Host\n  Data [data] * <-- DataOnHosts --> * [hosts] Host\n}\n"}
{"instruction": "Translate this attack story into valid Meta Attack Language format.", "input": "", "output": "/*\n * Copyright 2020-2021 icsLang contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.icsLang\"\n#version: \"0.0.2\"\n\ninclude \"icsLang.mal\"\n"}
{"instruction": "Write the Meta Attack Language structure for the following description.", "input": "", "output": "/*\n * Copyright 2019-2022 coreLang contributors <https://mal-lang.org/coreLang/contributors.html>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ncategory Networking {\n\n    asset Network\n      user info: \"A network (zone) is a set of network accessible applications and data.\"\n      developer info: \"The network asset tries to cover all the levels of the OSI stack in a very abstract and compact way (i.e. it tries to represent all the OSI layers). For example it will try to cover both ARP attacks (that are Level 2) but also DNS/HTTP spoofing attacks (that are Level 7).\"\n    {\n      let outboundAllowedConnections = (netConnections \\/ outgoingNetConnections)\n      let inboundAllowedConnections = (netConnections \\/ ingoingNetConnections \\/ diodeIngoingNetConnections)\n      let allNetConnections = (netConnections \\/ ingoingNetConnections \\/ outgoingNetConnections \\/ diodeIngoingNetConnections)\n      let allowedApplicationConnectionsApplications = (applications \\/ allNetConnections().applications)\n\n      | physicalAccess @entrypoint {C, A}\n        user info: \"Attacker has physical access on the network. This means they can cut wires/fibers, connect using iLOs, eavesdrop and get proper network access.\"\n        modeler info: \"This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets.\"\n        ->  deny,\n            attemptAccessUninspectedFromPhysicalAccess,\n            attemptAccessInspectedFromPhysicalAccess,\n            bypassEavesdropDefenseFromPhysicalAccess,\n            bypassAdversaryInTheMiddleDefenseFromPhysicalAccess\n\n      | bypassEavesdropDefenseFromPhysicalAccess\n        user info: \"The eavesdrop defense can be bypassed more easily if the attacker has physical access to the network. This attack step will add its impact to the unconditional bypass.\"\n        ->  eavesdropDefenseBypassed\n\n      | bypassAdversaryInTheMiddleDefenseFromPhysicalAccess\n        user info: \"The adversary in the middle defense can be bypassed more easily if the attacker has physical access to the network. This attack step will add its impact to the unconditional bypass.\"\n        ->  adversaryInTheMiddleDefenseBypassed\n\n      # networkAccessControl\n        user info: \"Access control protects from unauthorized physical access on the network.\"\n        ->  accessControlBypassed\n\n      | bypassAccessControl [VeryHardAndUncertain]\n        user info: \"If access control is enabled, the attacker can still try to bypass it and gain access on the network.\"\n        ->  accessControlBypassed\n\n      | accessControlBypassed @hidden\n        developer info: \"Access control is bypassed either because it was not set, the attacker was able to circumvent it through additional effort.\"\n        ->  successfulAccessUninspectedFromPhysicalAccess,\n            successfulAccessInspectedFromPhysicalAccess\n\n      | attemptAccessUninspectedFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulAccessUninspectedFromPhysicalAccess,\n            bypassAccessControl\n\n      | attemptAccessInspectedFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulAccessInspectedFromPhysicalAccess,\n            bypassAccessControl\n\n      & successfulAccessUninspectedFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  accessUninspected\n\n      & successfulAccessInspectedFromPhysicalAccess @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  accessInspected\n\n      | accessUninspected\n        user info: \"Uninspected access provides connect to all reachable applications without any restrictions.\"\n        ->  outboundAllowedConnections().attemptConnectToApplicationsUninspected,\n            applications.networkConnectUninspected,\n            networkForwardingUninspected,\n            attemptReverseReach,\n            accessNetworkData,\n            deny\n\n      | accessInspected\n        user info: \"Inspected access provides connect to all reachable applications, but with limitations.\"\n        ->  outboundAllowedConnections().attemptConnectToApplicationsInspected,\n            applications.networkConnectInspected,\n            networkForwardingInspected,\n            accessNetworkData,\n            deny\n\n      | attemptReverseReach @hidden\n        developer info: \"Intermediate attack step to allow for defenses.\"\n        ->  reverseReach\n\n      & reverseReach @hidden\n        developer info: \"Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates toward outgoing or bidirectional communications.\"\n        ->  inboundAllowedConnections().attemptReverseReach,\n            applications.attemptReverseReach\n\n      | networkForwardingUninspected @hidden\n        developer info: \"By using the allowed connections (connection rules), uninspected forwarding from one network to another network or applications can happen.\"\n          ->  outboundAllowedConnections().attemptAccessNetworksUninspected,\n              outboundAllowedConnections().attemptConnectToApplicationsUninspected,\n              networkForwardingInspected\n\n      | networkForwardingInspected @hidden\n        developer info: \"By using the allowed connections (connection rules), inspected forwarding from one network to another network or applications can happen.\"\n          ->  outboundAllowedConnections().attemptAccessNetworksInspected,\n              outboundAllowedConnections().attemptConnectToApplicationsInspected\n\n      | deny {A}\n        user info: \"If a DoS is performed it affects, the applications communicating over the network as well as the connected application.\"\n        ->  allNetConnections().attemptDeny,\n            allowedApplicationConnectionsApplications().denyFromNetworkingAsset\n\n      | accessNetworkData @hidden\n        developer info: \"Access also the data that are network-wide available.\"\n        ->  attemptEavesdrop,\n            attemptAdversaryInTheMiddle\n\n      # eavesdropDefense\n        user info: \"This defense protects from eavesdrop attacks. If this defense is disabled, then it is equivalent to the network being considered a broadcast network.\"\n        modeler info: \"If this defense is enabled, attacks such as ARP spoofing should however, still be possible.\"\n        ->  eavesdropDefenseBypassed\n\n      | bypassEavesdropDefense [VeryHardAndUncertain]\n        user info: \"The eavesdrop defense can be bypassed.\"\n        ->  eavesdropDefenseBypassed\n\n      | eavesdropDefenseBypassed @hidden\n        developer info: \"The Eavesdrop defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort.\"\n        ->  successfulEavesdrop\n\n      | attemptEavesdrop @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulEavesdrop,\n            bypassEavesdropDefense\n\n      & successfulEavesdrop @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  eavesdrop\n\n      | eavesdrop {C}\n        user info: \"An attacker that performs an eavesdrop attack on a network tries to access all the transferred data over that network.\"\n        ->  transitData.attemptRead\n\n      # adversaryInTheMiddleDefense\n        user info: \"This defense protects against adversary-in-the-middle (AitM) attacks that are originating either form the network layer (like ARP spoofing) or by manipulating the higher network layers (like DNS poisoning).\"\n        ->  adversaryInTheMiddleDefenseBypassed\n\n      | bypassAdversaryInTheMiddleDefense [VeryHardAndUncertain]\n        user info: \"The adversary in the middle defense can be bypassed.\"\n        ->  adversaryInTheMiddleDefenseBypassed\n\n      | adversaryInTheMiddleDefenseBypassed @hidden\n        developer info: \"The adversary in the middle defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort.\"\n        ->  successfulAdversaryInTheMiddle\n\n      | attemptAdversaryInTheMiddle @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulAdversaryInTheMiddle,\n            bypassAdversaryInTheMiddleDefense\n\n      & successfulAdversaryInTheMiddle @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  adversaryInTheMiddle\n\n      | adversaryInTheMiddle {C, I}\n        user info: \"An attacker that performs a AitM attack on a network tries to read and modify all the transferred data over that network.\"\n        ->  eavesdrop,\n            transitData.attemptWrite,\n            transitData.attemptApplicationRespondConnect\n    }\n\n    asset RoutingFirewall extends Application\n      user info: \"A routing firewall specifies a router with firewall capabilities that connects many networks.\"\n    {\n      | deny {A}\n       user info: \"A DoS attack should cascade on the connected networks and associated connections\"\n        ->  connectionRules.attemptDeny\n\n      | fullAccess {I, A}\n        developer info: \"If full access is achieved on RoutingFirewall then it is 0wned and all connections can be allowed! This can happen by compromising the manager application.\"\n        +>  (connectionRules.networks \\/ connectionRules.outNetworks \\/ connectionRules.inNetworks \\/ connectionRules.diodeInNetworks).accessUninspected,\n            connectionRules.applications.networkConnectUninspected\n    }\n\n    asset ConnectionRule\n      user info: \"This asset is used to model firewall rules between Applications and/or Networks. The association selected (bi/uni-directional) only describes the connection initiation.\"\n      developer info: \"This asset is mainly used to model the functionality of a network connection through a firewall. If Data is added, then it also models the data in transit.\"\n    {\n      let allApplications = (applications \\/ inApplications \\/ outApplications)\n      let senderApplications = (applications \\/ outApplications)\n      let receiverApplications = (applications \\/ inApplications)\n\n      # restricted [Disabled]\n        user info: \"The restricted defense can be used to probabilistically model the likelihood of both the protocols required by the attack being enabled or the existence of the ConnectionRule altogether.\"\n        ->  restrictedBypassed\n\n      | bypassRestricted [VeryHardAndUncertain]\n        user info: \"The restricted defense can be bypassed.\"\n        ->  restrictedBypassed\n\n      | restrictedBypassed @hidden\n        developer info: \"The restricted defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort.\"\n        ->  successfulAccessNetworksUninspected,\n            successfulAccessNetworksInspected,\n            connectToApplicationsUninspected,\n            connectToApplicationsInspected,\n            deny,\n            reverseReach\n\n      # payloadInspection [Disabled]\n        user info: \"If enabled, then the traffic is considered to be inspected and filtered by an IDPS that can detect and stop malicious payloads, effectively allowing only legitimate communication(i.e. network-level vulnerabilities cannot be exploited, unsafe actions that the user may taken that would benefit the attacker are also prevented).\"\n        ->  payloadInspectionBypassed\n\n      | bypassPayloadInspection [VeryHardAndUncertain]\n        user info: \"Payload inspection can be bypassed.\"\n        ->  payloadInspectionBypassed\n\n      | payloadInspectionBypassed @hidden\n        developer info: \"Payload inspection is bypassed either because it was not set, the attacker was able to circumvent it through additional effort.\"\n        ->  successfulAccessNetworksUninspected,\n            connectToApplicationsUninspected,\n            reverseReach\n\n      // All the hidden attack steps below are hidden because they are just used for the internal mechanics of the ConnectionRules\n      | attemptReverseReach @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  reverseReach,\n            bypassRestricted,\n            bypassPayloadInspection\n\n      & reverseReach @hidden\n        developer info: \"Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates via outgoing or bidirectional communications.\"\n        ->  senderApplications().attemptReverseReach,\n            (networks \\/ outNetworks).attemptReverseReach\n\n      | attemptAccessNetworksUninspected @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulAccessNetworksUninspected,\n            bypassRestricted,\n            bypassPayloadInspection\n\n      | attemptAccessNetworksInspected @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  successfulAccessNetworksInspected,\n            bypassRestricted\n\n      & successfulAccessNetworksUninspected @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  accessNetworksUninspected\n\n      & successfulAccessNetworksInspected @hidden\n        developer info: \"Intermediate attack step to model defenses.\"\n        ->  accessNetworksInspected\n\n      | accessNetworksUninspected\n        developer info: \"Access all networks that are associated with this ConnectionRule, without any restriction due to inspection.\"\n        ->  (networks  \\/ inNetworks  \\/ diodeInNetworks).accessUninspected,\n            accessNetworksInspected\n\n      | accessNetworksInspected\n        developer info: \"Access all networks that are associated with this ConnectionRule, but taking into account that the traffic payload is being inspected.\"\n        ->  (networks  \\/ inNetworks  \\/ diodeInNetworks).accessInspected\n\n      | attemptConnectToApplicationsUninspected @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  connectToApplicationsUninspected,\n            bypassRestricted,\n            bypassPayloadInspection\n\n      | attemptConnectToApplicationsInspected @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  connectToApplicationsInspected,\n            bypassRestricted\n\n      & connectToApplicationsUninspected @hidden\n        developer info: \"Connect to all the (server) Applications that are associated with this ConnectionRule, without any restriction due to inspection.\"\n        ->  receiverApplications().networkConnectUninspected,\n            receiverApplications().networkConnectInspected\n\n      & connectToApplicationsInspected @hidden\n        developer info: \"Connect to all the (server) Applications that are associated with this ConnectionRule, but taking into account that the traffic payload is being inspected. This attack step is used to allow legitimate traffic even when payload inspection is enabled on the connection.\"\n        ->  receiverApplications().networkConnectInspected\n\n      | attemptDeny @hidden\n        developer info: \"Intermediate attack step to allow for defenses and trigger bypasses.\"\n        ->  deny,\n            bypassRestricted\n\n      & deny {A}\n        user info: \"If a connection rule is denied it affects the applications communicating over it.\"\n        ->  allApplications().denyFromNetworkingAsset\n    }\n}\n\nassociations {\n  // ### Networking associations\n  RoutingFirewall  [routingFirewalls]  0..1 <-- FirewallConnectionRule --> *    [connectionRules]       ConnectionRule\n      user info: \"A routing firewall has routing or firewall rules specified by connections between networks or applications respectively.\"\n  RoutingFirewall  [managedRoutingFw]     * <-- ManagedBy             --> 0..1 [managerApp]             Application\n      user info: \"A routing firewall can have an admin/manager interface (application) that is accessible from a network location.\"\n  Network          [networks]             * <-- NetworkExposure       --> *    [applications]           Application\n      user info: \"An application can communicate / be exposed on a network.\"\n      modeler info: \"This is DEPRECATED and should only be used by fully aware modelers.\"\n      developer info: \"This can equivalently be modeled using a ConnectionRule but this direct approach should be prefered in the case where the application is “located” in the same network as the host on which it is running.\"\n  Application      [applications]         * <-- ApplicationConnection --> *    [appConnections]         ConnectionRule\n      user info: \"An application can communicate over one or more (mesh type) bidirectional connections.\"\n      modeler info: \"ConnectionRules associated with Applications are practically expressing a traffic flow.\"\n  Application      [inApplications]       * <-- InApplicationConnection --> *  [ingoingAppConnections]  ConnectionRule\n      user info: \"Two or more applications can also be inter-connected via a uni-directional connection. In means that this is the server side application, awaiting incoming connections.\"\n  Application      [outApplications]      * <-- OutApplicationConnection --> * [outgoingAppConnections] ConnectionRule\n      user info: \"Two or more applications can also be inter-connected via a uni-directional connection. Out means that this is the client side application initiating connections.\"\n  Network          [networks]             * <-- NetworkConnection     --> *    [netConnections]         ConnectionRule\n      user info: \"Two or more networks can also be inter-connected via a bidirectional connection.\"\n  Network          [inNetworks]           * <-- InNetworkConnection   --> *    [ingoingNetConnections]  ConnectionRule\n      user info: \"Two or more networks can also be inter-connected via a uni-directional connection. In means that ingoing traffic to the network is allowed.\"\n  Network          [outNetworks]          * <-- OutNetworkConnection  --> *    [outgoingNetConnections] ConnectionRule\n      user info: \"Two or more networks can also be inter-connected via a uni-directional connection. Out means that outgoing traffic from the network is allowed.\"\n  Network          [diodeInNetworks]      * <-- DiodeInNetworkConnection --> * [diodeIngoingNetConnections] ConnectionRule\n      user info: \"Two or more networks can also be inter-connected via a uni-directional connection that acts like a diode. That means that no responses can come back after connection initiation.\"\n}\n"}
{"instruction": "Represent the attack behavior below in your custom Meta Attack Language.", "input": "", "output": "/*\n * Copyright 2022-2022 vehicleLang contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#id: \"org.mal-lang.vehicleLang\"\n#version: \"2.0.0\"\n\ninclude \"org.mal-lang.coreLang/coreLang.mal\"\ninclude \"vehicleLang.mal\"\n"}
{"instruction": "Use Meta Attack Language to capture the steps described here.", "input": "", "output": "category IcsControlResources{\n\n    asset EngineeringWorkstation extends IcsApplication \n        user info: \"The engineering workstation is usually a high-end very reliable computing platform designed for configuration, maintenance and diagnostics of the control system applications and other control system equipment.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Engineering_Workstation\"\n      {\n        | fullAccess @Override\n          +> reprogramControllers\n\n        | reprogramControllers\n          user info: \"Reprogram all of the controllers that the engineering station has access to.\"\n          modeler info: \"This is meant to simulate situations where how the controllers are programmed is unknown, irrelevant, or over a temporary connection. Otherwise the Network and ConnectionRule assets should be used to propagate the attack.\"\n          ->  programmableControllers.attemptManipulation\n      }\n\n}\n\nassociations {\n  EngineeringWorkstation [programmingWorkstations]  * <-- programLogic     --> *   [programmableControllers] Controller\n      user info: \"Engineering workstations are responsible for programming the logic on controllers used both in the industrial control processes and the safety systems.\"\n}\n"}
{"instruction": "Model this cybersecurity attack using Meta Attack Language syntax.", "input": "", "output": "category Communication {\n\n\tasset CoreEncryptedData extends Data\n \t\tuser info: \"Data is a concrete, syntactic representation of Information at rest.\"\n\t\tdeveloper info: \"Extended from coreLang.\"\n   {\n\n\t   & authorizedRead\n\t      user info: \"Access and authentication will allow reading of data.\"\n\t      -> readEncrypted\n\n\t   & authorizedWrite\n\t      user info: \"Access and authentication will allow writing of data.\"\n\t      -> writeEncrypted\n\n\t\t& readEncrypted\n\t\t\t->\tread\n\n\t\t& writeEncrypted\n\t\t\t-> write\n\n        E decryptionKeysExist\n      \t\tuser info: \"If any decryption keys exist, this defense step is compromised, but if not, this will prevent readEncrypted from being reached.\"\n      \t\tdeveloper info: \"Without this step, readEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n         \t<- decryptionKeys\n         \t-> readEncrypted\n\n\t   E encryptionKeysExist\n\t      user info: \"If any encryption keys exist, this defense step is compromised, but if not, this will prevent witeEncrypted from being reached.\"\n\t      developer info: \"Without this step, writeEncrypted will, in the case of no modelled keys, be compromised, which is counterintuitive.\"\n          <- encryptionKeys\n\t\t  -> writeEncrypted\n\t\t}\n}\n\ncategory Security{\n\n\tasset CryptographicKey extends Data \n\t\tdeveloper info: \"Extended from coreLang.\"\n\t{\n\t\t| read\n\t\t -> decryptedData.readEncrypted,\n\t\t\tencryptedData.writeEncrypted\n\n\t}\n\n}\n\nassociations {\n\tCoreEncryptedData\t[decryptedData]\t\t\t\t*\t<-- Decryption\t\t\t\t\t\t-->\t*\t[decryptionKeys]\t\t\t\tCryptographicKey\n   \tCoreEncryptedData\t[encryptedData]\t\t\t\t*\t<-- Encryption\t\t\t\t\t\t-->\t*\t[encryptionKeys]\t\t\t\tCryptographicKey\n}\n"}
{"instruction": "Write code in Meta Attack Language to describe the attack below.", "input": "", "output": "category IcsControlResources{\n\n    asset Controller extends IcsApplication \n        user info: \"Controllers utilize a programmable logic-based application that provides scanning and writing of data to and from the IO interface modules and communicates with the control system network via various communications methods, including serial and network communications.\"\n        developer info: \"https://collaborate.mitre.org/attackics/index.php/Field_Controller/RTU/PLC/IED\"\n      {\n        # physicalLock\n          user info: \"A controller can have a physical lock in place that disallows modifications on the programmable logic, thus making it invulnerable to manipulations.\"\n          ->  manipulate\n\n      }\n\n}\n"}
